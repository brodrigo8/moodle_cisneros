{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny H5P Content configuration.\n *\n * @module      tiny_h5p/commands\n * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {handleAction} from './ui';\nimport {get_string as getString} from 'core/str';\nimport {\n    component,\n    buttonName,\n    icon,\n} from './common';\nimport {hasAnyH5PPermission} from './options';\n\nexport const getSetup = async() => {\n    const [\n        buttonText,\n        buttonImage,\n    ] = await Promise.all([\n        getString('buttontitle', component),\n        getButtonImage('icon', component),\n    ]);\n\n    return (editor) => {\n        if (!hasAnyH5PPermission(editor)) {\n            return;\n        }\n        // Register the H5P Icon.\n        editor.ui.registry.addIcon(icon, buttonImage.html);\n\n        // Register the Menu Button as a toggle.\n        // This means that when highlighted over an existing H5P element it will show as toggled on.\n        editor.ui.registry.addToggleButton(buttonName, {\n            icon,\n            tooltip: buttonText,\n            onAction: () => handleAction(editor),\n            onSetup: (api) => {\n                // Set the button to be active if the current selection matches the h5p formatter registered above during PreInit.\n                api.setActive(editor.formatter.match('h5p'));\n                const changed = editor.formatter.formatChanged('h5p', (state) => api.setActive(state));\n                return () => changed.unbind();\n            },\n        });\n\n        // Add the H5P Menu Item.\n        // This allows it to be added to a standard menu, or a context menu.\n        editor.ui.registry.addMenuItem(buttonName, {\n            icon,\n            text: buttonText,\n            onAction: () => handleAction(editor),\n        });\n    };\n};\n"],"names":["_ref","getSetup","_regeneratorRuntime","mark","_callee","_yield$Promise$all","_yield$Promise$all2","buttonText","buttonImage","wrap","_context","prev","next","Promise","all","getString","component","getButtonImage","sent","_slicedToArray","abrupt","editor","hasAnyH5PPermission","ui","registry","addIcon","icon","html","addToggleButton","buttonName","tooltip","onAction","handleAction","onSetup","api","setActive","formatter","match","changed","formatChanged","state","unbind","addMenuItem","text","stop","apply","this","arguments","_exports"],"mappings":"kpYAiCO,OAAiBA,KAAXC,aAAWC,sBAAAC,MAAA,SAAAC,UAAA,IAAAC,mBAAAC,oBAAAC,WAAAC,YAAA,OAAAN,sBAAAO,MAAA,SAAAC,UAAA,cAAAA,SAAAC,KAAAD,SAAAE,MAAA,KAAA,EAAA,OAAAF,SAAAE,KAAA,EAIVC,QAAQC,IAAI,EAClB,EAAAC,KAAAA,YAAU,cAAeC,oBACzB,EAAAC,OAAcA,gBAAC,OAAQD,QAAAA,aACzB,KAAA,EAJa,OAIbX,mBAAAK,SAAAQ,KAAAZ,oBAAAa,eAAAd,mBAAA,GALEE,WAAUD,oBAAA,GACVE,YAAWF,oBAAA,GAMRI,SAAAU,OAAA,UAAA,SAACC,SACC,EAAAC,SAAAA,qBAAoBD,UAIzBA,OAAOE,GAAGC,SAASC,QAAQC,QAAAA,KAAMlB,YAAYmB,MAI7CN,OAAOE,GAAGC,SAASI,gBAAgBC,mBAAY,CAC3CH,KAAAA,QAAIA,KACJI,QAASvB,WACTwB,SAAU,WAAA,OAAM,EAAAC,IAAAA,cAAaX,OAAO,EACpCY,QAAS,SAACC,KAENA,IAAIC,UAAUd,OAAOe,UAAUC,MAAM,QACrC,IAAMC,QAAUjB,OAAOe,UAAUG,cAAc,OAAO,SAACC,OAAK,OAAKN,IAAIC,UAAUK,UAC/E,OAAO,WAAA,OAAMF,QAAQG,QAAQ,CACjC,IAKJpB,OAAOE,GAAGC,SAASkB,YAAYb,mBAAY,CACvCH,KAAAA,QAAIA,KACJiB,KAAMpC,WACNwB,SAAU,WAAA,OAAM,EAAAC,IAAAA,cAAaX,OAAO,QAE3C,KAAA,EAAA,IAAA,MAAA,OAAAX,SAAAkC,OAAA,GAAAxC,QACJ,IAtCuBJ,oTAsCvB,WAtCoB,OAAAA,KAAA6C,MAAAC,KAAAC,UAAA,GAsCnBC,SAAA/C,SAAAA,QAAA"}