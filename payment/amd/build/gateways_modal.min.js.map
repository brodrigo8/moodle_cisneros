{"version":3,"file":"gateways_modal.min.js","sources":["../src/gateways_modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Contain the logic for the gateways modal.\n *\n * @module     core_payment/gateways_modal\n * @copyright  2019 Shamim Rezaie <shamim@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\nimport {getAvailableGateways} from './repository';\nimport Selectors from './selectors';\nimport ModalEvents from 'core/modal_events';\nimport PaymentEvents from 'core_payment/events';\nimport {add as addToast, addToastRegion} from 'core/toast';\nimport Notification from 'core/notification';\nimport ModalGateways from './modal_gateways';\n\n/**\n * Register event listeners for the module.\n */\nconst registerEventListeners = () => {\n    document.addEventListener('click', e => {\n        const gatewayTrigger = e.target.closest('[data-action=\"core_payment/triggerPayment\"]');\n        if (gatewayTrigger) {\n            e.preventDefault();\n\n            show(gatewayTrigger, {focusOnClose: e.target});\n        }\n    });\n};\n\n/**\n * Shows the gateway selector modal.\n *\n * @param {HTMLElement} rootNode\n * @param {Object} options - Additional options\n * @param {HTMLElement} options.focusOnClose The element to focus on when the modal is closed.\n */\nconst show = async(rootNode, {\n    focusOnClose = null,\n} = {}) => {\n    const modal = await ModalFactory.create({\n        type: ModalGateways.TYPE,\n        title: await getString('selectpaymenttype', 'core_payment'),\n        body: await Templates.render('core_payment/gateways_modal', {}),\n    });\n\n    const rootElement = modal.getRoot()[0];\n    addToastRegion(rootElement);\n\n    modal.show();\n\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        // Destroy when hidden.\n        modal.destroy();\n        try {\n            focusOnClose.focus();\n        } catch (e) {\n            // eslint-disable-line\n        }\n    });\n\n    modal.getRoot().on(PaymentEvents.proceed, (e) => {\n        const gateway = (rootElement.querySelector(Selectors.values.gateway) || {value: ''}).value;\n\n        if (gateway) {\n            processPayment(\n                gateway,\n                rootNode.dataset.component,\n                rootNode.dataset.paymentarea,\n                rootNode.dataset.itemid,\n                rootNode.dataset.description\n            )\n            .then(message => {\n                modal.hide();\n                Notification.addNotification({\n                    message: message,\n                    type: 'success',\n                });\n                location.href = rootNode.dataset.successurl;\n\n                // The following return statement is never reached. It is put here just to make eslint happy.\n                return message;\n            })\n            .catch(message => Notification.alert('', message));\n        } else {\n            // We cannot use await in the following line.\n            // The reason is that we are preventing the default action of the save event being triggered,\n            // therefore we cannot define the event handler function asynchronous.\n            getString('nogatewayselected', 'core_payment').then(message => addToast(message, {type: 'warning'})).catch();\n        }\n\n        e.preventDefault();\n    });\n\n    // Re-calculate the cost when gateway is changed.\n    rootElement.addEventListener('change', e => {\n        if (e.target.matches(Selectors.elements.gateways)) {\n            updateCostRegion(rootElement, rootNode.dataset.cost);\n        }\n    });\n\n    const gateways = await getAvailableGateways(rootNode.dataset.component, rootNode.dataset.paymentarea, rootNode.dataset.itemid);\n    const context = {\n        gateways\n    };\n\n    const {html, js} = await Templates.renderForPromise('core_payment/gateways', context);\n    Templates.replaceNodeContents(rootElement.querySelector(Selectors.regions.gatewaysContainer), html, js);\n    selectSingleGateway(rootElement);\n    await updateCostRegion(rootElement, rootNode.dataset.cost);\n};\n\n/**\n * Auto-select the gateway if there is only one gateway.\n *\n * @param {HTMLElement} root An HTMLElement that contains the cost region\n */\nconst selectSingleGateway = root => {\n    const gateways = root.querySelectorAll(Selectors.elements.gateways);\n\n    if (gateways.length == 1) {\n        gateways[0].checked = true;\n    }\n};\n\n/**\n * Shows the cost of the item the user is purchasing in the cost region.\n *\n * @param {HTMLElement} root An HTMLElement that contains the cost region\n * @param {string} defaultCost The default cost that is going to be displayed if no gateway is selected\n * @returns {Promise<void>}\n */\nconst updateCostRegion = async(root, defaultCost = '') => {\n    const gatewayElement = root.querySelector(Selectors.values.gateway);\n    const surcharge = parseInt((gatewayElement || {dataset: {surcharge: 0}}).dataset.surcharge);\n    const cost = (gatewayElement || {dataset: {cost: defaultCost}}).dataset.cost;\n\n    const {html, js} = await Templates.renderForPromise('core_payment/fee_breakdown', {fee: cost, surcharge});\n    Templates.replaceNodeContents(root.querySelector(Selectors.regions.costContainer), html, js);\n};\n\n/**\n * Process payment using the selected gateway.\n *\n * @param {string} gateway The gateway to be used for payment\n * @param {string} component Name of the component that the itemId belongs to\n * @param {string} paymentArea Name of the area in the component that the itemId belongs to\n * @param {number} itemId An internal identifier that is used by the component\n * @param {string} description Description of the payment\n * @returns {Promise<string>}\n */\nconst processPayment = async(gateway, component, paymentArea, itemId, description) => {\n    const paymentMethod = await import(`paygw_${gateway}/gateways_modal`);\n    return paymentMethod.process(component, paymentArea, itemId, description);\n};\n\n/**\n * Set up the payment actions.\n */\nexport const init = () => {\n    if (!init.initialised) {\n        // Event listeners should only be registered once.\n        init.initialised = true;\n        registerEventListeners();\n    }\n};\n\n/**\n * Whether the init function was called before.\n *\n * @static\n * @type {boolean}\n */\ninit.initialised = false;\n"],"names":["_modal_factory","_interopRequireDefault","_templates","_selectors","_modal_events","_events","_notification","_modal_gateways","_systemImportTransformerGlobalIdentifier","window","self","global","obj","__esModule","default","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_ref","_ref3","_ref4","show","rootNode","_ref2","_ref2$focusOnClose","focusOnClose","modal","rootElement","gateways","_yield$Templates$rend","html","js","_args","_context","t0","ModalFactory","ModalGateways","TYPE","getString","get_string","t2","Templates","render","t3","t4","t1","title","body","getRoot","addToastRegion","on","ModalEvents","hidden","destroy","focus","e","PaymentEvents","proceed","gateway","querySelector","Selectors","processPayment","dataset","component","paymentarea","itemid","description","message","hide","Notification","addNotification","location","href","successurl","alert","addToast","preventDefault","addEventListener","target","matches","elements","updateCostRegion","cost","getAvailableGateways","renderForPromise","replaceNodeContents","regions","gatewaysContainer","selectSingleGateway","_callee","_x","root","querySelectorAll","checked","defaultCost","gatewayElement","surcharge","_yield$Templates$rend2","_args2","_context2","parseInt","fee","costContainer","_callee2","_x2","_callee3","paymentArea","itemId","paymentMethod","_context3","amd","require","concat","process","_x3","_x4","_x5","_x6","_x7","init","initialised","document","gatewayTrigger","closest","_exports"],"mappings":"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"}