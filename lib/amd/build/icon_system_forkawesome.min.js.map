{"version":3,"sources":["../src/icon_system_forkawesome.js"],"names":["staticMap","fetchMap","IconSystemForkawesome","IconSystem","apply","arguments","prototype","Object","create","init","Promise","resolve","map","LocalStorage","get","JSON","parse","Ajax","call","methodname","args","themename","M","cfg","theme","themerev","then","forEach","value","component","pix","to","set","stringify","bind","renderIcon","key","title","template","mappedIcon","unmappedIcon","url","Url","imageUrl","attributes","name","context","alt","result","Mustache","render","trim","getTemplateName"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Competency rule points module.\n *\n * @copyright  2021 Jun Pataleta\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport IconSystem from 'core/icon_system';\nimport Ajax from 'core/ajax';\nimport Mustache from 'core/mustache';\nimport LocalStorage from 'core/localstorage';\nimport Url from 'core/url';\n\nlet staticMap = null;\nlet fetchMap = null;\n\n/**\n * IconSystemForkawesome\n */\nconst IconSystemForkawesome = function() {\n    IconSystem.apply(this, arguments);\n};\nIconSystemForkawesome.prototype = Object.create(IconSystem.prototype);\n\n/**\n * Prefetch resources so later calls to renderIcon can be resolved synchronously.\n *\n * @method init\n * @return {Promise}\n */\nIconSystemForkawesome.prototype.init = function() {\n    if (staticMap) {\n        return Promise.resolve(this);\n    }\n\n    let map = LocalStorage.get('core/iconmap-forkawesome');\n    if (map) {\n        map = JSON.parse(map);\n    }\n\n    if (map) {\n        staticMap = map;\n        return Promise.resolve(this);\n    }\n\n    if (fetchMap === null) {\n        fetchMap = Ajax.call([{\n            methodname: 'core_output_load_forkawesome_icon_system_map',\n            args: {\n                themename: M.cfg.theme,\n            },\n        }], true, false, false, 0, M.cfg.themerev)[0];\n    }\n\n    return fetchMap.then(function(map) {\n        staticMap = {};\n        map.forEach(value => {\n            staticMap[value.component + '/' + value.pix] = value.to;\n        });\n        LocalStorage.set('core/iconmap-forkawesome', JSON.stringify(staticMap));\n        return this;\n    }.bind(this));\n};\n\n/**\n * Render an icon.\n *\n * @param {String} key\n * @param {String} component\n * @param {String} title\n * @param {String} template\n * @return {String}\n * @method renderIcon\n */\nIconSystemForkawesome.prototype.renderIcon = function(key, component, title, template) {\n    const mappedIcon = staticMap[component + '/' + key];\n    let unmappedIcon = false;\n    if (typeof mappedIcon === \"undefined\") {\n        const url = Url.imageUrl(key, component);\n\n        unmappedIcon = {\n            attributes: [\n                {name: 'src', value: url},\n                {name: 'alt', value: title},\n                {name: 'title', value: title}\n            ]\n        };\n    }\n\n    const context = {\n        key: mappedIcon,\n        title: title,\n        alt: title,\n        unmappedIcon: unmappedIcon\n    };\n\n    if (typeof title === \"undefined\" || title === '') {\n        context['aria-hidden'] = true;\n    }\n\n    const result = Mustache.render(template, context);\n    return result.trim();\n};\n\n/**\n * Get the name of the template to pre-cache for this icon system.\n *\n * @return {String}\n * @method getTemplateName\n */\nIconSystemForkawesome.prototype.getTemplateName = function() {\n    return 'core/pix_icon_forkawesome';\n};\n\n/** @alias module:core/icon_system_forkawesome */\nexport default IconSystemForkawesome;\n"],"file":"icon_system_forkawesome.min.js"}