{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Option helper for TinyMCE Editor Manager.\n *\n * @module editor_tiny/options\n * @copyright  2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst optionContextId = 'moodle:contextid';\nconst optionDraftItemId = 'moodle:draftitemid';\nconst filePickers = 'moodle:filepickers';\nconst optionsMoodleLang = 'moodle:language';\nconst currentLanguage = 'moodle:currentLanguage';\nconst optionPlaceholderSelectors = 'moodle:placeholderSelectors';\n\nexport const register = (editor, options) => {\n    const registerOption = editor.options.register;\n    const setOption = editor.options.set;\n\n    registerOption(optionContextId, {\n        processor: 'number',\n        \"default\": 0,\n    });\n    setOption(optionContextId, options.context);\n\n    registerOption(filePickers, {\n        processor: 'object',\n        \"default\": {},\n    });\n    setOption(filePickers, options.filepicker);\n\n    registerOption(optionDraftItemId, {\n        processor: 'number',\n        \"default\": 0,\n    });\n    setOption(optionDraftItemId, options.draftitemid);\n\n    registerOption(currentLanguage, {\n        processor: 'string',\n        \"default\": 'en',\n    });\n    setOption(currentLanguage, options.currentLanguage);\n\n    // This is primarily used by the media plugin, but it may be re-used elsewhere so is included here as it is large.\n    registerOption(optionsMoodleLang, {\n        processor: 'object',\n        \"default\": {},\n    });\n    setOption(optionsMoodleLang, options.language);\n\n    registerOption(optionPlaceholderSelectors, {\n        processor: 'array',\n        \"default\": [],\n    });\n    setOption(optionPlaceholderSelectors, options.placeholderSelectors);\n};\n\nexport const getContextId = (editor) => editor.options.get(optionContextId);\nexport const getDraftItemId = (editor) => editor.options.get(optionDraftItemId);\nexport const getFilepickers = (editor) => editor.options.get(filePickers);\nexport const getFilePicker = (editor, type) => getFilepickers(editor)[type];\nexport const getMoodleLang = (editor) => editor.options.get(optionsMoodleLang);\nexport const getCurrentLanguage = (editor) => editor.options.get(currentLanguage);\n\n/**\n * Get a set of namespaced options for all defined plugins.\n *\n * @param {object} options\n * @returns {object}\n */\nexport const getInitialPluginConfiguration = (options) => {\n    const config = {};\n\n    Object.entries(options.plugins).forEach(([pluginName, pluginConfig]) => {\n        const values = Object.entries(pluginConfig.config ?? {});\n        values.forEach(([optionName, value]) => {\n            config[getPluginOptionName(pluginName, optionName)] = value;\n        });\n    });\n\n    return config;\n};\n\n/**\n * Get the namespaced option name for a plugin.\n *\n * @param {string} pluginName\n * @param {string} optionName\n * @returns {string}\n */\nexport const getPluginOptionName = (pluginName, optionName) => `${pluginName}:${optionName}`;\n\n/**\n * Get the placeholder selectors.\n *\n * @param {TinyMCE} editor\n * @returns {array}\n */\nexport const getPlaceholderSelectors = (editor) => editor.options.get(optionPlaceholderSelectors);\n\n/**\n * Register placeholder selectos.\n *\n * @param {TinyMCE} editor\n * @param {array} selectors\n */\nexport const registerPlaceholderSelectors = (editor, selectors) => {\n    if (selectors.length) {\n        let existingData = getPlaceholderSelectors(editor);\n        existingData = existingData.concat(selectors);\n        editor.options.set(optionPlaceholderSelectors, existingData);\n    }\n};\n"],"names":["_exports","register","editor","options","registerOption","setOption","set","processor","default","context","filepicker","draftitemid","currentLanguage","language","placeholderSelectors","getContextId","get","getDraftItemId","getFilepickers","getFilePicker","type","getMoodleLang","getCurrentLanguage","getInitialPluginConfiguration","config","Object","entries","plugins","forEach","_ref","_pluginConfig$config","_ref2","_slicedToArray","pluginName","pluginConfig","_ref3","_ref4","optionName","value","getPluginOptionName","getPlaceholderSelectors","registerPlaceholderSelectors","selectors","length","existingData","concat"],"mappings":";;;;;;;0+CAsEEA,SAAAC,SAxCsB,SAACC,OAAQC,SAC7B,IAAMC,eAAiBF,OAAOC,QAAQF,SAChCI,UAAYH,OAAOC,QAAQG,IAEjCF,eAXoB,mBAWY,CAC5BG,UAAW,SACXC,QAAW,IAEfH,UAfoB,mBAeOF,QAAQM,SAEnCL,eAfgB,qBAeY,CACxBG,UAAW,SACXC,QAAW,CAAC,IAEhBH,UAnBgB,qBAmBOF,QAAQO,YAE/BN,eAtBsB,qBAsBY,CAC9BG,UAAW,SACXC,QAAW,IAEfH,UA1BsB,qBA0BOF,QAAQQ,aAErCP,eAzBoB,yBAyBY,CAC5BG,UAAW,SACXC,QAAW,OAEfH,UA7BoB,yBA6BOF,QAAQS,iBAGnCR,eAjCsB,kBAiCY,CAC9BG,UAAW,SACXC,QAAW,CAAC,IAEhBH,UArCsB,kBAqCOF,QAAQU,UAErCT,eArC+B,8BAqCY,CACvCG,UAAW,QACXC,QAAW,KAEfH,UAzC+B,8BAyCOF,QAAQW,uBAG0Bd,SAAAe,aAAhD,SAACb,QAAM,OAAKA,OAAOC,QAAQa,IAjD/B,mBAiDmD,EACKhB,SAAAiB,eAAlD,SAACf,QAAM,OAAKA,OAAOC,QAAQa,IAjD/B,qBAiDqD,EACxE,IAAME,eAAiB,SAAChB,QAAM,OAAKA,OAAOC,QAAQa,IAjDrC,qBAiDqD,EAAChB,SAAAkB,eAAAA,eACElB,SAAAmB,cAA/C,SAACjB,OAAQkB,MAAI,OAAKF,eAAehB,QAAQkB,KAAK,EACIpB,SAAAqB,cAAlD,SAACnB,QAAM,OAAKA,OAAOC,QAAQa,IAlD9B,kBAkDoD,EACIhB,SAAAsB,mBAAhD,SAACpB,QAAM,OAAKA,OAAOC,QAAQa,IAlDrC,yBAkDyD,EAmB/EhB,SAAAuB,8BAX2C,SAACpB,SAC1C,IAAMqB,OAAS,CAAA,EASf,OAPAC,OAAOC,QAAQvB,QAAQwB,SAASC,SAAQ,SAAgCC,MAAA,IAAAC,qBAAAC,MAAAC,eAAAH,KAAA,GAA9BI,WAAUF,MAAA,GAAEG,aAAYH,MAAA,GAC/CN,OAAOC,QAA2B,QAApBI,qBAACI,aAAaV,cAAM,IAAAM,qBAAAA,qBAAI,CAAE,GAChDF,SAAQ,SAAyBO,OAAA,IAAAC,MAAAJ,eAAAG,MAAA,GAAvBE,WAAUD,MAAA,GAAEE,MAAKF,MAAA,GAC9BZ,OAAOe,oBAAoBN,WAAYI,aAAeC,KAC1D,GACJ,IAEOd,QAUJ,IAAMe,oBAAsB,SAACN,WAAYI,YAAU,MAAQJ,GAAAA,OAAAA,uBAAcI,aAAarC,SAAAuC,oBAAAA,oBAQtF,IAAMC,wBAA0B,SAACtC,QAAM,OAAKA,OAAOC,QAAQa,IArF/B,8BAqF8D,EAAChB,SAAAwC,wBAAAA,wBAchGxC,SAAAyC,6BAN0C,SAACvC,OAAQwC,WACjD,GAAIA,UAAUC,OAAQ,CAClB,IAAIC,aAAeJ,wBAAwBtC,QAC3C0C,aAAeA,aAAaC,OAAOH,WACnCxC,OAAOC,QAAQG,IAjGY,8BAiGoBsC,aACnD,EACF"}