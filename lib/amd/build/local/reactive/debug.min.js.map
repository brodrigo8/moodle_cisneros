{"version":3,"file":"debug.min.js","sources":["../../../src/local/reactive/debug.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Reactive module debug tools.\n *\n * @module     core/reactive/local/reactive/debug\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Reactive from 'core/local/reactive/reactive';\nimport log from 'core/log';\n\n// The list of reactives instances.\nconst reactiveInstances = {};\n\n// The reactive debugging objects.\nconst reactiveDebuggers = {};\n\n/**\n * Reactive module debug tools.\n *\n * If debug is enabled, this reactive module will spy all the reactive instances and keep a record\n * of the changes and components they have.\n *\n * It is important to note that the Debug class is also a Reactive module. The debug instance keeps\n * the reactive instances data as its own state. This way it is possible to implement development tools\n * that whatches this data.\n *\n * @class      core/reactive/local/reactive/debug/Debug\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nclass Debug extends Reactive {\n\n    /**\n     * Set the initial state.\n     *\n     * @param {object} stateData the initial state data.\n     */\n    setInitialState(stateData) {\n        super.setInitialState(stateData);\n        log.debug(`Debug module \"M.reactive\" loaded.`);\n    }\n\n    /**\n     * List the currents page reactives instances.\n     */\n    get list() {\n        return JSON.parse(JSON.stringify(this.state.reactives));\n    }\n\n    /**\n     * Register a new Reactive instance.\n     *\n     * This method is called every time a \"new Reactive\" is executed.\n     *\n     * @param {Reactive} instance the reactive instance\n     */\n    registerNewInstance(instance) {\n\n        // Generate a valid variable name for that instance.\n        let name = instance.name ?? `instance${this.state.reactives.length}`;\n        name = name.replace(/\\W/g, '');\n\n        log.debug(`Registering new reactive instance \"M.reactive.${name}\"`);\n\n        reactiveInstances[name] = instance;\n        reactiveDebuggers[name] = new DebugInstance(reactiveInstances[name]);\n        // Register also in the state.\n        this.dispatch('putInstance', name, instance);\n        // Add debug watchers to instance.\n        const refreshMethod = () => {\n            this.dispatch('putInstance', name, instance);\n        };\n        instance.target.addEventListener('readmode:on', refreshMethod);\n        instance.target.addEventListener('readmode:off', refreshMethod);\n        instance.target.addEventListener('registerComponent:success', refreshMethod);\n        instance.target.addEventListener('transaction:end', refreshMethod);\n        // We store the last transaction into the state.\n        const storeTransaction = ({detail}) => {\n            const changes = detail?.changes;\n            this.dispatch('lastTransaction', name, changes);\n        };\n        instance.target.addEventListener('transaction:start', storeTransaction);\n    }\n\n    /**\n     * Returns a debugging object for a specific Reactive instance.\n     *\n     * A debugging object is a class that wraps a Reactive instance to quick access some of the\n     * reactive methods using the browser JS console.\n     *\n     * @param {string} name the Reactive instance name\n     * @returns {DebugInstance} a debug object wrapping the Reactive instance\n     */\n    debug(name) {\n        return reactiveDebuggers[name];\n    }\n}\n\n/**\n * The debug state mutations class.\n *\n * @class core/reactive/local/reactive/debug/Mutations\n */\nclass Mutations {\n\n    /**\n     * Insert or update a new instance into the debug state.\n     *\n     * @param {StateManager} stateManager the debug state manager\n     * @param {string} name the instance name\n     * @param {Reactive} instance the reactive instance\n     */\n    putInstance(stateManager, name, instance) {\n        const state = stateManager.state;\n\n        stateManager.setReadOnly(false);\n\n        if (state.reactives.has(name)) {\n            state.reactives.get(name).countcomponents = instance.components.length;\n            state.reactives.get(name).readOnly = instance.stateManager.readonly;\n            state.reactives.get(name).modified = new Date().getTime();\n        } else {\n            state.reactives.add({\n                id: name,\n                countcomponents: instance.components.length,\n                readOnly: instance.stateManager.readonly,\n                lastChanges: [],\n                modified: new Date().getTime(),\n            });\n        }\n        stateManager.setReadOnly(true);\n    }\n\n    /**\n     * Update the lastChanges attribute with a list of changes\n     *\n     * @param {StateManager} stateManager the debug reactive state\n     * @param {string} name tje instance name\n     * @param {array} changes the list of changes\n     */\n    lastTransaction(stateManager, name, changes) {\n        if (!changes || changes.length === 0) {\n            return;\n        }\n\n        const state = stateManager.state;\n        const lastChanges = ['transaction:start'];\n\n        changes.forEach(change => {\n            lastChanges.push(change.eventName);\n        });\n\n        lastChanges.push('transaction:end');\n\n        stateManager.setReadOnly(false);\n\n        state.reactives.get(name).lastChanges = lastChanges;\n\n        stateManager.setReadOnly(true);\n    }\n}\n\n/**\n * Class used to debug a specific instance and manipulate the state from the JS console.\n *\n * @class      core/reactive/local/reactive/debug/DebugInstance\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nclass DebugInstance {\n\n    /**\n     * Constructor.\n     *\n     * @param {Reactive} instance the reactive instance\n     */\n    constructor(instance) {\n        this.instance = instance;\n        // Add some debug data directly into the instance. This way we avoid having attributes\n        // that will confuse the console aoutocomplete.\n        if (instance._reactiveDebugData === undefined) {\n            instance._reactiveDebugData = {\n                highlighted: false,\n            };\n        }\n    }\n\n    /**\n     * Set the read only mode.\n     *\n     * Quick access to the instance setReadOnly method.\n     *\n     * @param {bool} value the new read only value\n     */\n    set readOnly(value) {\n        this.instance.stateManager.setReadOnly(value);\n    }\n\n    /**\n     * Get the read only value\n     *\n     * @returns {bool}\n     */\n    get readOnly() {\n        return this.instance.stateManager.readonly;\n    }\n\n    /**\n     * Return the current state object.\n     *\n     * @returns {object}\n     */\n    get state() {\n        return this.instance.state;\n    }\n\n    /**\n     * Tooggle the reactive HTML element highlight registered in this reactive instance.\n     *\n     * @param {bool} value the highlight value\n     */\n    set highlight(value) {\n        this.instance._reactiveDebugData.highlighted = value;\n        this.instance.components.forEach(({element}) => {\n            const border = (value) ? `thick solid #0000FF` : '';\n            element.style.border = border;\n        });\n    }\n\n    /**\n     * Get the current highligh value.\n     *\n     * @returns {bool}\n     */\n    get highlight() {\n        return this.instance._reactiveDebugData.highlighted;\n    }\n\n    /**\n     * List all the components registered in this instance.\n     *\n     * @returns {array}\n     */\n    get components() {\n        return [...this.instance.components];\n    }\n\n    /**\n     * List all the state changes evenet pending to dispatch.\n     *\n     * @returns {array}\n     */\n    get changes() {\n        const result = [];\n        this.instance.stateManager.eventsToPublish.forEach(\n            (element) => {\n                result.push(element.eventName);\n            }\n        );\n        return result;\n    }\n\n    /**\n     * Dispatch a change in the state.\n     *\n     * Usually reactive modules throw an error directly to the components when something\n     * goes wrong. However, course editor can directly display a notification.\n     *\n     * @method dispatch\n     * @param {*} args\n     */\n    async dispatch(...args) {\n        this.instance.dispatch(...args);\n    }\n\n    /**\n     * Return all the HTML elements registered in the instance components.\n     *\n     * @returns {array}\n     */\n    get elements() {\n        const result = [];\n        this.instance.components.forEach(({element}) => {\n            result.push(element);\n        });\n        return result;\n    }\n\n    /**\n     * Return a plain copy of the state data.\n     *\n     * @returns {object}\n     */\n    get stateData() {\n        return JSON.parse(JSON.stringify(this.state));\n    }\n\n    /**\n     * Process an update state array.\n     *\n     * @param {array} updates an array of update state messages\n     */\n    processUpdates(updates) {\n        this.instance.stateManager.processUpdates(updates);\n    }\n}\n\nconst stateChangedEventName = 'core_reactive_debug:stateChanged';\n\n/**\n * Internal state changed event.\n *\n * @method dispatchStateChangedEvent\n * @param {object} detail the full state\n * @param {object} target the custom event target (document if none provided)\n */\nfunction dispatchStateChangedEvent(detail, target) {\n    if (target === undefined) {\n        target = document;\n    }\n    target.dispatchEvent(\n        new CustomEvent(\n            stateChangedEventName,\n            {\n                bubbles: true,\n                detail: detail,\n            }\n        )\n    );\n}\n\n/**\n * The main init method to initialize the reactive debug.\n * @returns {object}\n */\nexport const initDebug = () => {\n    const debug = new Debug({\n        name: 'CoreReactiveDebug',\n        eventName: stateChangedEventName,\n        eventDispatch: dispatchStateChangedEvent,\n        mutations: new Mutations(),\n        state: {\n            reactives: [],\n        },\n    });\n\n    // The reactiveDebuggers will be used as a way of access the debug instances but also to register every new\n    // instance. To ensure this will update the reactive debug state we add the registerNewInstance method to it.\n    reactiveDebuggers.registerNewInstance = debug.registerNewInstance.bind(debug);\n\n    return {\n        debug,\n        debuggers: reactiveDebuggers,\n    };\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","o","minLen","n","toString","test","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_createClass","protoProps","staticProps","_get","Reflect","get","bind","property","receiver","base","_superPropBase","getOwnPropertyDescriptor","arguments","apply","_getPrototypeOf","_setPrototypeOf","p","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","Super","NewTarget","_possibleConstructorReturn","ReferenceError","_assertThisInitialized","_reactive","_log","reactiveInstances","reactiveDebuggers","Debug","_Reactive","subClass","superClass","_inherits","_super","stateData","log","debug","JSON","parse","stringify","reactives","_instance$name","_this","concat","replace","DebugInstance","dispatch","refreshMethod","addEventListener","_ref","detail","changes","Reactive","Mutations","stateManager","setReadOnly","has","countcomponents","components","readOnly","readonly","modified","Date","getTime","add","id","lastChanges","change","eventName","_reactiveDebugData","highlighted","_dispatch","set","_ref2","element","border","style","eventsToPublish","_callee","_this$instance","_args","_context","args","_ref3","updates","processUpdates","dispatchStateChangedEvent","document","dispatchEvent","CustomEvent","bubbles","_exports","initDebug","eventDispatch","mutations","registerNewInstance","debuggers"],"mappings":"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"}