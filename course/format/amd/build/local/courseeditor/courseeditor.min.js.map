{"version":3,"file":"courseeditor.min.js","sources":["../../../src/local/courseeditor/courseeditor.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {Reactive} from 'core/reactive';\nimport notification from 'core/notification';\nimport Exporter from 'core_courseformat/local/courseeditor/exporter';\nimport log from 'core/log';\nimport ajax from 'core/ajax';\nimport * as Storage from 'core/sessionstorage';\n\n/**\n * Main course editor module.\n *\n * All formats can register new components on this object to create new reactive\n * UI components that watch the current course state.\n *\n * @module     core_courseformat/local/courseeditor/courseeditor\n * @class     core_courseformat/local/courseeditor/courseeditor\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nexport default class extends Reactive {\n\n    /**\n     * The current state cache key\n     *\n     * The state cache is considered dirty if the state changes from the last page or\n     * if the page has editing mode on.\n     *\n     * @attribute stateKey\n     * @type number|null\n     * @default 1\n     * @package\n     */\n    stateKey = 1;\n\n    /**\n     * The current page section return\n     * @attribute sectionReturn\n     * @type number\n     * @default 0\n     */\n    sectionReturn = 0;\n\n    /**\n     * Set up the course editor when the page is ready.\n     *\n     * The course can only be loaded once per instance. Otherwise an error is thrown.\n     *\n     * The backend can inform the module of the current state key. This key changes every time some\n     * update in the course affect the current user state. Some examples are:\n     *  - The course content has been edited\n     *  - The user marks some activity as completed\n     *  - The user collapses or uncollapses a section (it is stored as a user preference)\n     *\n     * @param {number} courseId course id\n     * @param {string} serverStateKey the current backend course cache reference\n     */\n    async loadCourse(courseId, serverStateKey) {\n\n        if (this.courseId) {\n            throw new Error(`Cannot load ${courseId}, course already loaded with id ${this.courseId}`);\n        }\n\n        if (!serverStateKey) {\n            // The server state key is not provided, we use a invalid statekey to force reloading.\n            serverStateKey = `invalidStateKey_${Date.now()}`;\n        }\n\n        // Default view format setup.\n        this._editing = false;\n        this._supportscomponents = false;\n\n        this.courseId = courseId;\n\n        let stateData;\n\n        const storeStateKey = Storage.get(`course/${courseId}/stateKey`);\n        try {\n            // Check if the backend state key is the same we have in our session storage.\n            if (!this.isEditing && serverStateKey == storeStateKey) {\n                stateData = JSON.parse(Storage.get(`course/${courseId}/staticState`));\n            }\n            if (!stateData) {\n                stateData = await this.getServerCourseState();\n            }\n\n        } catch (error) {\n            log.error(\"EXCEPTION RAISED WHILE INIT COURSE EDITOR\");\n            log.error(error);\n            return;\n        }\n\n        this.setInitialState(stateData);\n\n        // In editing mode, the session cache is considered dirty always.\n        if (this.isEditing) {\n            this.stateKey = null;\n        } else {\n            // Check if the last state is the same as the cached one.\n            const newState = JSON.stringify(stateData);\n            const previousState = Storage.get(`course/${courseId}/staticState`);\n            if (previousState !== newState || storeStateKey !== serverStateKey) {\n                Storage.set(`course/${courseId}/staticState`, newState);\n                Storage.set(`course/${courseId}/stateKey`, stateData?.course?.statekey ?? serverStateKey);\n            }\n            this.stateKey = Storage.get(`course/${courseId}/stateKey`);\n        }\n    }\n\n    /**\n     * Setup the current view settings\n     *\n     * @param {Object} setup format, page and course settings\n     * @param {boolean} setup.editing if the page is in edit mode\n     * @param {boolean} setup.supportscomponents if the format supports components for content\n     * @param {string} setup.cacherev the backend cached state revision\n     */\n    setViewFormat(setup) {\n        this._editing = setup.editing ?? false;\n        this._supportscomponents = setup.supportscomponents ?? false;\n    }\n\n    /**\n     * Load the current course state from the server.\n     *\n     * @returns {Object} the current course state\n     */\n    async getServerCourseState() {\n        const courseState = await ajax.call([{\n            methodname: 'core_courseformat_get_state',\n            args: {\n                courseid: this.courseId,\n            }\n        }])[0];\n\n        const stateData = JSON.parse(courseState);\n\n        return {\n            course: {},\n            section: [],\n            cm: [],\n            ...stateData,\n        };\n    }\n\n    /**\n     * Return the current edit mode.\n     *\n     * Components should use this method to check if edit mode is active.\n     *\n     * @return {boolean} if edit is enabled\n     */\n    get isEditing() {\n        return this._editing ?? false;\n    }\n\n    /**\n     * Return a data exporter to transform state part into mustache contexts.\n     *\n     * @return {Exporter} the exporter class\n     */\n    getExporter() {\n        return new Exporter(this);\n    }\n\n    /**\n     * Return if the current course support components to refresh the content.\n     *\n     * @returns {boolean} if the current content support components\n     */\n    get supportComponents() {\n        return this._supportscomponents ?? false;\n    }\n\n    /**\n     * Get a value from the course editor static storage if any.\n     *\n     * The course editor static storage uses the sessionStorage to store values from the\n     * components. This is used to prevent unnecesary template loadings on every page. However,\n     * the storage does not work if no sessionStorage can be used (in debug mode for example),\n     * if the page is in editing mode or if the initial state change from the last page.\n     *\n     * @param {string} key the key to get\n     * @return {boolean|string} the storage value or false if cannot be loaded\n     */\n    getStorageValue(key) {\n        if (this.isEditing || !this.stateKey) {\n            return false;\n        }\n        const dataJson = Storage.get(`course/${this.courseId}/${key}`);\n        if (!dataJson) {\n            return false;\n        }\n        // Check the stateKey.\n        try {\n            const data = JSON.parse(dataJson);\n            if (data?.stateKey !== this.stateKey) {\n                return false;\n            }\n            return data.value;\n        } catch (error) {\n            return false;\n        }\n    }\n\n    /**\n     * Stores a value into the course editor static storage if available\n     *\n     * @param {String} key the key to store\n     * @param {*} value the value to store (must be compatible with JSON,stringify)\n     * @returns {boolean} true if the value is stored\n     */\n    setStorageValue(key, value) {\n        // Values cannot be stored on edit mode.\n        if (this.isEditing) {\n            return false;\n        }\n        const data = {\n            stateKey: this.stateKey,\n            value,\n        };\n        return Storage.set(`course/${this.courseId}/${key}`, JSON.stringify(data));\n    }\n\n    /**\n     * Dispatch a change in the state.\n     *\n     * Usually reactive modules throw an error directly to the components when something\n     * goes wrong. However, course editor can directly display a notification.\n     *\n     * @method dispatch\n     * @param {mixed} args any number of params the mutation needs.\n     */\n    async dispatch(...args) {\n        try {\n            await super.dispatch(...args);\n        } catch (error) {\n            // Display error modal.\n            notification.exception(error);\n            // Force unlock all elements.\n            super.dispatch('unlockAll');\n        }\n    }\n}\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","desc","value","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_toPropertyKey","_get","Reflect","get","bind","property","receiver","base","_superPropBase","_getPrototypeOf","_setPrototypeOf","o","p","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","Super","NewTarget","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_notification","_exporter","_log","_ajax","Storage","cache","has","newObj","hasPropertyDescriptor","set","_interopRequireWildcard","_default","_Reactive","subClass","superClass","_inherits","protoProps","staticProps","_dispatch","_getServerCourseState","_loadCourse","_super","_this","_len","Array","_key","concat","_callee","courseId","serverStateKey","stateData","storeStateKey","newState","_stateData$course$sta","_stateData","_stateData$course","_context","Date","now","_editing","_supportscomponents","isEditing","JSON","parse","getServerCourseState","t0","log","setInitialState","stateKey","stringify","course","statekey","_x","_x2","setup","_setup$editing","_setup$supportscompon","editing","supportscomponents","_callee2","courseState","_context2","ajax","methodname","courseid","section","cm","_this$_editing","Exporter","_this$_supportscompon","dataJson","data","_callee3","_get2","_len2","_key2","_args3","_context3","notification","Reactive","_exports"],"mappings":"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"}