{"version":3,"file":"editor.min.js","sources":["../src/editor.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TinyMCE Editor Manager.\n *\n * @module editor_tiny/editor\n * @copyright  2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport jQuery from 'jquery';\nimport Pending from 'core/pending';\nimport {getDefaultConfiguration} from './defaults';\nimport {getTinyMCE, baseUrl} from './loader';\nimport * as Options from './options';\nimport {addToolbarButton, addToolbarButtons, addToolbarSection} from './utils';\n\n/**\n * Storage for the TinyMCE instances on the page.\n * @type {Map}\n */\nconst instanceMap = new Map();\n\n/**\n * The default editor configuration.\n * @type {Object}\n */\nlet defaultOptions = {};\n\n/**\n * Require the modules for the named set of TinyMCE plugins.\n *\n * @param {string[]} pluginList The list of plugins\n * @return {Promise[]} A matching set of Promises relating to the requested plugins\n */\nconst importPluginList = async(pluginList) => {\n    // Fetch all of the plugins from the list of plugins.\n    // If a plugin contains a '/' then it is assumed to be a Moodle AMD module to import.\n    const pluginHandlers = await Promise.all(pluginList.map(pluginPath => {\n        if (pluginPath.indexOf('/') === -1) {\n            // A standard TinyMCE Plugin.\n            return Promise.resolve(pluginPath);\n        }\n\n        return import(pluginPath);\n    }));\n\n    // Normalise the plugin data to a list of plugin names.\n    // Two formats are supported:\n    // - a string; and\n    // - an array whose first element is the plugin name, and the second element is the plugin configuration.\n    const pluginNames = pluginHandlers.map((pluginConfig) => {\n        if (typeof pluginConfig === 'string') {\n            return pluginConfig;\n        }\n        if (Array.isArray(pluginConfig)) {\n            return pluginConfig[0];\n        }\n        return null;\n    }).filter((value) => value);\n\n    // Fetch the list of pluginConfig handlers.\n    const pluginConfig = pluginHandlers.map((pluginConfig) => {\n        if (Array.isArray(pluginConfig)) {\n            return pluginConfig[1];\n        }\n        return null;\n    }).filter((value) => value);\n\n    return {\n        pluginNames,\n        pluginConfig,\n    };\n};\n\n/**\n * Fetch the language data for the specified language.\n *\n * @param {string} language The language identifier\n * @returns {object}\n */\nconst fetchLanguage = (language) => fetch(\n    `${M.cfg.wwwroot}/lib/editor/tiny/lang.php/${M.cfg.langrev}/${language}`\n).then(response => response.json());\n\n/**\n * Get a list of all Editors in a Map, keyed by the DOM Node that the Editor is associated with.\n *\n * @returns {Map<Node, Editor>}\n */\nexport const getAllInstances = () => new Map(instanceMap.entries());\n\n/**\n * Get the TinyMCE instance for the specified Node ID.\n *\n * @param {string} elementId\n * @returns {TinyMCE|undefined}\n */\nexport const getInstanceForElementId = elementId => getInstanceForElement(document.getElementById(elementId));\n\n/*\n * Get the TinyMCE instance for the specified HTMLElement.\n *\n * @param {HTMLElement} element\n * @returns {TinyMCE|undefined}\n */\nexport const getInstanceForElement = element => {\n    const instance = instanceMap.get(element);\n    if (instance && instance.removed) {\n        instanceMap.remove(element);\n        return undefined;\n    }\n    return instance;\n};\n\n/**\n * Set up TinyMCE for the selector at the specified HTML Node id.\n *\n * @param {object} config The configuration required to setup the editor\n * @param {string} config.elementId The HTML Node ID\n * @param {Object} config.options The editor plugin configuration\n * @return {Promise<TinyMCE>} The TinyMCE instance\n */\nexport const setupForElementId = ({elementId, options}) => {\n    const target = document.getElementById(elementId);\n    return setupForTarget(target, options);\n};\n\n/**\n * Initialise the page with standard TinyMCE requirements.\n *\n * Currently this includes the language taken from the HTML lang property.\n */\nconst initialisePage = async() => {\n    const lang = document.querySelector('html').lang;\n\n    const [tinyMCE, langData] = await Promise.all([getTinyMCE(), fetchLanguage(lang)]);\n    tinyMCE.addI18n(lang, langData);\n};\ninitialisePage();\n\n/**\n * Get the list of plugins to load for the specified configuration.\n *\n * If the specified configuration does not include a plugin configuration, then return the default configuration.\n *\n * @param {object} options\n * @param {array} [options.plugins=null] The plugin list\n * @returns {object}\n */\nconst getPlugins = ({plugins = null} = {}) => {\n    if (plugins) {\n        return plugins;\n    }\n\n    if (defaultOptions.plugins) {\n        return defaultOptions.plugins;\n    }\n\n    return {};\n};\n\n/**\n * Get the standard configuration for the specified options.\n *\n * @param {Node} target\n * @param {tinyMCE} tinyMCE\n * @param {object} options\n * @param {Array} plugins\n * @returns {object}\n */\nconst getStandardConfig = (target, tinyMCE, options, plugins) => {\n    const lang = document.querySelector('html').lang;\n\n    const config = Object.assign({}, getDefaultConfiguration(), {\n        // eslint-disable-next-line camelcase\n        base_url: baseUrl,\n\n        // Set the editor target.\n        // https://www.tiny.cloud/docs/tinymce/6/editor-important-options/#target\n        target,\n\n        // Set the language.\n        // https://www.tiny.cloud/docs/tinymce/6/ui-localization/#language\n        // eslint-disable-next-line camelcase\n        language: lang,\n\n        // Load the editor stylesheet into the editor iframe.\n        // https://www.tiny.cloud/docs/tinymce/6/add-css-options/\n        // eslint-disable-next-line camelcase\n        content_css: [\n            options.css,\n        ],\n\n        // Do not convert URLs to relative URLs.\n        // https://www.tiny.cloud/docs/tinymce/6/url-handling/#convert_urls\n        // eslint-disable-next-line camelcase\n        convert_urls: false,\n\n        // Enabled 'advanced' a11y options.\n        // This includes allowing role=\"presentation\" from the image uploader.\n        // https://www.tiny.cloud/docs/tinymce/6/accessibility/\n        // eslint-disable-next-line camelcase\n        a11y_advanced_options: true,\n\n        // Disable quickbars entirely.\n        // The UI is not ideal and we'll wait for it to improve in future before we enable it in Moodle.\n        // eslint-disable-next-line camelcase\n        quickbars_insert_toolbar: '',\n\n        // Disable some of the standard paragraph levels.\n        // https://www.tiny.cloud/docs/tinymce/6/user-formatting-options/#block_formats\n        // eslint-disable-next-line camelcase\n        block_formats: 'Paragraph=p; Heading 3= h3; Heading 4= h4; Heading 5= h5; Heading 6= h6;',\n\n        // The list of plugins to include in the instance.\n        // https://www.tiny.cloud/docs/tinymce/6/editor-important-options/#plugins\n        plugins: [\n            ...plugins,\n        ],\n\n        // Skins\n        skin: 'oxide',\n\n        // Remove the \"Upgrade\" link for Tiny.\n        // https://www.tiny.cloud/docs/tinymce/6/editor-premium-upgrade-promotion/\n        promotion: false,\n\n        // Allow the administrator to disable branding.\n        // https://www.tiny.cloud/docs/tinymce/6/statusbar-configuration-options/#branding\n        branding: options.branding,\n\n        setup: (editor) => {\n            Options.register(editor, options);\n        },\n    });\n\n    config.toolbar = addToolbarSection(config.toolbar, 'content', 'formatting', true);\n    config.toolbar = addToolbarButton(config.toolbar, 'content', 'link');\n\n    // Add directionality plugins, always.\n    config.toolbar = addToolbarSection(config.toolbar, 'directionality', 'alignment', true);\n    config.toolbar = addToolbarButtons(config.toolbar, 'directionality', ['ltr', 'rtl']);\n\n    return config;\n};\n\n/**\n * Fetch the TinyMCE configuration for this editor instance.\n *\n * @param {HTMLElement} target\n * @param {TinyMCE} tinyMCE The TinyMCE API\n * @param {Object} options The editor plugin configuration\n * @param {object} pluginValues\n * @param {object} pluginValues.pluginConfig The list of plugin configuration\n * @param {object} pluginValues.pluginNames The list of plugins to load\n * @returns {object} The TinyMCE Configuration\n */\nconst getEditorConfiguration = (target, tinyMCE, options, pluginValues) => {\n    const {\n        pluginNames,\n        pluginConfig,\n    } = pluginValues;\n\n    // Allow plugins to modify the configuration.\n    // This seems a little strange, but we must double-process the config slightly.\n\n    // First we fetch the standard configuration.\n    const instanceConfig = getStandardConfig(target, tinyMCE, options, pluginNames);\n\n    // Next we make any standard changes.\n    // Here we remove the file menu, as it doesn't offer any useful functionality.\n    // We only empty the items list so that a plugin may choose to add to it themselves later if they wish.\n    if (instanceConfig.menu.file) {\n        instanceConfig.menu.file.items = '';\n    }\n\n    // We disable the styles, backcolor, and forecolor plugins from the format menu.\n    // These are not useful for Moodle and we don't want to encourage their use.\n    if (instanceConfig.menu.format) {\n        instanceConfig.menu.format.items = instanceConfig.menu.format.items\n            // Remove forecolor and backcolor.\n            .replace(/forecolor ?/, '')\n            .replace(/backcolor ?/, '')\n\n            // Remove fontfamily for now.\n            .replace(/fontfamily ?/, '')\n\n            // Remove fontsize for now.\n            .replace(/fontsize ?/, '')\n\n            // Remove styles - it just duplicates the format menu in a way which does not respect configuration\n            .replace(/styles ?/, '')\n\n            // Remove any duplicate separators.\n            .replaceAll(/\\| *\\|/g, '|');\n    }\n\n    // Next we call the `configure` function for any plugin which defines it.\n    // We pass the current instanceConfig in here, to allow them to make certain changes to the global configuration.\n    // For example, to add themselves to any menu, toolbar, and so on.\n    // Any plugin which wishes to have configuration options must register those options here.\n    pluginConfig.filter((pluginConfig) => typeof pluginConfig.configure === 'function').forEach((pluginConfig) => {\n        const pluginInstanceOverride = pluginConfig.configure(instanceConfig, options);\n        Object.assign(instanceConfig, pluginInstanceOverride);\n    });\n\n    // Next we convert the plugin configuration into a format that TinyMCE understands.\n    Object.assign(instanceConfig, Options.getInitialPluginConfiguration(options));\n\n    return instanceConfig;\n};\n\n/**\n * Set up TinyMCE for the HTML Element.\n *\n * @param {HTMLElement} target\n * @param {Object} [options={}] The editor plugin configuration\n * @return {Promise<TinyMCE>} The TinyMCE instance\n */\nexport const setupForTarget = async(target, options = {}) => {\n    const instance = getInstanceForElement(target);\n    if (instance) {\n        return Promise.resolve(instance);\n    }\n\n    // Register a new pending promise to ensure that Behat waits for the editor setup to complete before continuing.\n    const pendingPromise = new Pending('editor_tiny/editor:setupForTarget');\n\n    // Get the list of plugins.\n    const plugins = getPlugins(options);\n\n    // Fetch the tinyMCE API, and instantiate the plugins.\n    const [tinyMCE, pluginValues] = await Promise.all([\n        getTinyMCE(),\n        importPluginList(Object.keys(plugins)),\n    ]);\n\n    // TinyMCE uses the element ID as a map key internally, even if the target has changed.\n    // In the case where we have an editor in a modal form which has been detached from the DOM, but the editor not removed,\n    // we need to manually destroy the editor.\n    // We could theoretically do this with a Mutation Observer, but in some cases the Node may be moved,\n    // or added back elsewhere in the DOM.\n    const existingEditor = tinyMCE.EditorManager.get(target.id);\n    if (existingEditor) {\n        if (existingEditor.targetElm.closest('body')) {\n            if (existingEditor.targetElm === target) {\n                pendingPromise.resolve();\n                return Promise.resolve(existingEditor);\n            } else {\n                pendingPromise.resolve();\n                throw new Error('TinyMCE instance already exists for different target with same ID');\n            }\n        } else {\n            existingEditor.destroy();\n        }\n    }\n\n    // Get the editor configuration for this editor.\n    const instanceConfig = getEditorConfiguration(target, tinyMCE, options, pluginValues);\n\n    // Initialise the editor instance for the given configuration.\n    // At this point any plugin which has configuration options registered will have them applied for this instance.\n    const [editor] = await tinyMCE.init(instanceConfig);\n\n    // Store the editor instance in the instanceMap and register a listener on removal to remove it from the map.\n    instanceMap.set(target, editor);\n    editor.on('remove', ({target}) => {\n        // Handle removal of the editor from the map on destruction.\n        instanceMap.delete(target.targetElm);\n    });\n\n    // If the editor is part of a form, also listen to the jQuery submit event.\n    // The jQuery submit event will not trigger the native submit event, and therefore the content will not be saved.\n    // We cannot rely on listening to the bubbled submit event on the document because other events on child nodes may\n    // consume the data before it is saved.\n    if (target.form) {\n        jQuery(target.form).on('submit', () => {\n            editor.save();\n        });\n    }\n\n    pendingPromise.resolve();\n    return editor;\n};\n\n/**\n * Set the default editor configuration.\n *\n * This configuration is used when an editor is initialised without any configuration.\n *\n * @param {object} [options={}]\n */\nexport const configureDefaultEditor = (options = {}) => {\n    defaultOptions = options;\n};\n"],"names":["_jquery","_interopRequireDefault","_pending","Options","obj","nodeInterop","__esModule","_typeof","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_systemImportTransformerGlobalIdentifier","window","self","global","WeakMap","cacheBabelInterop","cacheNodeInterop","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","Symbol","iterator","from","_iterableToArray","_unsupportedIterableToArray","TypeError","_nonIterableSpread","_slicedToArray","i","_arrayWithHoles","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","length","err","return","_iterableToArrayLimit","_nonIterableRest","o","minLen","n","toString","slice","constructor","name","test","len","arr2","_regeneratorRuntime","exports","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_ref","instanceMap","Map","defaultOptions","importPluginList","pluginList","pluginHandlers","pluginNames","pluginConfig","_context","all","map","pluginPath","indexOf","amd","require","filter","_callee","_exports","getAllInstances","entries","getInstanceForElementId","elementId","getInstanceForElement","document","getElementById","element","instance","removed","remove","setupForElementId","_ref2","options","target","setupForTarget","_ref3","initialisePage","_callee2","lang","_yield$Promise$all","_yield$Promise$all2","tinyMCE","langData","_context2","querySelector","getTinyMCE","language","fetch","M","cfg","wwwroot","langrev","response","json","addI18n","_ref5","getPlugins","_ref4","_ref4$plugins","plugins","getEditorConfiguration","pluginValues","instanceConfig","config","assign","getDefaultConfiguration","base_url","baseUrl","content_css","css","convert_urls","a11y_advanced_options","quickbars_insert_toolbar","block_formats","skin","promotion","branding","setup","editor","register","toolbar","addToolbarSection","addToolbarButton","addToolbarButtons","getStandardConfig","menu","file","items","format","replace","replaceAll","configure","pluginInstanceOverride","getInitialPluginConfiguration","pendingPromise","_yield$Promise$all3","_yield$Promise$all4","existingEditor","_yield$tinyMCE$init","_yield$tinyMCE$init2","_args3","_context3","Pending","EditorManager","id","targetElm","closest","destroy","init","on","_ref6","delete","form","jQuery","save","_callee3","_x2","configureDefaultEditor"],"mappings":"yqBAuBAA,QAAAC,uBAAAD,SACAE,SAAAD,uBAAAC,UAGAC,QAAqC,SAAAC,IAAAC,aAAA,IAAAA,aAAAD,KAAAA,IAAAE,WAAA,OAAAF,IAAA,GAAA,OAAAA,KAAA,WAAAG,QAAAH,MAAA,mBAAAA,IAAA,MAAA,CAAAI,QAAAJ,KAAA,IAAAK,MAAAC,yBAAAL,aAAA,GAAAI,OAAAA,MAAAE,IAAAP,KAAA,OAAAK,MAAAG,IAAAR,KAAA,IAAAS,OAAA,CAAA,EAAAC,sBAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,OAAAd,IAAA,GAAA,YAAAc,KAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,IAAAc,KAAA,CAAA,IAAAI,KAAAR,sBAAAC,OAAAE,yBAAAb,IAAAc,KAAA,KAAAI,OAAAA,KAAAV,KAAAU,KAAAC,KAAAR,OAAAC,eAAAH,OAAAK,IAAAI,MAAAT,OAAAK,KAAAd,IAAAc,IAAA,CAAAL,OAAAL,QAAAJ,IAAAK,OAAAA,MAAAc,IAAAnB,IAAAS,QAAA,OAAAA,MAAA,CAArCW,CAAArB,SAAqC,IAAAsB,yCAAA,oBAAAC,OAAAA,OAAA,oBAAAC,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,CAAA,EAAA,SAAAlB,yBAAAL,aAAA,GAAA,mBAAAwB,QAAA,OAAA,KAAA,IAAAC,kBAAA,IAAAD,QAAAE,iBAAA,IAAAF,QAAA,OAAAnB,yBAAA,SAAAL,aAAA,OAAAA,YAAA0B,iBAAAD,iBAAA,GAAAzB,YAAA,CAAA,SAAAJ,uBAAAG,KAAA,OAAAA,KAAAA,IAAAE,WAAAF,IAAA,CAAAI,QAAAJ,IAAA,CAAA,SAAA4B,mBAAAC,KAAA,OAAA,SAAAA,KAAA,GAAAC,MAAAC,QAAAF,KAAA,OAAAG,kBAAAH,IAAA,CAAAI,CAAAJ,MAAA,SAAAK,MAAA,GAAA,oBAAAC,QAAA,MAAAD,KAAAC,OAAAC,WAAA,MAAAF,KAAA,cAAA,OAAAJ,MAAAO,KAAAH,KAAA,CAAAI,CAAAT,MAAAU,4BAAAV,MAAA,WAAA,MAAA,IAAAW,UAAA,uIAAA,CAAAC,EAAA,CAAA,SAAAC,eAAAb,IAAAc,GAAA,OAAA,SAAAd,KAAA,GAAAC,MAAAC,QAAAF,KAAA,OAAAA,GAAA,CAAAe,CAAAf,MAAA,SAAAA,IAAAc,GAAA,IAAAE,GAAA,MAAAhB,IAAA,KAAA,oBAAAM,QAAAN,IAAAM,OAAAC,WAAAP,IAAA,cAAA,GAAA,MAAAgB,GAAA,CAAA,IAAAC,GAAAC,GAAAC,GAAAC,GAAAC,KAAA,GAAAC,IAAA,EAAAC,IAAA,EAAA,IAAA,GAAAJ,IAAAH,GAAAA,GAAA5B,KAAAY,MAAAwB,KAAA,IAAAV,EAAA,CAAA,GAAAhC,OAAAkC,MAAAA,GAAA,OAAAM,IAAA,OAAA,OAAAA,IAAAL,GAAAE,GAAA/B,KAAA4B,KAAAS,QAAAJ,KAAAK,KAAAT,GAAAU,OAAAN,KAAAO,SAAAd,GAAAQ,IAAA,GAAA,CAAA,MAAAO,KAAAN,IAAA,EAAAL,GAAAW,GAAA,CAAA,QAAA,IAAA,IAAAP,IAAA,MAAAN,GAAAc,SAAAV,GAAAJ,GAAAc,SAAAhD,OAAAsC,MAAAA,IAAA,MAAA,CAAA,QAAA,GAAAG,GAAA,MAAAL,EAAA,CAAA,CAAA,OAAAG,IAAA,CAAA,CAAAU,CAAA/B,IAAAc,IAAAJ,4BAAAV,IAAAc,IAAA,WAAA,MAAA,IAAAH,UAAA,4IAAA,CAAAqB,EAAA,CAAA,SAAAtB,4BAAAuB,EAAAC,QAAA,GAAAD,EAAA,CAAA,GAAA,iBAAAA,EAAA,OAAA9B,kBAAA8B,EAAAC,QAAA,IAAAC,EAAArD,OAAAI,UAAAkD,SAAAhD,KAAA6C,GAAAI,MAAA,GAAA,GAAA,MAAA,WAAAF,GAAAF,EAAAK,cAAAH,EAAAF,EAAAK,YAAAC,MAAA,QAAAJ,GAAA,QAAAA,EAAAlC,MAAAO,KAAAyB,GAAA,cAAAE,GAAA,2CAAAK,KAAAL,GAAAhC,kBAAA8B,EAAAC,aAAA,EAAA,CAAA,SAAA/B,kBAAAH,IAAAyC,MAAA,MAAAA,KAAAA,IAAAzC,IAAA4B,UAAAa,IAAAzC,IAAA4B,QAAA,IAAA,IAAAd,EAAA,EAAA4B,KAAA,IAAAzC,MAAAwC,KAAA3B,EAAA2B,IAAA3B,IAAA4B,KAAA5B,GAAAd,IAAAc,GAAA,OAAA4B,IAAA,CAAA,SAAAC,sBAAAA,oBAAA,WAAA,OAAAC,OAAA,EAAA,IAAAA,QAAA,GAAAC,GAAA/D,OAAAI,UAAA4D,OAAAD,GAAA1D,eAAAJ,eAAAD,OAAAC,gBAAA,SAAAZ,IAAAc,IAAAI,MAAAlB,IAAAc,KAAAI,KAAAsC,KAAA,EAAAoB,QAAA,mBAAAzC,OAAAA,OAAA,CAAA,EAAA0C,eAAAD,QAAAxC,UAAA,aAAA0C,oBAAAF,QAAAG,eAAA,kBAAAC,kBAAAJ,QAAAK,aAAA,gBAAA,SAAAC,OAAAlF,IAAAc,IAAA0C,OAAA,OAAA7C,OAAAC,eAAAZ,IAAAc,IAAA,CAAA0C,MAAAA,MAAA2B,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAArF,IAAAc,IAAA,CAAA,IAAAoE,OAAA,CAAA,EAAA,IAAA,MAAAxB,KAAAwB,OAAA,SAAAlF,IAAAc,IAAA0C,OAAA,OAAAxD,IAAAc,KAAA0C,KAAA,EAAA,SAAA8B,KAAAC,QAAAC,QAAAjE,KAAAkE,aAAA,IAAAC,eAAAF,SAAAA,QAAAzE,qBAAA4E,UAAAH,QAAAG,UAAAC,UAAAjF,OAAAkF,OAAAH,eAAA3E,WAAA+E,QAAA,IAAAC,QAAAN,aAAA,IAAA,OAAA7E,eAAAgF,UAAA,UAAA,CAAApC,MAAAwC,iBAAAT,QAAAhE,KAAAuE,WAAAF,SAAA,CAAA,SAAAK,SAAAC,GAAAlG,IAAAmG,KAAA,IAAA,MAAA,CAAAC,KAAA,SAAAD,IAAAD,GAAAjF,KAAAjB,IAAAmG,MAAA,MAAAzC,KAAA,MAAA,CAAA0C,KAAA,QAAAD,IAAAzC,KAAA,CAAAe,QAAAa,KAAAA,KAAA,IAAAe,iBAAA,CAAA,EAAA,SAAAV,aAAA,SAAAW,oBAAA,CAAA,SAAAC,6BAAA,CAAA,IAAAC,kBAAA,CAAA,EAAAtB,OAAAsB,kBAAA3B,gBAAA,WAAA,OAAA4B,QAAA,IAAAC,SAAA/F,OAAAgG,eAAAC,wBAAAF,UAAAA,SAAAA,SAAAG,OAAA,MAAAD,yBAAAA,0BAAAlC,IAAAC,OAAA1D,KAAA2F,wBAAA/B,kBAAA2B,kBAAAI,yBAAA,IAAAE,GAAAP,2BAAAxF,UAAA4E,UAAA5E,UAAAJ,OAAAkF,OAAAW,mBAAA,SAAAO,sBAAAhG,WAAA,CAAA,OAAA,QAAA,UAAAiG,SAAA,SAAAC,QAAA/B,OAAAnE,UAAAkG,QAAA,SAAAd,KAAA,OAAAM,KAAAS,QAAAD,OAAAd,IAAA,GAAA,GAAA,CAAA,SAAAgB,cAAAvB,UAAAwB,aAAA,SAAAC,OAAAJ,OAAAd,IAAAmB,QAAAC,QAAA,IAAAC,OAAAvB,SAAAL,UAAAqB,QAAArB,UAAAO,KAAA,GAAA,UAAAqB,OAAApB,KAAA,CAAA,IAAAqB,OAAAD,OAAArB,IAAA3C,MAAAiE,OAAAjE,MAAA,OAAAA,OAAA,UAAArD,QAAAqD,QAAAmB,OAAA1D,KAAAuC,MAAA,WAAA4D,YAAAE,QAAA9D,MAAAkE,SAAAC,MAAA,SAAAnE,OAAA6D,OAAA,OAAA7D,MAAA8D,QAAAC,WAAA,SAAA7D,KAAA2D,OAAA,QAAA3D,IAAA4D,QAAAC,WAAAH,YAAAE,QAAA9D,OAAAmE,MAAA,SAAAC,WAAAH,OAAAjE,MAAAoE,UAAAN,QAAAG,OAAA,IAAA,SAAAI,OAAA,OAAAR,OAAA,QAAAQ,MAAAP,QAAAC,UAAA,CAAAA,OAAAC,OAAArB,IAAA,CAAA,IAAA2B,gBAAAlH,eAAA6F,KAAA,UAAA,CAAAjD,MAAA,SAAAyD,OAAAd,KAAA,SAAA4B,6BAAA,OAAA,IAAAX,aAAA,SAAAE,QAAAC,QAAAF,OAAAJ,OAAAd,IAAAmB,QAAAC,OAAA,GAAA,CAAA,OAAAO,gBAAAA,gBAAAA,gBAAAH,KAAAI,2BAAAA,4BAAAA,4BAAA,GAAA,CAAA,SAAA/B,iBAAAT,QAAAhE,KAAAuE,SAAA,IAAAkC,MAAA,iBAAA,OAAA,SAAAf,OAAAd,KAAA,GAAA,cAAA6B,MAAA,MAAA,IAAAC,MAAA,gCAAA,GAAA,cAAAD,MAAA,CAAA,GAAA,UAAAf,OAAA,MAAAd,IAAA,OAAA+B,YAAA,CAAA,IAAApC,QAAAmB,OAAAA,OAAAnB,QAAAK,IAAAA,MAAA,CAAA,IAAAgC,SAAArC,QAAAqC,SAAA,GAAAA,SAAA,CAAA,IAAAC,eAAAC,oBAAAF,SAAArC,SAAA,GAAAsC,eAAA,CAAA,GAAAA,iBAAA/B,iBAAA,SAAA,OAAA+B,cAAA,CAAA,CAAA,GAAA,SAAAtC,QAAAmB,OAAAnB,QAAAwC,KAAAxC,QAAAyC,MAAAzC,QAAAK,SAAA,GAAA,UAAAL,QAAAmB,OAAA,CAAA,GAAA,mBAAAe,MAAA,MAAAA,MAAA,YAAAlC,QAAAK,IAAAL,QAAA0C,kBAAA1C,QAAAK,IAAA,KAAA,WAAAL,QAAAmB,QAAAnB,QAAA2C,OAAA,SAAA3C,QAAAK,KAAA6B,MAAA,YAAA,IAAAR,OAAAvB,SAAAV,QAAAhE,KAAAuE,SAAA,GAAA,WAAA0B,OAAApB,KAAA,CAAA,GAAA4B,MAAAlC,QAAAxC,KAAA,YAAA,iBAAAkE,OAAArB,MAAAE,iBAAA,SAAA,MAAA,CAAA7C,MAAAgE,OAAArB,IAAA7C,KAAAwC,QAAAxC,KAAA,CAAA,UAAAkE,OAAApB,OAAA4B,MAAA,YAAAlC,QAAAmB,OAAA,QAAAnB,QAAAK,IAAAqB,OAAArB,IAAA,EAAA,CAAA,SAAAkC,oBAAAF,SAAArC,SAAA,IAAA4C,WAAA5C,QAAAmB,OAAAA,OAAAkB,SAAA/F,SAAAsG,YAAA,QAAAC,IAAA1B,OAAA,OAAAnB,QAAAqC,SAAA,KAAA,UAAAO,YAAAP,SAAA/F,SAAAuB,SAAAmC,QAAAmB,OAAA,SAAAnB,QAAAK,SAAAwC,EAAAN,oBAAAF,SAAArC,SAAA,UAAAA,QAAAmB,SAAA,WAAAyB,aAAA5C,QAAAmB,OAAA,QAAAnB,QAAAK,IAAA,IAAA3D,UAAA,oCAAAkG,WAAA,aAAArC,iBAAA,IAAAmB,OAAAvB,SAAAgB,OAAAkB,SAAA/F,SAAA0D,QAAAK,KAAA,GAAA,UAAAqB,OAAApB,KAAA,OAAAN,QAAAmB,OAAA,QAAAnB,QAAAK,IAAAqB,OAAArB,IAAAL,QAAAqC,SAAA,KAAA9B,iBAAA,IAAAuC,KAAApB,OAAArB,IAAA,OAAAyC,KAAAA,KAAAtF,MAAAwC,QAAAqC,SAAAU,YAAAD,KAAApF,MAAAsC,QAAAzC,KAAA8E,SAAAW,QAAA,WAAAhD,QAAAmB,SAAAnB,QAAAmB,OAAA,OAAAnB,QAAAK,SAAAwC,GAAA7C,QAAAqC,SAAA,KAAA9B,kBAAAuC,MAAA9C,QAAAmB,OAAA,QAAAnB,QAAAK,IAAA,IAAA3D,UAAA,oCAAAsD,QAAAqC,SAAA,KAAA9B,iBAAA,CAAA,SAAA0C,aAAAC,MAAA,IAAAC,MAAA,CAAAC,OAAAF,KAAA,IAAA,KAAAA,OAAAC,MAAAE,SAAAH,KAAA,IAAA,KAAAA,OAAAC,MAAAG,WAAAJ,KAAA,GAAAC,MAAAI,SAAAL,KAAA,IAAAvC,KAAA6C,WAAA/F,KAAA0F,OAAA,SAAAM,cAAAN,OAAA,IAAAzB,OAAAyB,MAAAO,YAAA,CAAA,EAAAhC,OAAApB,KAAA,gBAAAoB,OAAArB,IAAA8C,MAAAO,WAAAhC,MAAA,CAAA,SAAAzB,QAAAN,aAAAgB,KAAA6C,WAAA,CAAA,CAAAJ,OAAA,SAAAzD,YAAAuB,QAAA+B,aAAAtC,MAAAA,KAAAgD,OAAA,EAAA,CAAA,SAAA5C,OAAA6C,UAAA,GAAAA,SAAA,CAAA,IAAAC,eAAAD,SAAA7E,gBAAA,GAAA8E,eAAA,OAAAA,eAAA1I,KAAAyI,UAAA,GAAA,mBAAAA,SAAArG,KAAA,OAAAqG,SAAA,IAAAE,MAAAF,SAAAjG,QAAA,CAAA,IAAAd,GAAA,EAAAU,KAAA,SAAAA,OAAA,OAAAV,EAAA+G,SAAAjG,QAAA,GAAAkB,OAAA1D,KAAAyI,SAAA/G,GAAA,OAAAU,KAAAG,MAAAkG,SAAA/G,GAAAU,KAAAC,MAAA,EAAAD,KAAA,OAAAA,KAAAG,WAAAmF,EAAAtF,KAAAC,MAAA,EAAAD,MAAA,OAAAA,KAAAA,KAAAA,IAAA,EAAA,MAAA,CAAAA,KAAA6E,YAAA,SAAAA,aAAA,MAAA,CAAA1E,WAAAmF,EAAArF,MAAA,EAAA,CAAA,OAAAgD,kBAAAvF,UAAAwF,2BAAA3F,eAAAkG,GAAA,cAAA,CAAAtD,MAAA+C,2BAAAnB,cAAA,IAAAxE,eAAA2F,2BAAA,cAAA,CAAA/C,MAAA8C,kBAAAlB,cAAA,IAAAkB,kBAAAuD,YAAA3E,OAAAqB,2BAAAvB,kBAAA,qBAAAP,QAAAqF,oBAAA,SAAAC,QAAA,IAAAC,KAAA,mBAAAD,QAAAA,OAAA5F,YAAA,QAAA6F,OAAAA,OAAA1D,mBAAA,uBAAA0D,KAAAH,aAAAG,KAAA5F,QAAAK,QAAAwF,KAAA,SAAAF,QAAA,OAAApJ,OAAAuJ,eAAAvJ,OAAAuJ,eAAAH,OAAAxD,6BAAAwD,OAAAI,UAAA5D,2BAAArB,OAAA6E,OAAA/E,kBAAA,sBAAA+E,OAAAhJ,UAAAJ,OAAAkF,OAAAiB,IAAAiD,QAAAtF,QAAA2F,MAAA,SAAAjE,KAAA,MAAA,CAAAuB,QAAAvB,IAAA,EAAAY,sBAAAI,cAAApG,WAAAmE,OAAAiC,cAAApG,UAAA+D,qBAAA,WAAA,OAAA2B,IAAA,IAAAhC,QAAA0C,cAAAA,cAAA1C,QAAA4F,MAAA,SAAA9E,QAAAC,QAAAjE,KAAAkE,YAAA2B,kBAAA,IAAAA,cAAAA,YAAAkD,SAAA,IAAApI,KAAA,IAAAiF,cAAA7B,KAAAC,QAAAC,QAAAjE,KAAAkE,aAAA2B,aAAA,OAAA3C,QAAAqF,oBAAAtE,SAAAtD,KAAAA,KAAAmB,OAAAsE,MAAA,SAAAF,QAAA,OAAAA,OAAAnE,KAAAmE,OAAAjE,MAAAtB,KAAAmB,MAAA,GAAA,EAAA0D,sBAAAD,IAAA5B,OAAA4B,GAAA9B,kBAAA,aAAAE,OAAA4B,GAAAjC,gBAAA,WAAA,OAAA4B,IAAA,IAAAvB,OAAA4B,GAAA,YAAA,WAAA,MAAA,oBAAA,IAAArC,QAAA8F,KAAA,SAAAC,KAAA,IAAAC,OAAA9J,OAAA6J,KAAAD,KAAA,GAAA,IAAA,IAAAzJ,OAAA2J,OAAAF,KAAAhH,KAAAzC,KAAA,OAAAyJ,KAAAG,UAAA,SAAArH,OAAA,KAAAkH,KAAA9G,QAAA,CAAA,IAAA3C,IAAAyJ,KAAAI,MAAA,GAAA7J,OAAA2J,OAAA,OAAApH,KAAAG,MAAA1C,IAAAuC,KAAAC,MAAA,EAAAD,IAAA,CAAA,OAAAA,KAAAC,MAAA,EAAAD,IAAA,CAAA,EAAAoB,QAAAoC,OAAAA,OAAAd,QAAAhF,UAAA,CAAAoD,YAAA4B,QAAA0D,MAAA,SAAAmB,eAAA,GAAAnE,KAAAoE,KAAA,EAAApE,KAAApD,KAAA,EAAAoD,KAAA6B,KAAA7B,KAAA8B,WAAAI,EAAAlC,KAAAnD,MAAA,EAAAmD,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAN,SAAAwC,EAAAlC,KAAA6C,WAAAtC,QAAAuC,gBAAAqB,cAAA,IAAA,IAAAxG,QAAAqC,KAAA,MAAArC,KAAA0G,OAAA,IAAAnG,OAAA1D,KAAAwF,KAAArC,QAAAwF,OAAAxF,KAAAF,MAAA,MAAAuC,KAAArC,WAAAuE,EAAA,EAAAoC,KAAA,WAAAtE,KAAAnD,MAAA,EAAA,IAAA0H,WAAAvE,KAAA6C,WAAA,GAAAE,WAAA,GAAA,UAAAwB,WAAA5E,KAAA,MAAA4E,WAAA7E,IAAA,OAAAM,KAAAwE,MAAAzC,kBAAA,SAAA0C,WAAA,GAAAzE,KAAAnD,KAAA,MAAA4H,UAAA,IAAApF,QAAAW,KAAA,SAAA0E,OAAAC,IAAAC,QAAA,OAAA7D,OAAApB,KAAA,QAAAoB,OAAArB,IAAA+E,UAAApF,QAAAzC,KAAA+H,IAAAC,SAAAvF,QAAAmB,OAAA,OAAAnB,QAAAK,SAAAwC,KAAA0C,MAAA,CAAA,IAAA,IAAA1I,EAAA8D,KAAA6C,WAAA7F,OAAA,EAAAd,GAAA,IAAAA,EAAA,CAAA,IAAAsG,MAAAxC,KAAA6C,WAAA3G,GAAA6E,OAAAyB,MAAAO,WAAA,GAAA,SAAAP,MAAAC,OAAA,OAAAiC,OAAA,OAAA,GAAAlC,MAAAC,QAAAzC,KAAAoE,KAAA,CAAA,IAAAS,SAAA3G,OAAA1D,KAAAgI,MAAA,YAAAsC,WAAA5G,OAAA1D,KAAAgI,MAAA,cAAA,GAAAqC,UAAAC,WAAA,CAAA,GAAA9E,KAAAoE,KAAA5B,MAAAE,SAAA,OAAAgC,OAAAlC,MAAAE,UAAA,GAAA,GAAA1C,KAAAoE,KAAA5B,MAAAG,WAAA,OAAA+B,OAAAlC,MAAAG,iBAAA,GAAAkC,UAAA,GAAA7E,KAAAoE,KAAA5B,MAAAE,SAAA,OAAAgC,OAAAlC,MAAAE,UAAA,OAAA,CAAA,IAAAoC,WAAA,MAAA,IAAAtD,MAAA,0CAAA,GAAAxB,KAAAoE,KAAA5B,MAAAG,WAAA,OAAA+B,OAAAlC,MAAAG,WAAA,EAAA,CAAA,EAAAX,OAAA,SAAArC,KAAAD,KAAA,IAAA,IAAAxD,EAAA8D,KAAA6C,WAAA7F,OAAA,EAAAd,GAAA,IAAAA,EAAA,CAAA,IAAAsG,MAAAxC,KAAA6C,WAAA3G,GAAA,GAAAsG,MAAAC,QAAAzC,KAAAoE,MAAAlG,OAAA1D,KAAAgI,MAAA,eAAAxC,KAAAoE,KAAA5B,MAAAG,WAAA,CAAA,IAAAoC,aAAAvC,MAAA,MAAA,CAAAuC,eAAA,UAAApF,MAAA,aAAAA,OAAAoF,aAAAtC,QAAA/C,KAAAA,KAAAqF,aAAApC,aAAAoC,aAAA,MAAA,IAAAhE,OAAAgE,aAAAA,aAAAhC,WAAA,CAAA,EAAA,OAAAhC,OAAApB,KAAAA,KAAAoB,OAAArB,IAAAA,IAAAqF,cAAA/E,KAAAQ,OAAA,OAAAR,KAAApD,KAAAmI,aAAApC,WAAA/C,kBAAAI,KAAAgF,SAAAjE,OAAA,EAAAiE,SAAA,SAAAjE,OAAA6B,UAAA,GAAA,UAAA7B,OAAApB,KAAA,MAAAoB,OAAArB,IAAA,MAAA,UAAAqB,OAAApB,MAAA,aAAAoB,OAAApB,KAAAK,KAAApD,KAAAmE,OAAArB,IAAA,WAAAqB,OAAApB,MAAAK,KAAAwE,KAAAxE,KAAAN,IAAAqB,OAAArB,IAAAM,KAAAQ,OAAA,SAAAR,KAAApD,KAAA,OAAA,WAAAmE,OAAApB,MAAAiD,WAAA5C,KAAApD,KAAAgG,UAAAhD,gBAAA,EAAAqF,OAAA,SAAAtC,YAAA,IAAA,IAAAzG,EAAA8D,KAAA6C,WAAA7F,OAAA,EAAAd,GAAA,IAAAA,EAAA,CAAA,IAAAsG,MAAAxC,KAAA6C,WAAA3G,GAAA,GAAAsG,MAAAG,aAAAA,WAAA,OAAA3C,KAAAgF,SAAAxC,MAAAO,WAAAP,MAAAI,UAAAE,cAAAN,OAAA5C,gBAAA,CAAA,EAAAsF,MAAA,SAAAzC,QAAA,IAAA,IAAAvG,EAAA8D,KAAA6C,WAAA7F,OAAA,EAAAd,GAAA,IAAAA,EAAA,CAAA,IAAAsG,MAAAxC,KAAA6C,WAAA3G,GAAA,GAAAsG,MAAAC,SAAAA,OAAA,CAAA,IAAA1B,OAAAyB,MAAAO,WAAA,GAAA,UAAAhC,OAAApB,KAAA,CAAA,IAAAwF,OAAApE,OAAArB,IAAAoD,cAAAN,MAAA,CAAA,OAAA2C,MAAA,CAAA,CAAA,MAAA,IAAA3D,MAAA,wBAAA,EAAA4D,cAAA,SAAAnC,SAAAb,WAAAC,SAAA,OAAArC,KAAA0B,SAAA,CAAA/F,SAAAyE,OAAA6C,UAAAb,WAAAA,WAAAC,QAAAA,SAAA,SAAArC,KAAAQ,SAAAR,KAAAN,SAAAwC,GAAAtC,gBAAA,GAAA5B,OAAA,CAAA,SAAAqH,mBAAAC,IAAAzE,QAAAC,OAAAyE,MAAAC,OAAAnL,IAAAqF,KAAA,IAAA,IAAAyC,KAAAmD,IAAAjL,KAAAqF,KAAA3C,MAAAoF,KAAApF,KAAA,CAAA,MAAAqE,OAAA,YAAAN,OAAAM,MAAA,CAAAe,KAAAtF,KAAAgE,QAAA9D,OAAA8G,QAAAhD,QAAA9D,OAAAmE,KAAAqE,MAAAC,OAAA,CAAA,SAAAC,kBAAAhG,IAAA,OAAA,WAAA,IAAA3E,KAAAkF,KAAA0F,KAAAC,UAAA,OAAA,IAAA9B,SAAA,SAAAhD,QAAAC,QAAA,IAAAwE,IAAA7F,GAAAmG,MAAA9K,KAAA4K,MAAA,SAAAH,MAAAxI,OAAAsI,mBAAAC,IAAAzE,QAAAC,OAAAyE,MAAAC,OAAA,OAAAzI,MAAA,CAAA,SAAAyI,OAAAvI,KAAAoI,mBAAAC,IAAAzE,QAAAC,OAAAyE,MAAAC,OAAA,QAAAvI,KAAAsI,WAAArD,KAAA,CAAA,CAOrC,IAcsB2D,KAdhBC,YAAc,IAAIC,IAMpBC,eAAiB,CAAA,EAQfC,kBAAgBJ,KAAAJ,kBAAA1H,sBAAAyF,MAAG,iBAAM0C,YAAU,IAAAC,eAAAC,YAAAC,aAAA,OAAAtI,sBAAAc,MAAA,SAAAyH,UAAA,cAAAA,SAAAlC,KAAAkC,SAAA1J,MAAA,KAAA,EAAA,OAAA0J,SAAA1J,KAAA,EAGRiH,QAAQ0C,IAAIL,WAAWM,KAAI,SAAAC,YACpD,OAAiC,IAA7BA,WAAWC,QAAQ,KAEZ7C,QAAQhD,QAAQ4F,YAG3B,mBAAA7L,yCAAA6D,QAAA7D,yCAAA6D,OAAAkI,IAAA,IAAA9C,SAAA,SAAAhD,QAAAC,QAAAlG,yCAAAgM,QAAA,CAAcH,YAAU5F,QAAAC,OAAV2F,IAAAA,oBAAAA,QAAAA,OAAAA,SAAAA,oBAAAA,SAAAA,oBAAAA,QAAAA,OAAAA,WAAAA,yCAAAA,SAAAA,cAAAA,yCAAAA,QAAAA,OAAAA,QAAAA,QAAAA,QAAAA,sEAAAA,YACjB,KAAE,KAAA,EAsBwB,OA7BrBN,eAAcG,SAAAzE,KAaduE,YAAcD,eAAeK,KAAI,SAACH,cACpC,MAA4B,iBAAjBA,aACAA,aAEPhL,MAAMC,QAAQ+K,cACPA,aAAa,GAEjB,IACX,IAAGQ,QAAO,SAAC9J,OAAK,OAAKA,SAGfsJ,aAAeF,eAAeK,KAAI,SAACH,cACrC,OAAIhL,MAAMC,QAAQ+K,cACPA,aAAa,GAEjB,IACX,IAAGQ,QAAO,SAAC9J,OAAK,OAAKA,SAEduJ,SAAAtE,OAAA,SAAA,CACHoE,YAAAA,YACAC,aAAAA,eACH,KAAA,EAAA,IAAA,MAAA,OAAAC,SAAAhC,OAAA,GAAAwC,QACJ,KAAA,SAtCqBvK,IAAA,OAAAsJ,KAAAD,MAAA5F,KAAA2F,UAAA,GAuD8CoB,SAAAC,gBAArC,WAAH,OAAS,IAAIjB,IAAID,YAAYmB,UAAU,EAQ2CF,SAAAG,wBAAvE,SAAAC,WAAS,OAAIC,sBAAsBC,SAASC,eAAeH,WAAW,EAQtG,IAAMC,sBAAwB,SAAAG,SACjC,IAAMC,SAAW1B,YAAY/L,IAAIwN,SACjC,IAAIC,WAAYA,SAASC,QAIzB,OAAOD,SAHH1B,YAAY4B,OAAOH,UAIzBR,SAAAK,sBAAAA,sBAaAL,SAAAY,kBAH+B,SAA0BC,OAAA,IAAxBT,gBAAAA,UAAWU,cAAAA,QACpCC,OAAST,SAASC,eAAeH,WACvC,OAAOY,eAAeD,OAAQD,UAQlC,IAAuBG,MAAjBC,gBAAiBD,MAAAvC,kBAAA1H,sBAAAyF,MAAA,SAAA0E,WAAA,IAAAC,KAAAC,mBAAAC,oBAAAC,QAAAC,SAAA,OAAAxK,sBAAAc,MAAA,SAAA2J,WAAA,cAAAA,UAAApE,KAAAoE,UAAA5L,MAAA,KAAA,EAC6B,OAA1CuL,KAAOd,SAASoB,cAAc,QAAQN,KAAIK,UAAA5L,KAAA,EAEdiH,QAAQ0C,IAAI,EAAC,EAAAmC,QAAAA,eAvD5BC,SAuDwDR,KAvD3CS,gBAC7BC,EAAEC,IAAIC,6CAAoCF,EAAEC,IAAIE,oBAAWL,WAChEzH,MAAK,SAAA+H,UAAQ,OAAIA,SAASC,aAqD0D,KAAA,EAAAd,mBAAAI,UAAA3G,KAAAwG,oBAAApM,eAAAmM,mBAAA,GAA3EE,QAAOD,oBAAA,GAAEE,SAAQF,oBAAA,GACxBC,QAAQa,QAAQhB,KAAMI,UAAU,KAAA,EAAA,IAAA,MAAA,OAAAC,UAAAlE,OAxDd,IAACqE,QAwDa,GAAAT,SACnC,KAAA,WALmB,OAAAF,MAAApC,MAAA5F,KAAA2F,UAAA,GAMpBsC,iBAWA,IA0K2BmB,MA1KrBC,WAAa,WAA2B,IAAAC,MAAA3D,UAAA3I,OAAA,QAAAkF,IAAAyD,UAAA,GAAAA,UAAA,GAAP,CAAE,EAAA4D,cAAAD,MAApBE,QAAAA,+BAAU,KAAID,cAC/B,OAAIC,UAIAxD,eAAewD,QACRxD,eAAewD,QAGnB,KAmGLC,uBAAyB,SAAC3B,OAAQQ,QAAST,QAAS6B,cACtD,IACItD,YAEAsD,aAFAtD,YACAC,aACAqD,aADArD,aAOEsD,eAjGgB,SAAC7B,OAAQQ,QAAST,QAAS2B,SACjD,IAAMrB,KAAOd,SAASoB,cAAc,QAAQN,KAEtCyB,OAAS1P,OAAO2P,OAAO,CAAA,GAAI,EAAAC,UAAuBA,2BAAI,CAExDC,SAAUC,QAAOA,QAIjBlC,OAAAA,OAKAa,SAAUR,KAKV8B,YAAa,CACTpC,QAAQqC,KAMZC,cAAc,EAMdC,uBAAuB,EAKvBC,yBAA0B,GAK1BC,cAAe,2EAIfd,QAAOrO,mBACAqO,SAIPe,KAAM,QAINC,WAAW,EAIXC,SAAU5C,QAAQ4C,SAElBC,MAAO,SAACC,QACJrR,QAAQsR,SAASD,OAAQ9C,QAC7B,IAUJ,OAPA+B,OAAOiB,SAAU,EAAAC,0BAAkBlB,OAAOiB,QAAS,UAAW,cAAc,GAC5EjB,OAAOiB,SAAU,EAAAE,OAAgBA,kBAACnB,OAAOiB,QAAS,UAAW,QAG7DjB,OAAOiB,SAAU,EAAAC,0BAAkBlB,OAAOiB,QAAS,iBAAkB,aAAa,GAClFjB,OAAOiB,SAAU,EAAAG,OAAAA,mBAAkBpB,OAAOiB,QAAS,iBAAkB,CAAC,MAAO,QAEtEjB,OAwBgBqB,CAAkBnD,OAAQQ,EAAST,QAASzB,aA0CnE,OArCIuD,eAAeuB,KAAKC,OACpBxB,eAAeuB,KAAKC,KAAKC,MAAQ,IAKjCzB,eAAeuB,KAAKG,SACpB1B,eAAeuB,KAAKG,OAAOD,MAAQzB,eAAeuB,KAAKG,OAAOD,MAEzDE,QAAQ,cAAe,IACvBA,QAAQ,cAAe,IAGvBA,QAAQ,eAAgB,IAGxBA,QAAQ,aAAc,IAGtBA,QAAQ,WAAY,IAGpBC,WAAW,UAAW,MAO/BlF,aAAaQ,QAAO,SAACR,cAAY,MAAuC,mBAA3BA,aAAamF,SAAwB,IAAEjL,SAAQ,SAAC8F,cACzF,IAAMoF,uBAAyBpF,aAAamF,UAAU7B,eAAgB9B,SACtE3N,OAAO2P,OAAOF,eAAgB8B,uBAClC,IAGAvR,OAAO2P,OAAOF,eAAgBrQ,QAAQoS,8BAA8B7D,UAE7D8B,gBAUE5B,gBAAcqB,MAAA3D,kBAAA1H,sBAAAyF,MAAG,kBAAMsE,QAAM,IAAAD,QAAAL,SAAAmE,eAAAnC,QAAAoC,oBAAAC,oBAAAvD,QAAAoB,aAAAoC,eAAAnC,eAAAoC,oBAAAC,qBAAArB,OAAAsB,OAAAtG,UAAA,OAAA5H,sBAAAc,MAAA,SAAAqN,WAAA,cAAAA,UAAA9H,KAAA8H,UAAAtP,MAAA,KAAA,EACQ,GADNiL,QAAOoE,OAAAjP,OAAA,QAAAkF,IAAA+J,OAAA,GAAAA,OAAA,GAAG,CAAA,IAC5CzE,SAAWJ,sBAAsBU,SAC3B,CAAAoE,UAAAtP,KAAA,EAAA,KAAA,CAAA,OAAAsP,UAAAlK,OAAA,SACD6B,QAAQhD,QAAQ2G,WAAS,KAAA,EAOD,OAH7BmE,eAAiB,IAAIQ,SAAOxS,QAAC,qCAG7B6P,QAAUH,WAAWxB,SAAQqE,UAAAtP,KAAA,EAGGiH,QAAQ0C,IAAI,EAC9C,EAAAmC,sBACAzC,iBAAiB/L,OAAO4J,KAAK0F,YAC/B,KAAA,EAOyD,GAPzDoC,oBAAAM,UAAArK,KAAAgK,oBAAA5P,eAAA2P,oBAAA,GAHKtD,QAAOuD,oBAAA,GAAEnC,aAAYmC,oBAAA,KAUtBC,eAAiBxD,QAAQ8D,cAAcrS,IAAI+N,OAAOuE,KACtC,CAAAH,UAAAtP,KAAA,GAAA,KAAA,CAAA,IACVkP,eAAeQ,UAAUC,QAAQ,QAAO,CAAAL,UAAAtP,KAAA,GAAA,KAAA,CAAA,GACpCkP,eAAeQ,YAAcxE,OAAM,CAAAoE,UAAAtP,KAAA,GAAA,KAAA,CACV,OAAzB+O,eAAe9K,UAAUqL,UAAAlK,OAAA,SAClB6B,QAAQhD,QAAQiL,iBAAe,KAAA,GAEb,MAAzBH,eAAe9K,UACT,IAAIW,MAAM,qEAAoE,KAAA,GAAA0K,UAAAtP,KAAA,GAAA,MAAA,KAAA,GAGxFkP,eAAeU,UAAU,KAAA,GAKoD,OAA/E7C,eAAiBF,uBAAuB3B,OAAQQ,EAAST,QAAS6B,cAAawC,UAAAtP,KAAA,GAI9D0L,QAAQmE,KAAK9C,gBAAe,KAAA,GAmB1B,OAnB0BoC,oBAAAG,UAAArK,KAAAmK,qBAAA/P,eAAA8P,oBAAA,GAA5CpB,OAAMqB,qBAAA,GAGblG,YAAYpL,IAAIoN,OAAQ6C,QACxBA,OAAO+B,GAAG,UAAU,SAAcC,OAAA,IAAZ7E,aAAAA,OAElBhC,YAAY8G,OAAO9E,OAAOwE,UAC9B,IAMIxE,OAAO+E,OACP,EAAAC,QAAAA,SAAOhF,OAAO+E,MAAMH,GAAG,UAAU,WAC7B/B,OAAOoC,MACX,IAGJpB,eAAe9K,UAAUqL,UAAAlK,OAAA,SAClB2I,QAAM,KAAA,GAAA,IAAA,MAAA,OAAAuB,UAAA5H,OAAA,GAAA0I,SAChB,KAAA,SAhE0BC,KAAA,OAAA7D,MAAAxD,MAAA5F,KAAA2F,UAAA,GAgEzBoB,SAAAgB,eAAAA,eAWAhB,SAAAmG,uBAFoC,WAAkB,IAAjBrF,QAAUlC,UAAA3I,OAAA,QAAAkF,IAAAyD,UAAA,GAAAA,UAAA,GAAA,CAAA,EAC7CK,eAAiB6B,QACnB"}