{"version":3,"file":"conditions.min.js","sources":["../../../src/local/editor/conditions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report builder conditions editor\n *\n * @module      core_reportbuilder/local/editor/conditions\n * @copyright   2021 Paul Holden <paulh@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport $ from 'jquery';\nimport CustomEvents from 'core/custom_interaction_events';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport 'core/inplace_editable';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\nimport SortableList from 'core/sortable_list';\nimport {get_string as getString} from 'core/str';\nimport Templates from 'core/templates';\nimport {add as addToast} from 'core/toast';\nimport DynamicForm from 'core_form/dynamicform';\nimport * as reportEvents from 'core_reportbuilder/local/events';\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\nimport {addCondition, deleteCondition, reorderCondition, resetConditions} from 'core_reportbuilder/local/repository/conditions';\n\n/**\n * Reload conditions settings region\n *\n * @param {Element} reportElement\n * @param {Object} templateContext\n * @return {Promise}\n */\nconst reloadSettingsConditionsRegion = (reportElement, templateContext) => {\n    const pendingPromise = new Pending('core_reportbuilder/conditions:reload');\n    const settingsConditionsRegion = reportElement.querySelector(reportSelectors.regions.settingsConditions);\n\n    return Templates.renderForPromise('core_reportbuilder/local/settings/conditions', {conditions: templateContext})\n        .then(({html, js}) => {\n            Templates.replaceNode(settingsConditionsRegion, html, js + templateContext.javascript);\n\n            initConditionsForm();\n\n            // Re-focus the add condition element after reloading the region.\n            const reportAddCondition = reportElement.querySelector(reportSelectors.actions.reportAddCondition);\n            reportAddCondition?.focus();\n\n            return pendingPromise.resolve();\n        });\n};\n\n/**\n * Initialise conditions form, must be called on each init because the form container is re-created when switching editor modes\n */\nconst initConditionsForm = () => {\n    CustomEvents.define(reportSelectors.actions.reportAddCondition, [CustomEvents.events.accessibleChange]);\n\n    // Handle dynamic conditions form.\n    const reportElement = document.querySelector(reportSelectors.regions.report);\n    const conditionFormContainer = reportElement.querySelector(reportSelectors.regions.settingsConditions);\n    if (!conditionFormContainer) {\n        return;\n    }\n    const conditionForm = new DynamicForm(conditionFormContainer, '\\\\core_reportbuilder\\\\form\\\\condition');\n\n    // Submit report conditions.\n    conditionForm.addEventListener(conditionForm.events.FORM_SUBMITTED, event => {\n        event.preventDefault();\n\n        getString('conditionsapplied', 'core_reportbuilder')\n            .then(addToast)\n            .catch(Notification.exception);\n\n        // After the form has been submitted, we should trigger report table reload.\n        dispatchEvent(reportEvents.tableReload, {}, reportElement);\n    });\n\n    // Reset report conditions.\n    conditionForm.addEventListener(conditionForm.events.NOSUBMIT_BUTTON_PRESSED, event => {\n        event.preventDefault();\n\n        Notification.saveCancelPromise(\n            getString('resetconditions', 'core_reportbuilder'),\n            getString('resetconditionsconfirm', 'core_reportbuilder'),\n            getString('resetall', 'core_reportbuilder'),\n            {triggerElement: event.detail}\n        ).then(() => {\n            const pendingPromise = new Pending('core_reportbuilder/conditions:reset');\n\n            return resetConditions(reportElement.dataset.reportId)\n                .then(data => reloadSettingsConditionsRegion(reportElement, data))\n                .then(() => addToast(getString('conditionsreset', 'core_reportbuilder')))\n                .then(() => {\n                    dispatchEvent(reportEvents.tableReload, {}, reportElement);\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }).catch(() => {\n            return;\n        });\n    });\n};\n\n/**\n * Initialise module, prefetch all required strings\n *\n * @param {Boolean} initialized Ensure we only add our listeners once\n */\nexport const init = initialized => {\n    prefetchStrings('core_reportbuilder', [\n        'conditionadded',\n        'conditiondeleted',\n        'conditionmoved',\n        'conditionsapplied',\n        'conditionsreset',\n        'deletecondition',\n        'deleteconditionconfirm',\n        'resetall',\n        'resetconditions',\n        'resetconditionsconfirm',\n    ]);\n\n    prefetchStrings('core', [\n        'delete',\n    ]);\n\n    initConditionsForm();\n    if (initialized) {\n        return;\n    }\n\n    // Add condition to report. Use custom events helper to ensure consistency across platforms.\n    $(document).on(CustomEvents.events.accessibleChange, reportSelectors.actions.reportAddCondition, event => {\n        const reportAddCondition = event.target.closest(reportSelectors.actions.reportAddCondition);\n        if (reportAddCondition) {\n            event.preventDefault();\n\n            // Check if dropdown is closed with no condition selected.\n            if (reportAddCondition.selectedIndex === 0) {\n                return;\n            }\n\n            const reportElement = reportAddCondition.closest(reportSelectors.regions.report);\n            const pendingPromise = new Pending('core_reportbuilder/conditions:add');\n\n            addCondition(reportElement.dataset.reportId, reportAddCondition.value)\n                .then(data => reloadSettingsConditionsRegion(reportElement, data))\n                .then(() => getString('conditionadded', 'core_reportbuilder',\n                    reportAddCondition.options[reportAddCondition.selectedIndex].text))\n                .then(addToast)\n                .then(() => {\n                    dispatchEvent(reportEvents.tableReload, {}, reportElement);\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }\n    });\n\n    document.addEventListener('click', event => {\n\n        // Remove condition from report.\n        const reportRemoveCondition = event.target.closest(reportSelectors.actions.reportRemoveCondition);\n        if (reportRemoveCondition) {\n            event.preventDefault();\n\n            const reportElement = reportRemoveCondition.closest(reportSelectors.regions.report);\n            const conditionContainer = reportRemoveCondition.closest(reportSelectors.regions.activeCondition);\n            const conditionName = conditionContainer.dataset.conditionName;\n\n            Notification.saveCancelPromise(\n                getString('deletecondition', 'core_reportbuilder', conditionName),\n                getString('deleteconditionconfirm', 'core_reportbuilder', conditionName),\n                getString('delete', 'core'),\n                {triggerElement: reportRemoveCondition}\n            ).then(() => {\n                const pendingPromise = new Pending('core_reportbuilder/conditions:remove');\n\n                return deleteCondition(reportElement.dataset.reportId, conditionContainer.dataset.conditionId)\n                    .then(data => reloadSettingsConditionsRegion(reportElement, data))\n                    .then(() => addToast(getString('conditiondeleted', 'core_reportbuilder', conditionName)))\n                    .then(() => {\n                        dispatchEvent(reportEvents.tableReload, {}, reportElement);\n                        return pendingPromise.resolve();\n                    })\n                    .catch(Notification.exception);\n            }).catch(() => {\n                return;\n            });\n        }\n    });\n\n    // Initialize sortable list to handle active conditions moving (note JQuery dependency, see MDL-72293 for resolution).\n    var activeConditionsSortableList = new SortableList(`${reportSelectors.regions.activeConditions}`,\n        {isHorizontal: false});\n    activeConditionsSortableList.getElementName = element => Promise.resolve(element.data('conditionName'));\n\n    $(document).on(SortableList.EVENTS.DROP, reportSelectors.regions.activeCondition, (event, info) => {\n        if (info.positionChanged) {\n            const pendingPromise = new Pending('core_reportbuilder/conditions:reorder');\n            const reportElement = event.target.closest(reportSelectors.regions.report);\n            const conditionId = info.element.data('conditionId');\n            const conditionPosition = info.element.data('conditionPosition');\n\n            // Select target position, if moving to the end then count number of element siblings.\n            let targetConditionPosition = info.targetNextElement.data('conditionPosition') || info.element.siblings().length + 2;\n            if (targetConditionPosition > conditionPosition) {\n                targetConditionPosition--;\n            }\n\n            reorderCondition(reportElement.dataset.reportId, conditionId, targetConditionPosition)\n                .then(data => reloadSettingsConditionsRegion(reportElement, data))\n                .then(() => getString('conditionmoved', 'core_reportbuilder', info.element.data('conditionName')))\n                .then(addToast)\n                .then(() => {\n                    dispatchEvent(reportEvents.tableReload, {}, reportElement);\n                    return pendingPromise.resolve();\n                })\n                .catch(Notification.exception);\n        }\n    });\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireDefault","_exports","value","init","_jquery","_custom_interaction_events","_notification","_pending","_sortable_list","_templates","_dynamicform","reportEvents","reportSelectors","reloadSettingsConditionsRegion","reportElement","templateContext","pendingPromise","Pending","settingsConditionsRegion","querySelector","regions","settingsConditions","Templates","renderForPromise","conditions","then","_ref","html","js","replaceNode","javascript","initConditionsForm","reportAddCondition","actions","focus","resolve","CustomEvents","define","events","accessibleChange","document","report","conditionFormContainer","conditionForm","DynamicForm","addEventListener","FORM_SUBMITTED","event","preventDefault","getString","addToast","catch","Notification","exception","dispatchEvent","tableReload","NOSUBMIT_BUTTON_PRESSED","saveCancelPromise","get_string","triggerElement","detail","resetConditions","dataset","reportId","data","add","initialized","prefetchStrings","$","on","target","closest","selectedIndex","addCondition","options","text","reportRemoveCondition","conditionContainer","activeCondition","conditionName","deleteCondition","conditionId","SortableList","concat","activeConditions","isHorizontal","getElementName","element","Promise","EVENTS","DROP","info","positionChanged","conditionPosition","targetConditionPosition","targetNextElement","siblings","length","reorderCondition"],"mappings":"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"}