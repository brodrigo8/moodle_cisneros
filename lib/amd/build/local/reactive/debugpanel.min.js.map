{"version":3,"file":"debugpanel.min.js","sources":["../../../src/local/reactive/debugpanel.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Reactive module debug panel.\n *\n * This module contains all the UI components for the reactive debug tools.\n * Those tools are only available if the debug is enables and could be used\n * from the footer.\n *\n * @module     core/local/reactive/debugpanel\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent, DragDrop, debug} from 'core/reactive';\nimport log from 'core/log';\nimport {debounce} from 'core/utils';\n\n/**\n * Init the main reactive panel.\n *\n * @param {element|string} target the DOM main element or its ID\n * @param {object} selectors optional css selector overrides\n */\nexport const init = (target, selectors) => {\n    const element = document.getElementById(target);\n    // Check if the debug reactive module is available.\n    if (debug === undefined) {\n        element.remove();\n        return;\n    }\n    // Create the main component.\n    new GlobalDebugPanel({\n        element,\n        reactive: debug,\n        selectors,\n    });\n};\n\n/**\n * Init an instance reactive subpanel.\n *\n * @param {element|string} target the DOM main element or its ID\n * @param {object} selectors optional css selector overrides\n */\nexport const initsubpanel = (target, selectors) => {\n    const element = document.getElementById(target);\n    // Check if the debug reactive module is available.\n    if (debug === undefined) {\n        element.remove();\n        return;\n    }\n    // Create the main component.\n    new DebugInstanceSubpanel({\n        element,\n        reactive: debug,\n        selectors,\n    });\n};\n\n/**\n * Component for the main reactive dev panel.\n *\n * This component shows the list of reactive instances and handle the buttons\n * to open a specific instance panel.\n */\nclass GlobalDebugPanel extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'GlobalDebugPanel';\n        // Default query selectors.\n        this.selectors = {\n            LOADERS: `[data-for='loaders']`,\n            SUBPANEL: `[data-for='subpanel']`,\n            LOG: `[data-for='log']`,\n        };\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {object} state the initial state\n     */\n    stateReady(state) {\n        if (state.reactives.size > 0) {\n            this.getElement(this.selectors.LOADERS).innerHTML = '';\n        }\n        // Generate loading buttons.\n        state.reactives.forEach(\n            instance => {\n                this._createLoader(instance);\n            }\n        );\n        // Remove loading wheel.\n        this.getElement(this.selectors.SUBPANEL).innerHTML = '';\n    }\n\n    /**\n     * Create a debug panel button for a specific reactive instance.\n     *\n     * @param {object} instance hte instance data\n     */\n    _createLoader(instance) {\n        const loaders = this.getElement(this.selectors.LOADERS);\n        const btn = document.createElement(\"button\");\n        btn.innerHTML = instance.id;\n        btn.dataset.id = instance.id;\n        loaders.appendChild(btn);\n        // Add click event.\n        this.addEventListener(btn, 'click', () => this._openPanel(btn, instance));\n    }\n\n    /**\n     * Open a debug panel.\n     *\n     * @param {Element} btn the button element\n     * @param {object} instance the instance data\n     */\n    async _openPanel(btn, instance) {\n        try {\n            const target = this.getElement(this.selectors.SUBPANEL);\n            const data = {...instance};\n            await this.renderComponent(target, 'core/local/reactive/debuginstancepanel', data);\n        } catch (error) {\n            log.error('Cannot load reactive debug subpanel');\n            throw error;\n        }\n    }\n}\n\n/**\n * Component for the main reactive dev panel.\n *\n * This component shows the list of reactive instances and handle the buttons\n * to open a specific instance panel.\n */\nclass DebugInstanceSubpanel extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'DebugInstanceSubpanel';\n        // Default query selectors.\n        this.selectors = {\n            NAME: `[data-for='name']`,\n            CLOSE: `[data-for='close']`,\n            READMODE: `[data-for='readmode']`,\n            HIGHLIGHT: `[data-for='highlight']`,\n            LOG: `[data-for='log']`,\n            STATE: `[data-for='state']`,\n            CLEAN: `[data-for='clean']`,\n            PIN: `[data-for='pin']`,\n            SAVE: `[data-for='save']`,\n            INVALID: `[data-for='invalid']`,\n        };\n        this.id = this.element.dataset.id;\n        this.controller = M.reactive[this.id];\n\n        // The component is created always pinned.\n        this.draggable = false;\n        // We want the element to be dragged like modal.\n        this.relativeDrag = true;\n        // Save warning (will be loaded when state is ready.\n        this.strings = {\n            savewarning: '',\n        };\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     */\n    stateReady() {\n        // Enable drag and drop.\n        this.dragdrop = new DragDrop(this);\n\n        // Close button.\n        this.addEventListener(\n            this.getElement(this.selectors.CLOSE),\n            'click',\n            this.remove\n        );\n        // Highlight button.\n        if (this.controller.highlight) {\n            this._toggleButtonText(this.getElement(this.selectors.HIGHLIGHT));\n        }\n        this.addEventListener(\n            this.getElement(this.selectors.HIGHLIGHT),\n            'click',\n            () => {\n                this.controller.highlight = !this.controller.highlight;\n                this._toggleButtonText(this.getElement(this.selectors.HIGHLIGHT));\n            }\n        );\n        // Edit mode button.\n        this.addEventListener(\n            this.getElement(this.selectors.READMODE),\n            'click',\n            this._toggleEditMode\n        );\n        // Clean log and state.\n        this.addEventListener(\n            this.getElement(this.selectors.CLEAN),\n            'click',\n            this._cleanAreas\n        );\n        // Unpin panel butotn.\n        this.addEventListener(\n            this.getElement(this.selectors.PIN),\n            'click',\n            this._togglePin\n        );\n        // Save button, state format error message and state textarea.\n        this.getElement(this.selectors.SAVE).disabled = true;\n\n        this.addEventListener(\n            this.getElement(this.selectors.STATE),\n            'keyup',\n            debounce(this._checkJSON, 500)\n        );\n\n        this.addEventListener(\n            this.getElement(this.selectors.SAVE),\n            'click',\n            this._saveState\n        );\n        // Save the default save warning message.\n        this.strings.savewarning = this.getElement(this.selectors.INVALID)?.innerHTML ?? '';\n        // Add current state.\n        this._refreshState();\n    }\n\n    /**\n     * Remove all subcomponents dependencies.\n     */\n    destroy() {\n        if (this.dragdrop !== undefined) {\n            this.dragdrop.unregister();\n        }\n    }\n\n    /**\n     * Component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        return [\n            {watch: `reactives[${this.id}].lastChanges:updated`, handler: this._refreshLog},\n            {watch: `reactives[${this.id}].modified:updated`, handler: this._refreshState},\n            {watch: `reactives[${this.id}].readOnly:updated`, handler: this._refreshReadOnly},\n        ];\n    }\n\n    /**\n     * Wtacher method to refresh the log panel.\n     *\n     * @param {object} args\n     * @param {HTMLElement} args.element\n     */\n    _refreshLog({element}) {\n        const list = element?.lastChanges ?? [];\n\n        const logContent = list.join(\"\\n\");\n        // Append last log.\n        const target = this.getElement(this.selectors.LOG);\n        target.value += `\\n\\n= Transaction =\\n ${logContent}`;\n        target.scrollTop = target.scrollHeight;\n    }\n\n    /**\n     * Listener method to clean the log area.\n     */\n    _cleanAreas() {\n        let target = this.getElement(this.selectors.LOG);\n        target.value = '';\n\n        this._refreshState();\n    }\n\n    /**\n     * Watcher to refresh the state information.\n     */\n    _refreshState() {\n        const target = this.getElement(this.selectors.STATE);\n        target.value = JSON.stringify(this.controller.state, null, 4);\n    }\n\n    /**\n     * Watcher to update the read only information.\n     */\n    _refreshReadOnly() {\n        // Toggle the read mode button.\n        const target = this.getElement(this.selectors.READMODE);\n        if (target.dataset.readonly === undefined) {\n            target.dataset.readonly = target.innerHTML;\n        }\n        if (this.controller.readOnly) {\n            target.innerHTML = target.dataset.readonly;\n        } else {\n            target.innerHTML = target.dataset.alt;\n        }\n    }\n\n    /**\n     * Listener to toggle the edit mode of the component.\n     */\n    _toggleEditMode() {\n        this.controller.readOnly = !this.controller.readOnly;\n    }\n\n    /**\n     * Check that the edited state JSON is valid.\n     *\n     * Not all valid JSON are suitable for transforming the state. For example,\n     * the first level attributes cannot change the type.\n     *\n     * @return {undefined|array} Array of state updates.\n     */\n    _checkJSON() {\n        const invalid = this.getElement(this.selectors.INVALID);\n        const save = this.getElement(this.selectors.SAVE);\n\n        const edited = this.getElement(this.selectors.STATE).value;\n\n        const currentStateData = this.controller.stateData;\n\n        // Check if the json is tha same as state.\n        if (edited == JSON.stringify(this.controller.state, null, 4)) {\n            invalid.style.color = '';\n            invalid.innerHTML = '';\n            save.disabled = true;\n            return undefined;\n        }\n\n        // Check if the json format is valid.\n        try {\n            const newState = JSON.parse(edited);\n            // Check the first level did not change types.\n            const result = this._generateStateUpdates(currentStateData, newState);\n            // Enable save button.\n            invalid.style.color = '';\n            invalid.innerHTML = this.strings.savewarning;\n            save.disabled = false;\n            return result;\n        } catch (error) {\n            invalid.style.color = 'red';\n            invalid.innerHTML = error.message ?? 'Invalid JSON sctructure';\n            save.disabled = true;\n            return undefined;\n        }\n    }\n\n    /**\n     * Listener to save the current edited state into the real state.\n     */\n    _saveState() {\n        const updates = this._checkJSON();\n        if (!updates) {\n            return;\n        }\n        // Sent the updates to the state manager.\n        this.controller.processUpdates(updates);\n    }\n\n    /**\n     * Check that the edited state JSON is valid.\n     *\n     * Not all valid JSON are suitable for transforming the state. For example,\n     * the first level attributes cannot change the type. This method do a two\n     * steps comparison between the current state data and the new state data.\n     *\n     * A reactive state cannot be overridden like any other variable. To keep\n     * the watchers updated is necessary to transform the current state into\n     * the new one. As a result, this method generates all the necessary state\n     * updates to convert the state into the new state.\n     *\n     * @param {object} currentStateData\n     * @param {object} newStateData\n     * @return {array} Array of state updates.\n     * @throws {Error} is the structure is not compatible\n     */\n    _generateStateUpdates(currentStateData, newStateData) {\n\n        const updates = [];\n\n        const ids = {};\n\n        // Step 1: Add all overrides newStateData.\n        for (const [key, newValue] of Object.entries(newStateData)) {\n            // Check is it is new.\n            if (Array.isArray(newValue)) {\n                ids[key] = {};\n                newValue.forEach(element => {\n                    if (element.id === undefined) {\n                        throw Error(`Array ${key} element without id attribute`);\n                    }\n                    updates.push({\n                        name: key,\n                        action: 'override',\n                        fields: element,\n                    });\n                    const index = String(element.id).valueOf();\n                    ids[key][index] = true;\n                });\n            } else {\n                updates.push({\n                    name: key,\n                    action: 'override',\n                    fields: newValue,\n                });\n            }\n        }\n        // Step 2: delete unnecesary data from currentStateData.\n        for (const [key, oldValue] of Object.entries(currentStateData)) {\n            let deleteField = false;\n            // Check if the attribute is still there.\n            if (newStateData[key] === undefined) {\n                deleteField = true;\n            }\n            if (Array.isArray(oldValue)) {\n                if (!deleteField && ids[key] === undefined) {\n                    throw Error(`Array ${key} cannot change to object.`);\n                }\n                oldValue.forEach(element => {\n                    const index = String(element.id).valueOf();\n                    let deleteEntry = deleteField;\n                    // Check if the id is there.\n                    if (!deleteEntry && ids[key][index] === undefined) {\n                        deleteEntry = true;\n                    }\n                    if (deleteEntry) {\n                        updates.push({\n                            name: key,\n                            action: 'delete',\n                            fields: element,\n                        });\n                    }\n                });\n            } else {\n                if (!deleteField && ids[key] !== undefined) {\n                    throw Error(`Object ${key} cannot change to array.`);\n                }\n                if (deleteField) {\n                    updates.push({\n                        name: key,\n                        action: 'delete',\n                        fields: oldValue,\n                    });\n                }\n            }\n        }\n        // Delete all elements without action.\n        return updates;\n    }\n\n    // Drag and drop methods.\n\n    /**\n     * Get the draggable data of this component.\n     *\n     * @returns {Object} exported course module drop data\n     */\n    getDraggableData() {\n        return this.draggable;\n    }\n\n    /**\n     * The element drop end hook.\n     *\n     * @param {Object} dropdata the dropdata\n     * @param {Event} event the dropdata\n     */\n    dragEnd(dropdata, event) {\n        this.element.style.top = `${event.newFixedTop}px`;\n        this.element.style.left = `${event.newFixedLeft}px`;\n    }\n\n    /**\n     * Pin and unpin the panel.\n     */\n    _togglePin() {\n        this.draggable = !this.draggable;\n        this.dragdrop.setDraggable(this.draggable);\n        if (this.draggable) {\n            this._unpin();\n        } else {\n            this._pin();\n        }\n    }\n\n    /**\n     * Unpin the panel form the footer.\n     */\n    _unpin() {\n        // Find the initial spot.\n        const pageCenterY = window.innerHeight / 2;\n        const pageCenterX = window.innerWidth / 2;\n        // Put the element in the middle of the screen\n        const style = {\n            position: 'fixed',\n            resize: 'both',\n            overflow: 'auto',\n            height: '400px',\n            width: '400px',\n            top: `${pageCenterY - 200}px`,\n            left: `${pageCenterX - 200}px`,\n        };\n        Object.assign(this.element.style, style);\n        // Small also the text areas.\n        this.getElement(this.selectors.STATE).style.height = '50px';\n        this.getElement(this.selectors.LOG).style.height = '50px';\n\n        this._toggleButtonText(this.getElement(this.selectors.PIN));\n    }\n\n    /**\n     * Pin the panel into the footer.\n     */\n    _pin() {\n        const props = [\n            'position',\n            'resize',\n            'overflow',\n            'top',\n            'left',\n            'height',\n            'width',\n        ];\n        props.forEach(\n            prop => this.element.style.removeProperty(prop)\n        );\n        this._toggleButtonText(this.getElement(this.selectors.PIN));\n    }\n\n    /**\n     * Toogle the button text with the data-alt value.\n     *\n     * @param {Element} element the button element\n     */\n    _toggleButtonText(element) {\n        [element.innerHTML, element.dataset.alt] = [element.dataset.alt, element.innerHTML];\n    }\n\n}\n"],"names":["obj","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","length","err","return","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","defineProperty","key","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread","target","arguments","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","asyncGeneratorStep","gen","_next","_throw","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_inherits","subClass","superClass","_setPrototypeOf","p","bind","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","_possibleConstructorReturn","ReferenceError","_assertThisInitialized","_log","__esModule","default","_exports","init","selectors","element","document","getElementById","debug","GlobalDebugPanel","reactive","remove","initsubpanel","DebugInstanceSubpanel","_BaseComponent","_openPanel2","_super","LOADERS","SUBPANEL","LOG","_this","reactives","size","getElement","innerHTML","_createLoader","_this2","loaders","btn","createElement","id","dataset","appendChild","addEventListener","_openPanel","_callee","data","_context","renderComponent","t0","log","args","_x2","BaseComponent","_BaseComponent2","_super2","NAME","CLOSE","READMODE","HIGHLIGHT","STATE","CLEAN","PIN","SAVE","INVALID","controller","M","draggable","relativeDrag","strings","savewarning","_this$getElement$inne","_this$getElement","_this3","dragdrop","DragDrop","highlight","_toggleButtonText","_toggleEditMode","_cleanAreas","_togglePin","disabled","debounce","_checkJSON","_saveState","_refreshState","unregister","watch","concat","handler","_refreshLog","_refreshReadOnly","_ref","_element$lastChanges","logContent","lastChanges","join","scrollTop","scrollHeight","JSON","stringify","readonly","readOnly","alt","invalid","save","edited","currentStateData","stateData","style","color","newState","parse","_generateStateUpdates","_error$message","message","updates","processUpdates","newStateData","ids","_loop","_Object$entries$_i","_Object$entries","newValue","action","fields","index","entries","_loop2","_Object$entries2$_i","_Object$entries2","_i2","oldValue","deleteField","deleteEntry","dropdata","event","top","newFixedTop","left","newFixedLeft","setDraggable","_unpin","_pin","pageCenterY","window","innerHeight","pageCenterX","innerWidth","position","resize","overflow","height","width","assign","_this4","prop","removeProperty","_ref2"],"mappings":"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"}