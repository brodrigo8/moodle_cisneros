{"version":3,"file":"view_manager.min.js","sources":["../src/view_manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handler calendar view changes.\n *\n * @module     core_calendar/view_manager\n * @copyright  2017 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport * as CalendarRepository from 'core_calendar/repository';\nimport CalendarEvents from 'core_calendar/events';\nimport * as CalendarSelectors from 'core_calendar/selectors';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport SummaryModal from 'core_calendar/summary_modal';\nimport CustomEvents from 'core/custom_interaction_events';\nimport {get_string as getString} from 'core/str';\nimport Pending from 'core/pending';\nimport {prefetchStrings} from 'core/prefetch';\n\n/**\n * Limit number of events per day\n *\n */\nconst LIMIT_DAY_EVENTS = 5;\n\n/**\n * Hide day events if more than 5.\n *\n */\nexport const foldDayEvents = () => {\n    const root = $(CalendarSelectors.elements.monthDetailed);\n    const days = root.find(CalendarSelectors.day);\n    if (days.length === 0) {\n        return;\n    }\n    days.each(function() {\n        const dayContainer = $(this);\n        const eventsSelector = `${CalendarSelectors.elements.dateContent} ul li[data-event-eventtype]`;\n        const filteredEventsSelector = `${CalendarSelectors.elements.dateContent} ul li[data-event-filtered=\"true\"]`;\n        const moreEventsSelector = `${CalendarSelectors.elements.dateContent} [data-action=\"view-more-events\"]`;\n        const events = dayContainer.find(eventsSelector);\n        if (events.length === 0) {\n            return;\n        }\n\n        const filteredEvents = dayContainer.find(filteredEventsSelector);\n        const numberOfFiltered = filteredEvents.length;\n        const numberOfEvents = events.length - numberOfFiltered;\n\n        let count = 1;\n        events.each(function() {\n            const event = $(this);\n            const isNotFiltered = event.attr('data-event-filtered') !== 'true';\n            const offset = (numberOfEvents === LIMIT_DAY_EVENTS) ? 0 : 1;\n            if (isNotFiltered) {\n                if (count > LIMIT_DAY_EVENTS - offset) {\n                    event.attr('data-event-folded', 'true');\n                    event.hide();\n                } else {\n                    event.attr('data-event-folded', 'false');\n                    event.show();\n                    count++;\n                }\n            } else {\n                // It's being filtered out.\n                event.attr('data-event-folded', 'false');\n            }\n        });\n\n        const moreEventsLink = dayContainer.find(moreEventsSelector);\n        if (numberOfEvents > LIMIT_DAY_EVENTS) {\n            const numberOfHiddenEvents = numberOfEvents - LIMIT_DAY_EVENTS + 1;\n            moreEventsLink.show();\n            getString('moreevents', 'calendar', numberOfHiddenEvents).then(str => {\n                const link = moreEventsLink.find('strong a');\n                moreEventsLink.attr('data-event-folded', 'false');\n                link.text(str);\n                return str;\n            }).fail();\n        } else {\n            moreEventsLink.hide();\n        }\n    });\n};\n\n/**\n * Register and handle month calendar events.\n *\n * @param {string} pendingId pending id.\n */\nexport const registerEventListenersForMonthDetailed = (pendingId) => {\n    const events = `${CalendarEvents.viewUpdated}`;\n    $('body').on(events, function(e) {\n        foldDayEvents(e);\n    });\n    foldDayEvents();\n    $('body').on(CalendarEvents.filterChanged, function(e, data) {\n        const root = $(CalendarSelectors.elements.monthDetailed);\n        const pending = new Pending(pendingId);\n        const target = root.find(CalendarSelectors.eventType[data.type]);\n        const transitionPromise = $.Deferred();\n        if (data.hidden) {\n            transitionPromise.then(function() {\n                target.attr('data-event-filtered', 'true');\n                return target.hide().promise();\n            }).fail();\n        } else {\n            transitionPromise.then(function() {\n                target.attr('data-event-filtered', 'false');\n                return target.show().promise();\n            }).fail();\n        }\n\n        transitionPromise.then(function() {\n            foldDayEvents();\n            return;\n        })\n        .always(pending.resolve)\n        .fail();\n\n        transitionPromise.resolve();\n    });\n};\n\n/**\n * Register event listeners for the module.\n *\n * @param {object} root The root element.\n */\nconst registerEventListeners = (root) => {\n    root = $(root);\n\n    // Bind click events to event links.\n    root.on('click', CalendarSelectors.links.eventLink, (e) => {\n        const target = e.target;\n        let eventLink = null;\n        let eventId = null;\n        const pendingPromise = new Pending('core_calendar/view_manager:eventLink:click');\n\n        if (target.matches(CalendarSelectors.actions.viewEvent)) {\n            eventLink = target;\n        } else {\n            eventLink = target.closest(CalendarSelectors.actions.viewEvent);\n        }\n\n        if (eventLink) {\n            eventId = eventLink.dataset.eventId;\n        } else {\n            eventId = target.querySelector(CalendarSelectors.actions.viewEvent).dataset.eventId;\n        }\n\n        if (eventId) {\n            // A link was found. Show the modal.\n\n            e.preventDefault();\n            // We've handled the event so stop it from bubbling\n            // and causing the day click handler to fire.\n            e.stopPropagation();\n\n            renderEventSummaryModal(eventId)\n            .then(pendingPromise.resolve)\n            .catch();\n        } else {\n            pendingPromise.resolve();\n        }\n    });\n\n    root.on('click', CalendarSelectors.links.navLink, (e) => {\n        const wrapper = root.find(CalendarSelectors.wrapper);\n        const view = wrapper.data('view');\n        const courseId = wrapper.data('courseid');\n        const categoryId = wrapper.data('categoryid');\n        const link = e.currentTarget;\n\n        if (view === 'month' || view === 'monthblock') {\n            changeMonth(root, link.href, link.dataset.year, link.dataset.month, courseId, categoryId, link.dataset.day);\n            e.preventDefault();\n        } else if (view === 'day') {\n            changeDay(root, link.href, link.dataset.year, link.dataset.month, link.dataset.day, courseId, categoryId);\n            e.preventDefault();\n        }\n    });\n\n    const viewSelector = root.find(CalendarSelectors.viewSelector);\n    CustomEvents.define(viewSelector, [CustomEvents.events.activate]);\n    viewSelector.on(\n        CustomEvents.events.activate,\n        (e) => {\n            e.preventDefault();\n\n            const option = e.target;\n            if (option.classList.contains('active')) {\n                return;\n            }\n\n            const view = option.dataset.view,\n                year = option.dataset.year,\n                month = option.dataset.month,\n                day = option.dataset.day,\n                courseId = option.dataset.courseid,\n                categoryId = option.dataset.categoryid;\n\n            if (view == 'month') {\n                refreshMonthContent(root, year, month, courseId, categoryId, root, 'core_calendar/calendar_month', day)\n                    .then(() => {\n                        updateUrl('?view=month');\n                    }).fail(Notification.exception);\n            } else if (view == 'day') {\n                refreshDayContent(root, year, month, day, courseId, categoryId, root, 'core_calendar/calendar_day')\n                    .then(() => {\n                        updateUrl('?view=day');\n                    }).fail(Notification.exception);\n            } else if (view == 'upcoming') {\n                reloadCurrentUpcoming(root, courseId, categoryId, root, 'core_calendar/calendar_upcoming')\n                    .then(() => {\n                        updateUrl('?view=upcoming');\n                    }).fail(Notification.exception);\n            }\n        }\n    );\n};\n\n/**\n * Refresh the month content.\n *\n * @param {object} root The root element.\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n * @param {number} day Day (optional)\n * @return {promise}\n */\nexport const refreshMonthContent = (root, year, month, courseId, categoryId, target = null, template = '', day = 1) => {\n    startLoading(root);\n\n    target = target || root.find(CalendarSelectors.wrapper);\n    template = template || root.attr('data-template');\n    M.util.js_pending([root.get('id'), year, month, courseId].join('-'));\n    const includenavigation = root.data('includenavigation');\n    const mini = root.data('mini');\n    const viewMode = target.data('view');\n    return CalendarRepository.getCalendarMonthData(year, month, courseId, categoryId, includenavigation, mini, day, viewMode)\n        .then(context => {\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), year, month, courseId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Handle changes to the current calendar view.\n *\n * @param {object} root The container element\n * @param {string} url The calendar url to be shown\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {number} day Day (optional)\n * @return {promise}\n */\nexport const changeMonth = (root, url, year, month, courseId, categoryId, day = 1) => {\n    return refreshMonthContent(root, year, month, courseId, categoryId, null, '', day)\n        .then((...args) => {\n            if (url.length && url !== '#') {\n                updateUrl(url);\n            }\n            return args;\n        })\n        .then((...args) => {\n            $('body').trigger(CalendarEvents.monthChanged, [year, month, courseId, categoryId]);\n            return args;\n        });\n};\n\n/**\n * Reload the current month view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const reloadCurrentMonth = (root, courseId = 0, categoryId = 0) => {\n    const year = root.find(CalendarSelectors.wrapper).data('year');\n    const month = root.find(CalendarSelectors.wrapper).data('month');\n    const day = root.find(CalendarSelectors.wrapper).data('day');\n\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return refreshMonthContent(root, year, month, courseId, categoryId, null, '', day).\n        then((...args) => {\n            $('body').trigger(CalendarEvents.courseChanged, [year, month, courseId, categoryId]);\n            return args;\n        });\n};\n\n\n/**\n * Refresh the day content.\n *\n * @param {object} root The root element.\n * @param {number} year Year\n * @param {number} month Month\n * @param {number} day Day\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n *\n * @return {promise}\n */\nexport const refreshDayContent = (root, year, month, day, courseId, categoryId, target = null, template = '') => {\n    startLoading(root);\n\n    if (!target || target.length == 0){\n        target = root.find(CalendarSelectors.wrapper);\n    }\n    template = template || root.attr('data-template');\n    M.util.js_pending([root.get('id'), year, month, day, courseId, categoryId].join('-'));\n    const includenavigation = root.data('includenavigation');\n    return CalendarRepository.getCalendarDayData(year, month, day, courseId, categoryId, includenavigation)\n        .then((context) => {\n            context.viewingday = true;\n            context.showviewselector = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), year, month, day, courseId, categoryId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Reload the current day view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const reloadCurrentDay = (root, courseId = 0, categoryId = 0) => {\n    const wrapper = root.find(CalendarSelectors.wrapper);\n    const year = wrapper.data('year');\n    const month = wrapper.data('month');\n    const day = wrapper.data('day');\n\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return refreshDayContent(root, year, month, day, courseId, categoryId);\n};\n\n/**\n * Handle changes to the current calendar view.\n *\n * @param {object} root The root element.\n * @param {String} url The calendar url to be shown\n * @param {Number} year Year\n * @param {Number} month Month\n * @param {Number} day Day\n * @param {Number} courseId The id of the course whose events are shown\n * @param {Number} categoryId The id of the category whose events are shown\n * @return {promise}\n */\nexport const changeDay = (root, url, year, month, day, courseId, categoryId) => {\n    return refreshDayContent(root, year, month, day, courseId, categoryId)\n        .then((...args) => {\n            if (url.length && url !== '#') {\n                updateUrl(url);\n            }\n            return args;\n        })\n        .then((...args) => {\n            $('body').trigger(CalendarEvents.dayChanged, [year, month, courseId, categoryId]);\n            return args;\n        });\n};\n\n/**\n * Update calendar URL.\n *\n * @param {String} url The calendar url to be updated.\n */\nexport const updateUrl = (url) => {\n    const viewingFullCalendar = document.getElementById(CalendarSelectors.fullCalendarView);\n\n    // We want to update the url only if the user is viewing the full calendar.\n    if (viewingFullCalendar) {\n        window.history.pushState({}, '', url);\n    }\n};\n\n/**\n * Set the element state to loading.\n *\n * @param {object} root The container element\n * @method startLoading\n */\nconst startLoading = (root) => {\n    const loadingIconContainer = root.find(CalendarSelectors.containers.loadingIcon);\n\n    loadingIconContainer.removeClass('hidden');\n};\n\n/**\n * Remove the loading state from the element.\n *\n * @param {object} root The container element\n * @method stopLoading\n */\nconst stopLoading = (root) => {\n    const loadingIconContainer = root.find(CalendarSelectors.containers.loadingIcon);\n\n    loadingIconContainer.addClass('hidden');\n};\n\n/**\n * Reload the current month view data.\n *\n * @param {object} root The container element.\n * @param {number} courseId The course id.\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n * @return {promise}\n */\nexport const reloadCurrentUpcoming = (root, courseId = 0, categoryId = 0, target = null, template = '') => {\n    startLoading(root);\n\n    target = target || root.find(CalendarSelectors.wrapper);\n    template = template || root.attr('data-template');\n    courseId = courseId || root.find(CalendarSelectors.wrapper).data('courseid');\n    categoryId = categoryId || root.find(CalendarSelectors.wrapper).data('categoryid');\n\n    return CalendarRepository.getCalendarUpcomingData(courseId, categoryId)\n        .then((context) => {\n            context.viewingupcoming = true;\n            context.showviewselector = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            document.querySelector('body').dispatchEvent(new CustomEvent(CalendarEvents.viewUpdated));\n            return;\n        })\n        .always(function() {\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Get the CSS class to apply for the given event type.\n *\n * @param {string} eventType The calendar event type\n * @return {string}\n */\nconst getEventTypeClassFromType = (eventType) => {\n    return 'calendar_event_' + eventType;\n};\n\n/**\n * Render the event summary modal.\n *\n * @param {Number} eventId The calendar event id.\n * @returns {Promise}\n */\nconst renderEventSummaryModal = (eventId) => {\n    const pendingPromise = new Pending('core_calendar/view_manager:renderEventSummaryModal');\n\n    // Calendar repository promise.\n    return CalendarRepository.getEventById(eventId)\n    .then((getEventResponse) => {\n        if (!getEventResponse.event) {\n            throw new Error('Error encountered while trying to fetch calendar event with ID: ' + eventId);\n        }\n\n        return getEventResponse.event;\n    })\n    .then(eventData => {\n        // Build the modal parameters from the event data.\n        const modalParams = {\n            title: eventData.name,\n            type: SummaryModal.TYPE,\n            body: Templates.render('core_calendar/event_summary_body', eventData),\n            templateContext: {\n                canedit: eventData.canedit,\n                candelete: eventData.candelete,\n                headerclasses: getEventTypeClassFromType(eventData.normalisedeventtype),\n                isactionevent: eventData.isactionevent,\n                url: eventData.url,\n                action: eventData.action\n            }\n        };\n\n        // Create the modal.\n        return ModalFactory.create(modalParams);\n    })\n    .then(modal => {\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n\n        // Finally, render the modal!\n        modal.show();\n\n        return modal;\n    })\n    .then(modal => {\n        pendingPromise.resolve();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\nexport const init = (root, view) => {\n    prefetchStrings('calendar', ['moreevents']);\n    foldDayEvents();\n    registerEventListeners(root, view);\n    const calendarTable = root.find(CalendarSelectors.elements.monthDetailed);\n    if (calendarTable.length) {\n        const pendingId = `month-detailed-${calendarTable.id}-filterChanged`;\n        registerEventListenersForMonthDetailed(calendarTable, pendingId);\n    }\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireDefault","_jquery","_templates","_notification","CalendarRepository","_events","CalendarSelectors","_modal_factory","_modal_events","_summary_modal","_custom_interaction_events","_pending","foldDayEvents","days","$","elements","monthDetailed","find","day","length","each","dayContainer","this","eventsSelector","dateContent","filteredEventsSelector","moreEventsSelector","events","numberOfFiltered","numberOfEvents","count","event","attr","hide","show","moreEventsLink","numberOfHiddenEvents","getString","get_string","then","str","link","text","fail","_exports","registerEventListenersForMonthDetailed","pendingId","concat","CalendarEvents","viewUpdated","on","e","filterChanged","data","root","pending","Pending","target","eventType","type","transitionPromise","Deferred","hidden","promise","always","resolve","refreshMonthContent","year","month","courseId","categoryId","template","startLoading","wrapper","M","util","js_pending","join","includenavigation","mini","viewMode","getCalendarMonthData","context","Templates","render","html","js","replaceNode","document","querySelector","dispatchEvent","CustomEvent","js_complete","stopLoading","Notification","exception","changeMonth","url","updateUrl","_len","arguments","args","Array","_key","trigger","monthChanged","_len2","_key2","reloadCurrentMonth","courseChanged","_len3","_key3","refreshDayContent","getCalendarDayData","viewingday","showviewselector","reloadCurrentDay","changeDay","_len4","_key4","dayChanged","_len5","_key5","getElementById","fullCalendarView","window","history","pushState","containers","loadingIcon","removeClass","addClass","reloadCurrentUpcoming","getCalendarUpcomingData","viewingupcoming","renderEventSummaryModal","eventId","pendingPromise","getEventById","getEventResponse","Error","eventData","modalParams","title","name","SummaryModal","TYPE","body","templateContext","canedit","candelete","headerclasses","normalisedeventtype","isactionevent","action","ModalFactory","create","modal","getRoot","ModalEvents","destroy","catch","init","view","prefetchStrings","links","eventLink","matches","actions","viewEvent","closest","dataset","preventDefault","stopPropagation","navLink","currentTarget","href","viewSelector","CustomEvents","define","activate","option","classList","contains","courseid","categoryid","registerEventListeners","calendarTable","id"],"mappings":"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"}