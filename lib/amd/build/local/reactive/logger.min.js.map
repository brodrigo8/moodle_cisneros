{"version":3,"file":"logger.min.js","sources":["../../../src/local/reactive/logger.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Default reactive mutations logger class.\n *\n * This logger is used by default by the StateManager to log mutation feedbacks\n * and actions. By default, feedbacks will be disaplyed as a toast. However, the\n * reactive instance can provide alternative loggers to provide advanced logging\n * capabilities.\n *\n * @module     core/local/reactive/logger\n * @class      Logger\n * @copyright  2023 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Logger entry structure.\n *\n * @typedef {object} LoggerEntry\n * @property {string} feedbackMessage Feedback message.\n */\n\n/**\n * Default reactive mutations logger class.\n * @class Logger\n */\nexport default class Logger {\n    /**\n     * Constructor.\n     */\n    constructor() {\n        this._debug = false;\n    }\n\n    /**\n     * Add a log entry.\n     * @param {LoggerEntry} entry Log entry.\n     */\n    add(entry) {\n        if (entry.feedbackMessage) {\n            // Set the action announcements ARIA live region's contents with the feedback.\n            const actionAnnouncements = document.getElementById('action-announcements');\n            actionAnnouncements.innerHTML = entry.feedbackMessage;\n\n            // Clear the feedback message after 4 seconds to avoid the contents from being read out in case the user navigates\n            // to this region. This is similar to the default timeout of toast messages before disappearing from view.\n            setTimeout(() => {\n                actionAnnouncements.innerHTML = '';\n            }, 4000);\n        }\n    }\n}\n"],"names":["constructor","_debug","add","entry","feedbackMessage","actionAnnouncements","document","getElementById","innerHTML","setTimeout"],"mappings":";;;;;;;;;;;;;;MA4CIA,mBACSC,QAAS,EAOlBC,IAAIC,UACIA,MAAMC,gBAAiB,OAEjBC,oBAAsBC,SAASC,eAAe,wBACpDF,oBAAoBG,UAAYL,MAAMC,gBAItCK,YAAW,KACPJ,oBAAoBG,UAAY,KACjC"}