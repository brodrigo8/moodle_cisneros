{"version":3,"sources":["../src/drawer.js"],"names":["show","namespace","root","removeClass","attr","PubSub","publish","DrawerEvents","DRAWER_SHOWN","hide","addClass","DRAWER_HIDDEN","registerEventListeners","alwaysVisible","subscribe","SHOW","HIDE","init","uniqueId","SELECTORS","HEADER_CONTAINER","BODY_CONTAINER","FOOTER_CONTAINER","isVisible","isHidden","hasClass"],"mappings":"+KAuBA,OACA,OACA,O,sDAmBMA,CAAAA,CAAI,CAAG,SAACC,CAAD,CAAYC,CAAZ,CAAqB,CAC9BA,CAAI,CAACC,WAAL,CAAiB,QAAjB,EACAD,CAAI,CAACE,IAAL,CAAU,eAAV,KACAF,CAAI,CAACE,IAAL,CAAU,aAAV,KACAC,UAAOC,OAAP,CAAeC,UAAaC,YAA5B,CACH,C,CAOKC,CAAI,CAAG,SAACP,CAAD,CAAU,CACnBA,CAAI,CAACQ,QAAL,CAAc,QAAd,EACAR,CAAI,CAACE,IAAL,CAAU,eAAV,KACAF,CAAI,CAACE,IAAL,CAAU,aAAV,KACAC,UAAOC,OAAP,CAAeC,UAAaI,aAA5B,CACH,C,CAoBKC,CAAsB,CAAG,SAACX,CAAD,CAAYC,CAAZ,CAAkBW,CAAlB,CAAoC,CAC/D,GAAI,CAACA,CAAL,CAAoB,CAChBR,UAAOS,SAAP,CAAiBP,UAAaQ,IAA9B,CAAoC,UAAW,CAC3Cf,CAAI,CAACC,CAAD,CAAYC,CAAZ,CACP,CAFD,EAIAG,UAAOS,SAAP,CAAiBP,UAAaS,IAA9B,CAAoC,UAAW,CAC3CP,CAAI,CAACP,CAAD,CACP,CAFD,CAGH,CACJ,C,CASKe,CAAI,CAAG,SAACf,CAAD,CAAOgB,CAAP,CAAiBL,CAAjB,CAAmC,CAC5CX,CAAI,CAAG,cAAEA,CAAF,CAAP,CACAU,CAAsB,CAACM,CAAD,CAAWhB,CAAX,CAAiBW,CAAjB,CAAtB,CAEA,GAAIA,CAAJ,CAAmB,CACfb,CAAI,CAACkB,CAAD,CAAWhB,CAAX,CACP,CACJ,C,WAEc,CACXiB,SAAS,CA9EK,CACdC,gBAAgB,CAAE,oCADJ,CAEdC,cAAc,CAAE,kCAFF,CAGdC,gBAAgB,CAAE,oCAHJ,CA6EH,CAEXL,IAAI,CAAEA,CAFK,CAGXR,IAAI,CAAEA,CAHK,CAIXT,IAAI,CAAEA,CAJK,CAKXuB,SAAS,CA7CK,QAAZA,CAAAA,SAAY,CAACrB,CAAD,CAAU,CACxB,GAAIsB,CAAAA,CAAQ,CAAGtB,CAAI,CAACuB,QAAL,CAAc,QAAd,CAAf,CACA,MAAO,CAACD,CACX,CAqCc,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls the drawer.\n *\n * @module     core/drawer\n * @copyright  2019 Jun Pataleta <jun@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport PubSub from 'core/pubsub';\nimport DrawerEvents from 'core/drawer_events';\n\n/**\n * Selectors for the drawer container regions.\n *\n * @type {{FOOTER_CONTAINER: string, HEADER_CONTAINER: string, BODY_CONTAINER: string}}\n */\nconst SELECTORS = {\n    HEADER_CONTAINER: '[data-region=\"header-container\"]',\n    BODY_CONTAINER: '[data-region=\"body-container\"]',\n    FOOTER_CONTAINER: '[data-region=\"footer-container\"]',\n};\n\n/**\n * Show the drawer.\n *\n * @param {string} namespace The route namespace.\n * @param {Object} root The drawer container.\n */\nconst show = (namespace, root) => {\n    root.removeClass('hidden');\n    root.attr('aria-expanded', true);\n    root.attr('aria-hidden', false);\n    PubSub.publish(DrawerEvents.DRAWER_SHOWN);\n};\n\n/**\n * Hide the drawer.\n *\n * @param {Object} root The drawer container.\n */\nconst hide = (root) => {\n    root.addClass('hidden');\n    root.attr('aria-expanded', false);\n    root.attr('aria-hidden', true);\n    PubSub.publish(DrawerEvents.DRAWER_HIDDEN);\n};\n\n/**\n * Check if the drawer is visible.\n *\n * @param {Object} root The drawer container.\n * @return {boolean}\n */\nconst isVisible = (root) => {\n    let isHidden = root.hasClass('hidden');\n    return !isHidden;\n};\n\n/**\n * Listen to and handle events for routing, showing and hiding the drawer.\n *\n * @param {string} namespace The route namespace.\n * @param {Object} root The drawer container.\n * @param {boolean} alwaysVisible Is the drawer always shown?\n */\nconst registerEventListeners = (namespace, root, alwaysVisible) => {\n    if (!alwaysVisible) {\n        PubSub.subscribe(DrawerEvents.SHOW, function() {\n            show(namespace, root);\n        });\n\n        PubSub.subscribe(DrawerEvents.HIDE, function() {\n            hide(root);\n        });\n    }\n};\n\n/**\n * Initialise the drawer.\n *\n * @param {Object} root The drawer container.\n * @param {String} uniqueId Unique identifier for the Routes\n * @param {boolean} alwaysVisible Should we show the app now, or wait for the user?\n */\nconst init = (root, uniqueId, alwaysVisible) => {\n    root = $(root);\n    registerEventListeners(uniqueId, root, alwaysVisible);\n\n    if (alwaysVisible) {\n        show(uniqueId, root);\n    }\n};\n\nexport default {\n    SELECTORS: SELECTORS,\n    init: init,\n    hide: hide,\n    show: show,\n    isVisible: isVisible\n};\n"],"file":"drawer.min.js"}