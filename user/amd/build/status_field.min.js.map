{"version":3,"file":"status_field.min.js","sources":["../src/status_field.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module for the user enrolment status field in the course participants page.\n *\n * @module     core_user/status_field\n * @copyright  2017 Jun Pataleta\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as DynamicTable from 'core_table/dynamic';\nimport * as Repository from './repository';\nimport * as Str from 'core/str';\nimport DynamicTableSelectors from 'core_table/local/dynamic/selectors';\nimport Fragment from 'core/fragment';\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport {add as notifyUser} from 'core/toast';\n\nconst Selectors = {\n    editEnrolment: '[data-action=\"editenrolment\"]',\n    showDetails: '[data-action=\"showdetails\"]',\n    unenrol: '[data-action=\"unenrol\"]',\n    statusElement: '[data-status]',\n};\n\n/**\n * Get the dynamic table from the specified link.\n *\n * @param {HTMLElement} link\n * @returns {HTMLElement}\n */\nconst getDynamicTableFromLink = link => link.closest(DynamicTableSelectors.main.region);\n\n/**\n * Get the status container from the specified link.\n *\n * @param {HTMLElement} link\n * @returns {HTMLElement}\n */\nconst getStatusContainer = link => link.closest(Selectors.statusElement);\n\n/**\n * Get user enrolment id from the specified link\n *\n * @param {HTMLElement} link\n * @returns {Number}\n */\nconst getUserEnrolmentIdFromLink = link => link.getAttribute('rel');\n\n/**\n * Register all event listeners for the status fields.\n *\n * @param {Number} contextId\n * @param {Number} uniqueId\n */\nconst registerEventListeners = (contextId, uniqueId) => {\n    const getBodyFunction = (userEnrolmentId, formData) => getBody(contextId, userEnrolmentId, formData);\n\n    document.addEventListener('click', e => {\n        const tableRoot = e.target.closest(DynamicTableSelectors.main.fromRegionId(uniqueId));\n        if (!tableRoot) {\n            return;\n        }\n\n        const editLink = e.target.closest(Selectors.editEnrolment);\n        if (editLink) {\n            e.preventDefault();\n\n            showEditDialogue(editLink, getBodyFunction);\n        }\n\n        const unenrolLink = e.target.closest(Selectors.unenrol);\n        if (unenrolLink) {\n            e.preventDefault();\n\n            showUnenrolConfirmation(unenrolLink);\n        }\n\n        const showDetailsLink = e.target.closest(Selectors.showDetails);\n        if (showDetailsLink) {\n            e.preventDefault();\n\n            showStatusDetails(showDetailsLink);\n        }\n    });\n};\n\n/**\n * Show the edit dialogue.\n *\n * @param {HTMLElement} link\n * @param {Function} getBody Function to get the body for the specified user enrolment\n */\nconst showEditDialogue = (link, getBody) => {\n    const container = getStatusContainer(link);\n    const userEnrolmentId = getUserEnrolmentIdFromLink(link);\n\n    ModalFactory.create({\n        large: true,\n        title: Str.get_string('edituserenrolment', 'enrol', container.dataset.fullname),\n        type: ModalFactory.types.SAVE_CANCEL,\n        body: getBody(userEnrolmentId)\n    })\n    .then(modal => {\n        // Handle save event.\n        modal.getRoot().on(ModalEvents.save, e => {\n            // Don't close the modal yet.\n            e.preventDefault();\n\n            // Submit form data.\n            submitEditFormAjax(link, getBody, modal, userEnrolmentId, container.dataset);\n        });\n\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n\n        // Show the modal.\n        modal.show();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Show and handle the unenrolment confirmation dialogue.\n *\n * @param {HTMLElement} link\n */\nconst showUnenrolConfirmation = link => {\n    const container = getStatusContainer(link);\n    const userEnrolmentId = getUserEnrolmentIdFromLink(link);\n\n    ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n    })\n    .then(modal => {\n        // Handle confirm event.\n        modal.getRoot().on(ModalEvents.save, e => {\n            // Don't close the modal yet.\n            e.preventDefault();\n\n            // Submit data.\n            submitUnenrolFormAjax(\n                link,\n                modal,\n                {\n                    ueid: userEnrolmentId,\n                },\n                container.dataset\n            );\n        });\n\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n\n        // Display the delete confirmation modal.\n        modal.show();\n\n        const stringData = [\n            {\n                key: 'unenrol',\n                component: 'enrol',\n            },\n            {\n                key: 'unenrolconfirm',\n                component: 'enrol',\n                param: {\n                    user: container.dataset.fullname,\n                    course: container.dataset.coursename,\n                    enrolinstancename: container.dataset.enrolinstancename,\n                }\n            }\n        ];\n\n        return Promise.all([Str.get_strings(stringData), modal]);\n    })\n    .then(([strings, modal]) => {\n        modal.setTitle(strings[0]);\n        modal.setSaveButtonText(strings[0]);\n        modal.setBody(strings[1]);\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Show the user details dialogue.\n *\n * @param {HTMLElement} link\n */\nconst showStatusDetails = link => {\n    const container = getStatusContainer(link);\n\n    const context = {\n        editenrollink: '',\n        statusclass: container.querySelector('span.badge').getAttribute('class'),\n        ...container.dataset,\n    };\n\n    // Find the edit enrolment link.\n    const editEnrolLink = container.querySelector(Selectors.editEnrolment);\n    if (editEnrolLink) {\n        // If there's an edit enrolment link for this user, clone it into the context for the modal.\n        context.editenrollink = editEnrolLink.outerHTML;\n    }\n\n    ModalFactory.create({\n        large: true,\n        type: ModalFactory.types.CANCEL,\n        title: Str.get_string('enroldetails', 'enrol'),\n        body: Templates.render('core_user/status_details', context),\n    })\n    .then(modal => {\n        if (editEnrolLink) {\n            modal.getRoot().on('click', Selectors.editEnrolment, e => {\n                e.preventDefault();\n                modal.hide();\n\n                // Trigger click event for the edit enrolment link to show the edit enrolment modal.\n                editEnrolLink.click();\n            });\n        }\n\n        modal.show();\n\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, () => modal.destroy());\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Submit the edit dialogue.\n *\n * @param {HTMLElement} clickedLink\n * @param {Function} getBody\n * @param {Object} modal\n * @param {Number} userEnrolmentId\n * @param {Object} userData\n */\nconst submitEditFormAjax = (clickedLink, getBody, modal, userEnrolmentId, userData) => {\n    const form = modal.getRoot().find('form');\n\n    Repository.submitUserEnrolmentForm(form.serialize())\n    .then(data => {\n        if (!data.result) {\n            throw data.result;\n        }\n\n        // Dismiss the modal.\n        modal.hide();\n        modal.destroy();\n\n        return data;\n    })\n    .then(() => {\n        DynamicTable.refreshTableContent(getDynamicTableFromLink(clickedLink))\n        .catch(Notification.exception);\n\n        return Str.get_string('enrolmentupdatedforuser', 'core_enrol', userData);\n    })\n    .then(notificationString => {\n        notifyUser(notificationString);\n\n        return;\n    })\n    .catch(() => {\n        modal.setBody(getBody(userEnrolmentId, JSON.stringify(form.serialize())));\n\n        return modal;\n    });\n};\n\n/**\n * Submit the unenrolment form.\n *\n * @param {HTMLElement} clickedLink\n * @param {Object} modal\n * @param {Object} args\n * @param {Object} userData\n */\nconst submitUnenrolFormAjax = (clickedLink, modal, args, userData) => {\n    Repository.unenrolUser(args.ueid)\n    .then(data => {\n        if (!data.result) {\n            // Display an alert containing the error message\n            Notification.alert(data.errors[0].key, data.errors[0].message);\n\n            return data;\n        }\n\n        // Dismiss the modal.\n        modal.hide();\n        modal.destroy();\n\n        return data;\n    })\n    .then(() => {\n        DynamicTable.refreshTableContent(getDynamicTableFromLink(clickedLink))\n        .catch(Notification.exception);\n\n        return Str.get_string('unenrolleduser', 'core_enrol', userData);\n    })\n    .then(notificationString => {\n        notifyUser(notificationString);\n\n        return;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Get the body fragment.\n *\n * @param {Number} contextId\n * @param {Number} ueid The user enrolment id\n * @param {Object} formdata\n * @returns {Promise}\n */\nconst getBody = (contextId, ueid, formdata = null) => Fragment.loadFragment(\n    'enrol',\n    'user_enrolment_form',\n    contextId,\n    {\n        ueid,\n        formdata,\n    }\n);\n\n/**\n * Initialise the statu field handler.\n *\n * @param {object} param\n * @param {Number} param.contextid\n * @param {Number} param.uniqueid\n */\nexport const init = ({contextid, uniqueid}) => {\n    registerEventListeners(contextid, uniqueid);\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_defineProperty","value","arg","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","String","Number","_toPrimitive","_toPropertyKey","configurable","writable","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","length","err","return","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","_nonIterableRest","len","arr2","DynamicTable","Repository","Str","_selectors","_fragment","_modal_events","_modal_factory","_notification","_templates","Selectors","getDynamicTableFromLink","link","closest","DynamicTableSelectors","main","region","getStatusContainer","getUserEnrolmentIdFromLink","getAttribute","showEditDialogue","getBody","container","userEnrolmentId","ModalFactory","create","large","title","get_string","dataset","fullname","type","types","SAVE_CANCEL","body","then","modal","getRoot","on","ModalEvents","save","e","preventDefault","submitEditFormAjax","hidden","destroy","show","catch","Notification","exception","showUnenrolConfirmation","submitUnenrolFormAjax","ueid","stringData","component","param","user","course","coursename","enrolinstancename","Promise","all","get_strings","_ref","_ref2","strings","setTitle","setSaveButtonText","setBody","showStatusDetails","context","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","editenrollink","statusclass","querySelector","editEnrolLink","outerHTML","CANCEL","Templates","render","hide","click","clickedLink","userData","form","find","submitUserEnrolmentForm","serialize","data","result","refreshTableContent","notificationString","notifyUser","JSON","stringify","args","unenrolUser","alert","errors","message","contextId","formdata","Fragment","loadFragment","_exports","init","_ref3","uniqueId","getBodyFunction","contextid","uniqueid","formData","document","addEventListener","fromRegionId","editLink","unenrolLink","showDetailsLink"],"mappings":"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"}