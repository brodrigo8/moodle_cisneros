{"version":3,"file":"recordings.min.js","sources":["../src/recordings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JS for the recordings page on mod_bigbluebuttonbn plugin.\n *\n * @module      mod_bigbluebuttonbn/recordings\n * @copyright   2021 Blindside Networks Inc\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as repository from './repository';\nimport {exception as displayException} from 'core/notification';\nimport {prefetchStrings} from 'core/prefetch';\nimport {get_string as getString, get_strings as getStrings} from 'core/str';\nimport {addIconToContainerWithPromise} from 'core/loadingicon';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Pending from 'core/pending';\n\nconst stringsWithKeys = {\n    first: 'view_recording_yui_first',\n    prev: 'view_recording_yui_prev',\n    next: 'view_recording_yui_next',\n    last: 'view_recording_yui_last',\n    goToLabel: 'view_recording_yui_page',\n    goToAction: 'view_recording_yui_go',\n    perPage: 'view_recording_yui_rows',\n    showAll: 'view_recording_yui_show_all',\n};\n// Load global strings.\nprefetchStrings('bigbluebuttonbn', Object.entries(stringsWithKeys).map((entry) => entry[1]));\n\nconst getStringsForYui = () => {\n    const stringMap = Object.keys(stringsWithKeys).map(key => {\n        return {\n            key: stringsWithKeys[key],\n            component: 'mod_bigbluebuttonbn',\n        };\n    });\n\n    // Return an object with the matching string keys (we want an object with {<stringkey>: <stringvalue>...}).\n    return getStrings(stringMap)\n        .then((stringArray) => Object.assign({}, ...Object.keys(stringsWithKeys).map(\n            (key, index) => ({[key]: stringArray[index]})))\n        ).catch();\n};\n\nconst getYuiInstance = lang => new Promise(resolve => {\n    // eslint-disable-next-line\n    YUI({\n        lang,\n    }).use('intl', 'datatable', 'datatable-sort', 'datatable-paginator', 'datatype-number', Y => {\n        resolve(Y);\n    });\n});\n\n/**\n * Format the supplied date per the specified locale.\n *\n * @param   {string} locale\n * @param   {number} date\n * @returns {array}\n */\nconst formatDate = (locale, date) => {\n    const realDate = new Date(date);\n    return realDate.toLocaleDateString(locale, {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    });\n};\n\n/**\n * Format response data for the table.\n *\n * @param   {string} response JSON-encoded table data\n * @returns {array}\n */\nconst getFormattedData = response => {\n    const recordingData = response.tabledata;\n    return JSON.parse(recordingData.data);\n};\n\nconst getTableNode = tableSelector => document.querySelector(tableSelector);\n\nconst fetchRecordingData = tableSelector => {\n    const tableNode = getTableNode(tableSelector);\n    if (tableNode === null) {\n        return Promise.resolve(false);\n    }\n\n    if (tableNode.dataset.importMode) {\n        return repository.fetchRecordingsToImport(\n            tableNode.dataset.bbbid,\n            tableNode.dataset.bbbSourceInstanceId,\n            tableNode.dataset.bbbSourceCourseId,\n            tableNode.dataset.tools,\n            tableNode.dataset.groupId\n        );\n    } else {\n        return repository.fetchRecordings(\n            tableNode.dataset.bbbid,\n            tableNode.dataset.tools,\n            tableNode.dataset.groupId\n        );\n    }\n};\n\n/**\n * Fetch the data table functinos for the specified table.\n *\n * @param {String} tableId in which we will display the table\n * @param {String} searchFormId The Id of the relate.\n * @param {Object} dataTable\n * @returns {Object}\n * @private\n */\nconst getDataTableFunctions = (tableId, searchFormId, dataTable) => {\n    const tableNode = getTableNode(tableId);\n    const bbbid = tableNode.dataset.bbbid;\n\n    const updateTableFromResponse = response => {\n        if (!response || !response.status) {\n            // There was no output at all.\n            return;\n        }\n\n        dataTable.get('data').reset(getFormattedData(response));\n        dataTable.set(\n            'currentData',\n            dataTable.get('data')\n        );\n\n        const currentFilter = dataTable.get('currentFilter');\n        if (currentFilter) {\n            filterByText(currentFilter);\n        }\n    };\n\n    const refreshTableData = () => fetchRecordingData(tableId).then(updateTableFromResponse);\n\n    const filterByText = value => {\n        const dataModel = dataTable.get('currentData');\n        dataTable.set('currentFilter', value);\n\n        const escapedRegex = value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n        const rsearch = new RegExp(`<span>.*?${escapedRegex}.*?</span>`, 'i');\n\n        dataTable.set('data', dataModel.filter({asList: true}, item => {\n            const name = item.get('recording');\n            if (name && rsearch.test(name)) {\n                return true;\n            }\n\n            const description = item.get('description');\n            return description && rsearch.test(description);\n        }));\n    };\n\n    const requestAction = (element) => {\n        const getDataFromAction = (element, dataType) => {\n            const dataElement = element.closest(`[data-${dataType}]`);\n            if (dataElement) {\n                return dataElement.dataset[dataType];\n            }\n\n            return null;\n        };\n\n        const elementData = element.dataset;\n        const payload = {\n            bigbluebuttonbnid: bbbid,\n            recordingid: getDataFromAction(element, 'recordingid'),\n            additionaloptions: getDataFromAction(element, 'additionaloptions'),\n            action: elementData.action,\n        };\n        // Slight change for import, for additional options.\n        if (!payload.additionaloptions) {\n            payload.additionaloptions = {};\n        }\n        if (elementData.action === 'import') {\n            const bbbsourceid = getDataFromAction(element, 'source-instance-id');\n            const bbbcourseid = getDataFromAction(element, 'source-course-id');\n            if (!payload.additionaloptions) {\n                payload.additionaloptions = {};\n            }\n            payload.additionaloptions.sourceid = bbbsourceid ? bbbsourceid : 0;\n            payload.additionaloptions.bbbcourseid = bbbcourseid ? bbbcourseid : 0;\n        }\n        // Now additional options should be a json string.\n        payload.additionaloptions = JSON.stringify(payload.additionaloptions);\n        if (element.dataset.requireConfirmation === \"1\") {\n            // Create the confirmation dialogue.\n            return new Promise((resolve) =>\n                ModalFactory.create({\n                    title: getString('confirm'),\n                    body: recordingConfirmationMessage(payload),\n                    type: ModalFactory.types.SAVE_CANCEL\n                }).then(async(modal) => {\n                    modal.setSaveButtonText(await getString('ok', 'moodle'));\n\n                    // Handle save event.\n                    modal.getRoot().on(ModalEvents.save, () => {\n                        resolve(true);\n                    });\n\n                    // Handle hidden event.\n                    modal.getRoot().on(ModalEvents.hidden, () => {\n                        // Destroy when hidden.\n                        modal.destroy();\n                        resolve(false);\n                    });\n\n                    modal.show();\n\n                    return modal;\n                }).catch(displayException)\n            ).then((proceed) =>\n                proceed ? repository.updateRecording(payload) : () => null\n            );\n        } else {\n            return repository.updateRecording(payload);\n        }\n    };\n\n    const recordingConfirmationMessage = async(data) => {\n\n        const playbackElement = document.querySelector(`#playbacks-${data.recordingid}`);\n        const recordingType = await getString(\n            playbackElement.dataset.imported === 'true' ? 'view_recording_link' : 'view_recording',\n            'bigbluebuttonbn'\n        );\n\n        const confirmation = await getString(`view_recording_${data.action}_confirmation`, 'bigbluebuttonbn', recordingType);\n\n        if (data.action === 'import') {\n            return confirmation;\n        }\n\n        // If it has associated links imported in a different course/activity, show that in confirmation dialog.\n        const associatedLinkCount = document.querySelector(`a#recording-${data.action}-${data.recordingid}`)?.dataset?.links;\n        if (!associatedLinkCount || associatedLinkCount === 0) {\n            return confirmation;\n        }\n\n        const confirmationWarning = await getString(\n            associatedLinkCount === 1\n                ? `view_recording_${data.action}_confirmation_warning_p`\n                : `view_recording_${data.action}_confirmation_warning_s`,\n            'bigbluebuttonbn',\n            associatedLinkCount\n        );\n\n        return confirmationWarning + '\\n\\n' + confirmation;\n    };\n\n    /**\n     * Process an action event.\n     *\n     * @param   {Event} e\n     */\n    const processAction = e => {\n        const popoutLink = e.target.closest('[data-action=\"play\"]');\n        if (popoutLink) {\n            e.preventDefault();\n\n            const videoPlayer = window.open('', '_blank');\n            videoPlayer.opener = null;\n            videoPlayer.location.href = popoutLink.href;\n            // TODO send a recording viewed event when this event will be implemented.\n            return;\n        }\n\n        // Fetch any clicked anchor.\n        const clickedLink = e.target.closest('a[data-action]');\n        if (clickedLink && !clickedLink.classList.contains('disabled')) {\n            e.preventDefault();\n\n            // Create a spinning icon on the table.\n            const iconPromise = addIconToContainerWithPromise(dataTable.get('boundingBox').getDOMNode());\n\n            requestAction(clickedLink)\n                .then(refreshTableData)\n                .then(iconPromise.resolve)\n                .catch(displayException);\n        }\n    };\n\n    const processSearchSubmission = e => {\n        // Prevent the default action.\n        e.preventDefault();\n        const parentNode = e.target.closest('div[role=search]');\n        const searchInput = parentNode.querySelector('input[name=search]');\n        filterByText(searchInput.value);\n    };\n\n    const registerEventListeners = () => {\n        // Add event listeners to the table boundingBox.\n        const boundingBox = dataTable.get('boundingBox').getDOMNode();\n        boundingBox.addEventListener('click', processAction);\n\n        // Setup the search from handlers.\n        const searchForm = document.querySelector(searchFormId);\n        if (searchForm) {\n            const searchButton = document.querySelector(searchFormId + ' button');\n            searchButton.addEventListener('click', processSearchSubmission);\n        }\n    };\n\n    return {\n        filterByText,\n        refreshTableData,\n        registerEventListeners,\n    };\n};\n\n/**\n * Setup the data table for the specified BBB instance.\n *\n * @param {String} tableId in which we will display the table\n * @param {String} searchFormId The Id of the relate.\n * @param   {object} response The response from the data request\n * @returns {Promise}\n */\nconst setupDatatable = (tableId, searchFormId, response) => {\n    if (!response) {\n        return Promise.resolve();\n    }\n\n    if (!response.status) {\n        // Something failed. Continue to show the plain output.\n        return Promise.resolve();\n    }\n\n    const recordingData = response.tabledata;\n\n    const pendingPromise = new Pending('mod_bigbluebuttonbn/recordings/setupDatatable');\n    return Promise.all([getYuiInstance(recordingData.locale), getStringsForYui()])\n        .then(([yuiInstance, strings]) => {\n            // Here we use a custom formatter for date.\n            // See https://clarle.github.io/yui3/yui/docs/api/classes/DataTable.BodyView.Formatters.html\n            // Inspired from examples here: https://clarle.github.io/yui3/yui/docs/datatable/\n            // Normally formatter have the prototype: (col) => (cell) => <computed value>, see:\n            // https://clarle.github.io/yui3/yui/docs/api/files/datatable_js_formatters.js.html#l100 .\n            const dateCustomFormatter = () => (cell) => formatDate(recordingData.locale, cell.value);\n            // Add the fetched strings to the YUI Instance.\n            yuiInstance.Intl.add('datatable-paginator', yuiInstance.config.lang, {...strings});\n            yuiInstance.DataTable.BodyView.Formatters.customDate = dateCustomFormatter;\n            return yuiInstance;\n        })\n        .then(yuiInstance => {\n\n            const tableData = getFormattedData(response);\n            yuiInstance.RecordsPaginatorView = Y.Base.create('my-paginator-view', yuiInstance.DataTable.Paginator.View, [], {\n                _modelChange: function(e) {\n                    var changed = e.changed,\n                        totalItems = (changed && changed.totalItems);\n                    if (totalItems) {\n                        this._updateControlsUI(e.target.get('page'));\n                    }\n                }\n            });\n            return new yuiInstance.DataTable({\n                paginatorView: \"RecordsPaginatorView\",\n                width: \"1195px\",\n                columns: recordingData.columns,\n                data: tableData,\n                rowsPerPage: 10,\n                paginatorLocation: ['header', 'footer'],\n                autoSync: true\n            });\n        })\n        .then(dataTable => {\n            dataTable.render(tableId);\n            const {registerEventListeners} = getDataTableFunctions(\n                tableId,\n                searchFormId,\n                dataTable);\n            registerEventListeners();\n            return dataTable;\n        })\n        .then(dataTable => {\n            pendingPromise.resolve();\n            return dataTable;\n        });\n};\n\n/**\n * Initialise recordings code.\n *\n * @method init\n * @param {String} tableId in which we will display the table\n * @param {String} searchFormId The Id of the relate.\n */\nexport const init = (tableId, searchFormId) => {\n    const pendingPromise = new Pending('mod_bigbluebuttonbn/recordings:init');\n\n    fetchRecordingData(tableId)\n        .then(response => setupDatatable(tableId, searchFormId, response))\n        .then(() => pendingPromise.resolve())\n        .catch(displayException);\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","done","value","length","err","return","_iterableToArrayLimit","_unsupportedIterableToArray","TypeError","_nonIterableRest","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","key","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","_defineProperty","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_toPropertyKey","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_nonIterableSpread","o","minLen","n","toString","test","len","arr2","repository","cache","has","get","newObj","hasPropertyDescriptor","set","_interopRequireWildcard","_modal_factory","_modal_events","_pending","stringsWithKeys","first","last","goToLabel","goToAction","perPage","showAll","prefetchStrings","entries","map","getFormattedData","response","recordingData","tabledata","JSON","parse","data","getTableNode","tableSelector","document","querySelector","fetchRecordingData","tableNode","dataset","importMode","fetchRecordingsToImport","bbbid","bbbSourceInstanceId","bbbSourceCourseId","tools","groupId","fetchRecordings","getDataTableFunctions","tableId","searchFormId","dataTable","_ref3","updateTableFromResponse","status","currentFilter","filterByText","refreshTableData","dataModel","escapedRegex","replace","rsearch","RegExp","asList","item","description","recordingConfirmationMessage","_document$querySelect","_document$querySelect2","playbackElement","recordingType","confirmation","associatedLinkCount","confirmationWarning","_context2","recordingid","getString","get_string","imported","concat","action","links","_callee2","_x2","processAction","e","popoutLink","target","closest","preventDefault","videoPlayer","window","open","opener","location","href","clickedLink","classList","contains","iconPromise","addIconToContainerWithPromise","getDOMNode","element","getDataFromAction","dataType","dataElement","elementData","payload","bigbluebuttonbnid","additionaloptions","bbbsourceid","bbbcourseid","sourceid","stringify","requireConfirmation","ModalFactory","title","body","types","SAVE_CANCEL","_ref2","modal","_context","t0","t1","setSaveButtonText","getRoot","on","ModalEvents","save","hidden","destroy","show","_callee","displayException","proceed","updateRecording","requestAction","processSearchSubmission","searchInput","registerEventListeners","addEventListener","setupDatatable","stringMap","lang","pendingPromise","Pending","all","locale","YUI","use","Y","component","getStrings","stringArray","assign","index","_ref4","_ref5","yuiInstance","strings","Intl","add","config","source","getOwnPropertyDescriptors","defineProperties","_objectSpread","DataTable","BodyView","Formatters","customDate","cell","date","Date","toLocaleDateString","weekday","year","month","day","tableData","RecordsPaginatorView","Base","Paginator","View","_modelChange","changed","totalItems","_updateControlsUI","paginatorView","width","columns","rowsPerPage","paginatorLocation","autoSync","render","_exports","init"],"mappings":"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"}