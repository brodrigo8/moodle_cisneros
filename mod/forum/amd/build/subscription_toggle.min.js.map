{"version":3,"sources":["../src/subscription_toggle.js"],"names":["define","$","Templates","Notification","Repository","Selectors","CustomEvents","String","registerEventListeners","root","on","subscription","toggle","e","toggleElement","forumId","data","discussionId","subscriptionState","showText","setDiscussionSubscriptionState","then","context","showtext","render","html","js","replaceNode","catch","exception","preventDefault","events","activate","toggleSwitch","newTargetState","userstate","subscribed","isSubscribed","updateMessage","get_string","s","addNotification","message","type","init"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handle discussion subscription toggling on a discussion list in\n * the forum view.\n *\n * @module     mod_forum/subscription_toggle\n * @package    mod_forum\n * @copyright  2019 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n        'jquery',\n        'core/templates',\n        'core/notification',\n        'mod_forum/repository',\n        'mod_forum/selectors',\n        'core/custom_interaction_events',\n        'core/str',\n    ], function(\n        $,\n        Templates,\n        Notification,\n        Repository,\n        Selectors,\n        CustomEvents,\n        String,\n    ) {\n\n    /**\n     * Register event listeners for the subscription toggle.\n     *\n     * @param {object} root The discussion list root element\n     */\n    var registerEventListeners = function(root) {\n        root.on('click', Selectors.subscription.toggle, function(e) {\n            var toggleElement = $(this);\n            var forumId = toggleElement.data('forumid');\n            var discussionId = toggleElement.data('discussionid');\n            var subscriptionState = toggleElement.data('targetstate');\n            var showText = toggleElement.data('showtext');\n\n            Repository.setDiscussionSubscriptionState(forumId, discussionId, subscriptionState)\n                .then(function(context) {\n                    context.showtext = showText;\n                    return Templates.render('mod_forum/discussion_subscription_toggle', context);\n                })\n                .then(function(html, js) {\n                    return Templates.replaceNode(toggleElement, html, js);\n                })\n                .catch(Notification.exception);\n\n            e.preventDefault();\n        });\n\n        root.on(CustomEvents.events.activate, Selectors.subscription.toggleSwitch, function(e) {\n            var toggleElement = $(this);\n            var forumId = toggleElement.data('forumid');\n            var discussionId = toggleElement.data('discussionid');\n            var subscriptionState = toggleElement.data('targetstate');\n\n            Repository.setDiscussionSubscriptionState(forumId, discussionId, subscriptionState)\n                .then(function(context) {\n                    var newTargetState = context.userstate.subscribed ? 0 : 1;\n                    toggleElement.data('targetstate', newTargetState);\n                    return context.userstate.subscribed;\n                }).then(function(isSubscribed) {\n                    var updateMessage = isSubscribed ? 'discussionsubscribed' : 'discussionunsubscribed';\n                    return String.get_string(updateMessage, \"forum\");\n                })\n                .then(function(s) {\n                    return Notification.addNotification({\n                        message: s,\n                        type: \"info\"\n                    });\n                })\n                .catch(Notification.exception);\n\n            e.preventDefault();\n        });\n    };\n\n    return {\n        init: function(root) {\n            registerEventListeners(root);\n        }\n    };\n});\n"],"file":"subscription_toggle.min.js"}