{"version":3,"file":"actions.min.js","sources":["../../../src/local/content/actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course state actions dispatcher.\n *\n * This module captures all data-dispatch links in the course content and dispatch the proper\n * state mutation, including any confirmation and modal required.\n *\n * @module     core_courseformat/local/content/actions\n * @class      core_courseformat/local/content/actions\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport {prefetchStrings} from 'core/prefetch';\nimport {get_string as getString} from 'core/str';\nimport {getList} from 'core/normalise';\nimport * as CourseEvents from 'core_course/events';\nimport Pending from 'core/pending';\nimport ContentTree from 'core_courseformat/local/courseeditor/contenttree';\n// The jQuery module is only used for interacting with Boostrap 4. It can we removed when MDL-71979 is integrated.\nimport jQuery from 'jquery';\n\n// Load global strings.\nprefetchStrings('core', ['movecoursesection', 'movecoursemodule', 'confirm', 'delete']);\n\n// Mutations are dispatched by the course content actions.\n// Formats can use this module addActions static method to add custom actions.\n// Direct mutations can be simple strings (mutation) name or functions.\nconst directMutations = {\n    sectionHide: 'sectionHide',\n    sectionShow: 'sectionShow',\n    cmHide: 'cmHide',\n    cmShow: 'cmShow',\n    cmStealth: 'cmStealth',\n};\n\nexport default class extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'content_actions';\n        // Default query selectors.\n        this.selectors = {\n            ACTIONLINK: `[data-action]`,\n            // Move modal selectors.\n            SECTIONLINK: `[data-for='section']`,\n            CMLINK: `[data-for='cm']`,\n            SECTIONNODE: `[data-for='sectionnode']`,\n            MODALTOGGLER: `[data-toggle='collapse']`,\n            ADDSECTION: `[data-action='addSection']`,\n            CONTENTTREE: `#destination-selector`,\n            ACTIONMENU: `.action-menu`,\n            ACTIONMENUTOGGLER: `[data-toggle=\"dropdown\"]`,\n        };\n        // Component css classes.\n        this.classes = {\n            DISABLED: `disabled`,\n        };\n    }\n\n    /**\n     * Add extra actions to the module.\n     *\n     * @param {array} actions array of methods to execute\n     */\n    static addActions(actions) {\n        for (const [action, mutationReference] of Object.entries(actions)) {\n            if (typeof mutationReference !== 'function' && typeof mutationReference !== 'string') {\n                throw new Error(`${action} action must be a mutation name or a function`);\n            }\n            directMutations[action] = mutationReference;\n        }\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {Object} state the state data.\n     *\n     */\n    stateReady(state) {\n        // Delegate dispatch clicks.\n        this.addEventListener(\n            this.element,\n            'click',\n            this._dispatchClick\n        );\n        // Check section limit.\n        this._checkSectionlist({state});\n        // Add an Event listener to recalculate limits it if a section HTML is altered.\n        this.addEventListener(\n            this.element,\n            CourseEvents.sectionRefreshed,\n            () => this._checkSectionlist({state})\n        );\n    }\n\n    /**\n     * Return the component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        return [\n            // Check section limit.\n            {watch: `course.sectionlist:updated`, handler: this._checkSectionlist},\n        ];\n    }\n\n    _dispatchClick(event) {\n        const target = event.target.closest(this.selectors.ACTIONLINK);\n        if (!target) {\n            return;\n        }\n        if (target.classList.contains(this.classes.DISABLED)) {\n            event.preventDefault();\n            return;\n        }\n\n        // Invoke proper method.\n        const actionName = target.dataset.action;\n        const methodName = this._actionMethodName(actionName);\n\n        if (this[methodName] !== undefined) {\n            this[methodName](target, event);\n            return;\n        }\n\n        // Check direct mutations or mutations handlers.\n        if (directMutations[actionName] !== undefined) {\n            if (typeof directMutations[actionName] === 'function') {\n                directMutations[actionName](target, event);\n                return;\n            }\n            this._requestMutationAction(target, event, directMutations[actionName]);\n            return;\n        }\n    }\n\n    _actionMethodName(name) {\n        const requestName = name.charAt(0).toUpperCase() + name.slice(1);\n        return `_request${requestName}`;\n    }\n\n    /**\n     * Check the section list and disable some options if needed.\n     *\n     * @param {Object} detail the update details.\n     * @param {Object} detail.state the state object.\n     */\n    _checkSectionlist({state}) {\n        // Disable \"add section\" actions if the course max sections has been exceeded.\n        this._setAddSectionLocked(state.course.sectionlist.length > state.course.maxsections);\n    }\n\n    /**\n     * Handle a move section request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestMoveSection(target, event) {\n        // Check we have an id.\n        const sectionId = target.dataset.id;\n        if (!sectionId) {\n            return;\n        }\n        const sectionInfo = this.reactive.get('section', sectionId);\n\n        event.preventDefault();\n\n        // The section edit menu to refocus on end.\n        const editTools = this._getClosestActionMenuToogler(target);\n\n        // Collect section information from the state.\n        const exporter = this.reactive.getExporter();\n        const data = exporter.course(this.reactive.state);\n\n        // Add the target section id and title.\n        data.sectionid = sectionInfo.id;\n        data.sectiontitle = sectionInfo.title;\n\n        // Build the modal parameters from the event data.\n        const modalParams = {\n            title: getString('movecoursesection', 'core'),\n            body: Templates.render('core_courseformat/local/content/movesection', data),\n        };\n\n        // Create the modal.\n        const modal = await this._modalBodyRenderedPromise(modalParams);\n\n        const modalBody = getList(modal.getBody())[0];\n\n        // Disable current element and section zero.\n        const currentElement = modalBody.querySelector(`${this.selectors.SECTIONLINK}[data-id='${sectionId}']`);\n        this._disableLink(currentElement);\n        const generalSection = modalBody.querySelector(`${this.selectors.SECTIONLINK}[data-number='0']`);\n        this._disableLink(generalSection);\n\n        // Setup keyboard navigation.\n        new ContentTree(\n            modalBody.querySelector(this.selectors.CONTENTTREE),\n            {\n                SECTION: this.selectors.SECTIONNODE,\n                TOGGLER: this.selectors.MODALTOGGLER,\n                COLLAPSE: this.selectors.MODALTOGGLER,\n            },\n            true\n        );\n\n        // Capture click.\n        modalBody.addEventListener('click', (event) => {\n            const target = event.target;\n            if (!target.matches('a') || target.dataset.for != 'section' || target.dataset.id === undefined) {\n                return;\n            }\n            if (target.getAttribute('aria-disabled')) {\n                return;\n            }\n            event.preventDefault();\n            this.reactive.dispatch('sectionMove', [sectionId], target.dataset.id);\n            this._destroyModal(modal, editTools);\n        });\n    }\n\n    /**\n     * Handle a move cm request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestMoveCm(target, event) {\n        // Check we have an id.\n        const cmId = target.dataset.id;\n        if (!cmId) {\n            return;\n        }\n        const cmInfo = this.reactive.get('cm', cmId);\n\n        event.preventDefault();\n\n        // The section edit menu to refocus on end.\n        const editTools = this._getClosestActionMenuToogler(target);\n\n        // Collect section information from the state.\n        const exporter = this.reactive.getExporter();\n        const data = exporter.course(this.reactive.state);\n\n        // Add the target cm info.\n        data.cmid = cmInfo.id;\n        data.cmname = cmInfo.name;\n\n        // Build the modal parameters from the event data.\n        const modalParams = {\n            title: getString('movecoursemodule', 'core'),\n            body: Templates.render('core_courseformat/local/content/movecm', data),\n        };\n\n        // Create the modal.\n        const modal = await this._modalBodyRenderedPromise(modalParams);\n\n        const modalBody = getList(modal.getBody())[0];\n\n        // Disable current element.\n        let currentElement = modalBody.querySelector(`${this.selectors.CMLINK}[data-id='${cmId}']`);\n        this._disableLink(currentElement);\n\n        // Setup keyboard navigation.\n        new ContentTree(\n            modalBody.querySelector(this.selectors.CONTENTTREE),\n            {\n                SECTION: this.selectors.SECTIONNODE,\n                TOGGLER: this.selectors.MODALTOGGLER,\n                COLLAPSE: this.selectors.MODALTOGGLER,\n                ENTER: this.selectors.SECTIONLINK,\n            }\n        );\n\n        // Open the cm section node if possible (Bootstrap 4 uses jQuery to interact with collapsibles).\n        // All jQuery int this code can be replaced when MDL-71979 is integrated.\n        const sectionnode = currentElement.closest(this.selectors.SECTIONNODE);\n        const toggler = jQuery(sectionnode).find(this.selectors.MODALTOGGLER);\n        let collapsibleId = toggler.data('target') ?? toggler.attr('href');\n        if (collapsibleId) {\n            // We cannot be sure we have # in the id element name.\n            collapsibleId = collapsibleId.replace('#', '');\n            jQuery(`#${collapsibleId}`).collapse('toggle');\n        }\n\n        // Capture click.\n        modalBody.addEventListener('click', (event) => {\n            const target = event.target;\n            if (!target.matches('a') || target.dataset.for === undefined || target.dataset.id === undefined) {\n                return;\n            }\n            if (target.getAttribute('aria-disabled')) {\n                return;\n            }\n            event.preventDefault();\n\n            // Get draggable data from cm or section to dispatch.\n            let targetSectionId;\n            let targetCmId;\n            if (target.dataset.for == 'cm') {\n                const dropData = exporter.cmDraggableData(this.reactive.state, target.dataset.id);\n                targetSectionId = dropData.sectionid;\n                targetCmId = dropData.nextcmid;\n            } else {\n                const section = this.reactive.get('section', target.dataset.id);\n                targetSectionId = target.dataset.id;\n                targetCmId = section?.cmlist[0];\n            }\n\n            this.reactive.dispatch('cmMove', [cmId], targetSectionId, targetCmId);\n            this._destroyModal(modal, editTools);\n        });\n    }\n\n    /**\n     * Handle a create section request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestAddSection(target, event) {\n        event.preventDefault();\n        this.reactive.dispatch('addSection', target.dataset.id ?? 0);\n    }\n\n    /**\n     * Handle a delete section request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestDeleteSection(target, event) {\n        // Check we have an id.\n        const sectionId = target.dataset.id;\n\n        if (!sectionId) {\n            return;\n        }\n        const sectionInfo = this.reactive.get('section', sectionId);\n\n        event.preventDefault();\n\n        const cmList = sectionInfo.cmlist ?? [];\n        if (cmList.length || sectionInfo.hassummary || sectionInfo.rawtitle) {\n            // We need confirmation if the section has something.\n            const modalParams = {\n                title: getString('confirm', 'core'),\n                body: getString('confirmdeletesection', 'moodle', sectionInfo.title),\n                saveButtonText: getString('delete', 'core'),\n                type: ModalFactory.types.SAVE_CANCEL,\n            };\n\n            const modal = await this._modalBodyRenderedPromise(modalParams);\n\n            modal.getRoot().on(\n                ModalEvents.save,\n                e => {\n                    // Stop the default save button behaviour which is to close the modal.\n                    e.preventDefault();\n                    modal.destroy();\n                    this.reactive.dispatch('sectionDelete', [sectionId]);\n                }\n            );\n            return;\n        } else {\n            // We don't need confirmation to delete empty sections.\n            this.reactive.dispatch('sectionDelete', [sectionId]);\n        }\n    }\n\n    /**\n     * Basic mutation action helper.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     * @param {string} mutationName the mutation name\n     */\n    async _requestMutationAction(target, event, mutationName) {\n        if (!target.dataset.id) {\n            return;\n        }\n        event.preventDefault();\n        this.reactive.dispatch(mutationName, [target.dataset.id]);\n    }\n\n    /**\n     * Handle a course module duplicate request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestCmDuplicate(target, event) {\n        const cmId = target.dataset.id;\n        if (!cmId) {\n            return;\n        }\n        const sectionId = target.dataset.sectionid ?? null;\n        event.preventDefault();\n        this.reactive.dispatch('cmDuplicate', [cmId], sectionId);\n    }\n\n    /**\n     * Handle a delete cm request.\n     *\n     * @param {Element} target the dispatch action element\n     * @param {Event} event the triggered event\n     */\n    async _requestCmDelete(target, event) {\n        // Check we have an id.\n        const cmId = target.dataset.id;\n\n        if (!cmId) {\n            return;\n        }\n        const cmInfo = this.reactive.get('cm', cmId);\n\n        event.preventDefault();\n\n        const modalParams = {\n            title: getString('confirm', 'core'),\n            body: getString(\n                'deletechecktypename',\n                'moodle',\n                {\n                    type: cmInfo.modname,\n                    name: cmInfo.name,\n                }\n            ),\n            saveButtonText: getString('delete', 'core'),\n            type: ModalFactory.types.SAVE_CANCEL,\n        };\n\n        const modal = await this._modalBodyRenderedPromise(modalParams);\n\n        modal.getRoot().on(\n            ModalEvents.save,\n            e => {\n                // Stop the default save button behaviour which is to close the modal.\n                e.preventDefault();\n                modal.destroy();\n                this.reactive.dispatch('cmDelete', [cmId]);\n            }\n        );\n    }\n\n    /**\n     * Disable all add sections actions.\n     *\n     * @param {boolean} locked the new locked value.\n     */\n    _setAddSectionLocked(locked) {\n        const targets = this.getElements(this.selectors.ADDSECTION);\n        targets.forEach(element => {\n            element.classList.toggle(this.classes.DISABLED, locked);\n            this.setElementLocked(element, locked);\n        });\n    }\n\n    /**\n     * Replace an element with a copy with a different tag name.\n     *\n     * @param {Element} element the original element\n     */\n    _disableLink(element) {\n        if (element) {\n            element.style.pointerEvents = 'none';\n            element.style.userSelect = 'none';\n            element.classList.add(this.classes.DISABLED);\n            element.setAttribute('aria-disabled', true);\n            element.addEventListener('click', event => event.preventDefault());\n        }\n    }\n\n    /**\n     * Render a modal and return a body ready promise.\n     *\n     * @param {object} modalParams the modal params\n     * @return {Promise} the modal body ready promise\n     */\n    _modalBodyRenderedPromise(modalParams) {\n        return new Promise((resolve, reject) => {\n            ModalFactory.create(modalParams).then((modal) => {\n                modal.setRemoveOnClose(true);\n                // Handle body loading event.\n                modal.getRoot().on(ModalEvents.bodyRendered, () => {\n                    resolve(modal);\n                });\n                // Configure some extra modal params.\n                if (modalParams.saveButtonText !== undefined) {\n                    modal.setSaveButtonText(modalParams.saveButtonText);\n                }\n                modal.show();\n                return;\n            }).catch(() => {\n                reject(`Cannot load modal content`);\n            });\n        });\n    }\n\n    /**\n     * Hide and later destroy a modal.\n     *\n     * Behat will fail if we remove the modal while some boostrap collapse is executing.\n     *\n     * @param {Modal} modal\n     * @param {HTMLElement} element the dom element to focus on.\n     */\n    _destroyModal(modal, element) {\n        modal.hide();\n        const pendingDestroy = new Pending(`courseformat/actions:destroyModal`);\n        if (element) {\n            element.focus();\n        }\n        setTimeout(() =>{\n            modal.destroy();\n            pendingDestroy.resolve();\n        }, 500);\n    }\n\n    /**\n     * Get the closest actions menu toggler to an action element.\n     *\n     * @param {HTMLElement} element the action link element\n     * @returns {HTMLElement|undefined}\n     */\n    _getClosestActionMenuToogler(element) {\n        const actionMenu = element.closest(this.selectors.ACTIONMENU);\n        if (!actionMenu) {\n            return undefined;\n        }\n        return actionMenu.querySelector(this.selectors.ACTIONMENUTOGGLER);\n    }\n}\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireDefault","obj","__esModule","default","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","length","err","return","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","defineProperty","key","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_setPrototypeOf","p","bind","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","_possibleConstructorReturn","ReferenceError","_assertThisInitialized","_modal_factory","_modal_events","_templates","CourseEvents","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","set","_interopRequireWildcard","_pending","_contenttree","_jquery","prefetchStrings","directMutations","sectionHide","sectionShow","cmHide","cmShow","cmStealth","_default","_BaseComponent","subClass","superClass","_inherits","protoProps","staticProps","_requestCmDelete2","_requestCmDuplicate2","_requestMutationAction2","_requestDeleteSection2","_requestAddSection2","_requestMoveCm2","_requestMoveSection2","_super","selectors","ACTIONLINK","SECTIONLINK","CMLINK","SECTIONNODE","MODALTOGGLER","ADDSECTION","CONTENTTREE","ACTIONMENU","ACTIONMENUTOGGLER","classes","DISABLED","_this","addEventListener","element","_dispatchClick","_checkSectionlist","sectionRefreshed","watch","handler","event","closest","classList","contains","preventDefault","actionName","dataset","action","_actionMethodName","_requestMutationAction","requestName","toUpperCase","concat","_ref","_setAddSectionLocked","course","sectionlist","maxsections","_callee","sectionId","sectionInfo","editTools","exporter","data","modalParams","modal","modalBody","currentElement","generalSection","_this2","_context","id","reactive","_getClosestActionMenuToogler","getExporter","sectionid","sectiontitle","title","getString","body","Templates","render","_modalBodyRenderedPromise","getList","getBody","querySelector","_disableLink","ContentTree","SECTION","TOGGLER","COLLAPSE","matches","for","getAttribute","dispatch","_destroyModal","_x2","_callee2","_toggler$data","cmId","cmInfo","sectionnode","toggler","collapsibleId","_this3","_context2","cmid","cmname","ENTER","jQuery","find","attr","replace","collapse","targetSectionId","targetCmId","dropData","cmDraggableData","nextcmid","section","cmlist","_x3","_x4","_callee3","_target$dataset$id","_context3","_x5","_x6","_callee4","_sectionInfo$cmlist","_this4","_context4","hassummary","rawtitle","saveButtonText","ModalFactory","types","SAVE_CANCEL","getRoot","on","ModalEvents","save","destroy","_x7","_x8","mutationName","_context5","_callee5","_x9","_x10","_x11","_callee6","_target$dataset$secti","_context6","_x12","_x13","_callee7","_this5","_context7","modname","_x14","_x15","locked","_this6","getElements","toggle","setElementLocked","style","pointerEvents","userSelect","add","setAttribute","setRemoveOnClose","bodyRendered","setSaveButtonText","show","hide","pendingDestroy","Pending","focus","setTimeout","actionMenu","actions","_Object$entries","entries","_Object$entries$_i","mutationReference","BaseComponent","_exports"],"mappings":"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"}