{"version":3,"file":"usertours.min.js","sources":["../src/usertours.js"],"sourcesContent":["/**\n * User tour control library.\n *\n * @module     tool_usertours/usertours\n * @copyright  2016 Andrew Nicols <andrew@nicols.co.uk>\n */\nimport BootstrapTour from './tour';\nimport Templates from 'core/templates';\nimport log from 'core/log';\nimport notification from 'core/notification';\nimport * as tourRepository from './repository';\nimport Pending from 'core/pending';\nimport {eventTypes} from './events';\n\nlet currentTour = null;\nlet tourId = null;\n\n/**\n * Find the first matching tour.\n *\n * @param {object[]} tourDetails\n * @param {object[]} filters\n * @returns {null|object}\n */\nconst findMatchingTour = (tourDetails, filters) => {\n    return tourDetails.find(tour => filters.some(filter => {\n        if (filter && filter.filterMatches) {\n            return filter.filterMatches(tour);\n        }\n\n        return true;\n    }));\n};\n\n/**\n * Initialise the user tour for the current page.\n *\n * @method  init\n * @param   {Array}    tourDetails      The matching tours for this page.\n * @param   {Array}    filters          The names of all client side filters.\n */\nexport const init = async(tourDetails, filters) => {\n    const requirements = [];\n    filters.forEach(filter => {\n        requirements.push(import(`tool_usertours/filter_${filter}`));\n    });\n\n    const filterPlugins = await Promise.all(requirements);\n\n    const matchingTour = findMatchingTour(tourDetails, filterPlugins);\n    if (!matchingTour) {\n        return;\n    }\n\n    // Only one tour per page is allowed.\n    tourId = matchingTour.tourId;\n\n    let startTour = matchingTour.startTour;\n    if (typeof startTour === 'undefined') {\n        startTour = true;\n    }\n\n    if (startTour) {\n        // Fetch the tour configuration.\n        fetchTour(tourId);\n    }\n\n    addResetLink();\n\n    // Watch for the reset link.\n    document.querySelector('body').addEventListener('click', e => {\n        const resetLink = e.target.closest('#resetpagetour');\n        if (resetLink) {\n            e.preventDefault();\n            resetTourState(tourId);\n        }\n    });\n};\n\n/**\n * Fetch the configuration specified tour, and start the tour when it has been fetched.\n *\n * @method  fetchTour\n * @param   {Number}    tourId      The ID of the tour to start.\n */\nconst fetchTour = async tourId => {\n    const pendingPromise = new Pending(`admin_usertour_fetchTour:${tourId}`);\n\n    try {\n        // If we don't have any tour config (because it doesn't need showing for the current user), return early.\n        const response = await tourRepository.fetchTour(tourId);\n        if (response.hasOwnProperty('tourconfig')) {\n            const {html} = await Templates.renderForPromise('tool_usertours/tourstep', response.tourconfig);\n            startBootstrapTour(tourId, html, response.tourconfig);\n        }\n        pendingPromise.resolve();\n    } catch (error) {\n        pendingPromise.resolve();\n        notification.exception(error);\n    }\n};\n\nconst getPreferredResetLocation = () => {\n    let location = document.querySelector('.tool_usertours-resettourcontainer');\n    if (location) {\n        return location;\n    }\n\n    location = document.querySelector('.logininfo');\n    if (location) {\n        return location;\n    }\n\n    location = document.querySelector('footer');\n    if (location) {\n        return location;\n    }\n\n    return document.body;\n};\n\n/**\n * Add a reset link to the page.\n *\n * @method  addResetLink\n */\nconst addResetLink = () => {\n    const pendingPromise = new Pending('admin_usertour_addResetLink');\n\n    Templates.render('tool_usertours/resettour', {})\n    .then(function(html, js) {\n        // Append the link to the most suitable place on the page with fallback to legacy selectors and finally the body if\n        // there is no better place.\n        Templates.appendNodeContents(getPreferredResetLocation(), html, js);\n\n        return;\n    })\n    .catch()\n    .then(pendingPromise.resolve)\n    .catch();\n};\n\n/**\n * Start the specified tour.\n *\n * @method  startBootstrapTour\n * @param   {Number}    tourId      The ID of the tour to start.\n * @param   {String}    template    The template to use.\n * @param   {Object}    tourConfig  The tour configuration.\n * @return  {Object}\n */\nconst startBootstrapTour = (tourId, template, tourConfig) => {\n    if (currentTour && currentTour.tourRunning) {\n        // End the current tour.\n        currentTour.endTour();\n        currentTour = null;\n    }\n\n    document.addEventListener(eventTypes.tourEnded, markTourComplete);\n    document.addEventListener(eventTypes.stepRenderer, markStepShown);\n\n    // Sort out the tour name.\n    tourConfig.tourName = tourConfig.name;\n    delete tourConfig.name;\n\n    // Add the template to the configuration.\n    // This enables translations of the buttons.\n    tourConfig.template = template;\n\n    tourConfig.steps = tourConfig.steps.map(function(step) {\n        if (typeof step.element !== 'undefined') {\n            step.target = step.element;\n            delete step.element;\n        }\n\n        if (typeof step.reflex !== 'undefined') {\n            step.moveOnClick = !!step.reflex;\n            delete step.reflex;\n        }\n\n        if (typeof step.content !== 'undefined') {\n            step.body = step.content;\n            delete step.content;\n        }\n\n        return step;\n    });\n\n    currentTour = new BootstrapTour(tourConfig);\n    return currentTour.startTour();\n};\n\n/**\n * Mark the specified step as being shownd by the user.\n *\n * @method  markStepShown\n * @param   {Event} e\n */\nconst markStepShown = e => {\n    const tour = e.detail.tour;\n    const stepConfig = tour.getStepConfig(tour.getCurrentStepNumber());\n    tourRepository.markStepShown(\n        stepConfig.stepid,\n        tourId,\n        tour.getCurrentStepNumber()\n    ).catch(log.error);\n};\n\n/**\n * Mark the specified tour as being completed by the user.\n *\n * @method  markTourComplete\n * @param   {Event} e\n * @listens tool_usertours/stepRendered\n */\nconst markTourComplete = e => {\n    document.removeEventListener(eventTypes.tourEnded, markTourComplete);\n    document.removeEventListener(eventTypes.stepRenderer, markStepShown);\n\n    const tour = e.detail.tour;\n    const stepConfig = tour.getStepConfig(tour.getCurrentStepNumber());\n    tourRepository.markTourComplete(\n        stepConfig.stepid,\n        tourId,\n        tour.getCurrentStepNumber()\n    ).catch(log.error);\n};\n\n/**\n * Reset the state, and restart the the tour on the current page.\n *\n * @method  resetTourState\n * @param   {Number}    tourId      The ID of the tour to start.\n * @returns {Promise}\n */\nexport const resetTourState = tourId => tourRepository.resetTourState(tourId)\n.then(response => {\n    if (response.startTour) {\n        fetchTour(response.startTour);\n    }\n    return;\n}).catch(notification.exception);\n"],"names":["_tour","_interopRequireDefault","_templates","_log","_notification","tourRepository","obj","nodeInterop","__esModule","_typeof","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_pending","_systemImportTransformerGlobalIdentifier","window","self","global","WeakMap","cacheBabelInterop","cacheNodeInterop","_regeneratorRuntime","exports","Op","hasOwn","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_ref","currentTour","tourId","findMatchingTour","tourDetails","filters","find","tour","some","filter","filterMatches","init","_callee","requirements","filterPlugins","matchingTour","startTour","_context","amd","require","concat","all","fetchTour","addResetLink","document","querySelector","addEventListener","e","target","closest","preventDefault","resetTourState","_x","_x2","_exports","_ref2","pendingPromise","response","_yield$Templates$rend","html","_context2","Pending","Templates","renderForPromise","tourconfig","startBootstrapTour","t0","notification","_callee2","_x3","render","js","location","appendNodeContents","body","template","tourConfig","tourRunning","endTour","eventTypes","tourEnded","markTourComplete","stepRenderer","markStepShown","tourName","steps","map","step","element","reflex","moveOnClick","content","BootstrapTour","detail","stepConfig","getStepConfig","getCurrentStepNumber","stepid","log","removeEventListener"],"mappings":"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"}