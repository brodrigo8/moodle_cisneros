{"version":3,"sources":["../src/copy_to_clipboard.js"],"names":["init","triggerId","containerId","trigger","document","getElementById","addEventListener","e","preventDefault","container","textToCopy","value","innerText","messagePromise","navigator","clipboard","writeText","then","message","catch","Notification","exception"],"mappings":"uLAyBA,uD,OASoB,QAAPA,CAAAA,IAAO,CAACC,CAAD,CAAYC,CAAZ,CAA4B,CAC5C,GAAMC,CAAAA,CAAO,CAAGC,QAAQ,CAACC,cAAT,CAAwBJ,CAAxB,CAAhB,CAEAE,CAAO,CAACG,gBAAR,CAAyB,OAAzB,CAAkC,SAAAC,CAAC,CAAI,CACnCA,CAAC,CAACC,cAAF,GADmC,GAE7BC,CAAAA,CAAS,CAAGL,QAAQ,CAACC,cAAT,CAAwBH,CAAxB,CAFiB,CAG/BQ,CAAU,CAAG,IAHkB,CAKnC,GAAID,CAAS,CAACE,KAAd,CAAqB,CAEjBD,CAAU,CAAGD,CAAS,CAACE,KAC1B,CAHD,IAGO,IAAIF,CAAS,CAACG,SAAd,CAAyB,CAE5BF,CAAU,CAAGD,CAAS,CAACG,SAC1B,CAED,GAAIC,CAAAA,CAAJ,CACA,GAAmB,IAAf,GAAAH,CAAJ,CAAyB,CAErBG,CAAc,CAAGC,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BN,CAA9B,EAA0CO,IAA1C,CAA+C,UAAM,CAClE,MAAO,iBAAU,uBAAV,CAAmC,MAAnC,CACV,CAFgB,CAGpB,CALD,IAKO,CAEHJ,CAAc,CAAG,iBAAU,yBAAV,CAAqC,MAArC,CACpB,CAGDA,CAAc,CAACI,IAAf,CAAoB,SAAAC,CAAO,CAAI,CAC3B,MAAO,UAASA,CAAT,CAAkB,EAAlB,CACV,CAFD,EAEGC,KAFH,CAES,SAAAZ,CAAC,CAAI,CACVa,UAAaC,SAAb,CAAuBd,CAAvB,CACH,CAJD,CAKH,CA9BD,CA+BH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to copy text from a container to the clipboard.\n *\n * @module     core/copy_to_clipboard\n * @package    core\n * @copyright  2021 Jun Pataleta\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {get_string as getString} from 'core/str';\nimport {add as addToast} from 'core/toast';\nimport Notification from 'core/notification';\n\n/**\n * Initialiser.\n *\n * @param {string} triggerId The ID of the element (e.g. a button) that triggers the copying of the text inside the container.\n * @param {string} containerId The ID of the element (e.g. a text input, text area, span, etc.) that contains the text to copy\n *                              to the clipboard.\n */\nexport const init = (triggerId, containerId) => {\n    const trigger = document.getElementById(triggerId);\n\n    trigger.addEventListener('click', e => {\n        e.preventDefault();\n        const container = document.getElementById(containerId);\n        let textToCopy = null;\n\n        if (container.value) {\n            // For containers which are form elements (e.g. text area, text input), get the element's value.\n            textToCopy = container.value;\n        } else if (container.innerText) {\n            // For other elements, try to use the innerText attribute.\n            textToCopy = container.innerText;\n        }\n\n        let messagePromise;\n        if (textToCopy !== null) {\n            // Copy the text from the container to the clipboard.\n            messagePromise = navigator.clipboard.writeText(textToCopy).then(() => {\n                return getString('textcopiedtoclipboard', 'core');\n            });\n        } else {\n            // Unable to find container value or inner text.\n            messagePromise = getString('unabletocopytoclipboard', 'core');\n        }\n\n        // Show toast message.\n        messagePromise.then(message => {\n            return addToast(message, {});\n        }).catch(e => {\n            Notification.exception(e);\n        });\n    });\n};\n"],"file":"copy_to_clipboard.min.js"}