{"version":3,"sources":["../src/menu_navigation.js"],"names":["SELECTORS","openDropdownNode","clickErrorHandler","item","fallback","menuItemHelper","src","parent","classList","contains","closest","dropDownToggle","document","getElementById","getAttribute","add","setAttribute","parentElement","querySelector","Array","prototype","forEach","call","children","node","menuItem","menuitem","remove","removeAttribute","keyboardListenerEvents","e","srcElement","firstNode","currentTarget","firstElementChild","lastNode","findUsableLastNode","keyCode","arrowRight","arrowLeft","preventDefault","click","space","enter","setFocusNext","setFocusPrev","arrowUp","arrowDown","home","setFocusHomeEnd","end","clickListenerEvents","elementRoot","removeEventListener","addEventListener","currentNode","listElement","nextListItem","nextElementSibling","nodeToSelect","isTabList","itemSelector","tab","focus","previousElementSibling","lastElementChild","extractedNodes","map","reverse","nodesToUse","filter","length"],"mappings":"4JA0BMA,CAAAA,CAAS,CAAG,CACd,SAAY,qBADE,CAEd,KAAQ,iBAFM,CAGd,IAAO,gBAHO,C,CAMdC,CAAgB,CAAG,I,CASjBC,CAAiB,CAAG,SAACC,CAAD,CAAOC,CAAP,CAAoB,CAC1C,GAAa,IAAT,GAAAD,CAAJ,CAAmB,CACf,MAAOA,CAAAA,CACV,CAFD,IAEO,CACH,MAAOC,CAAAA,CACV,CACJ,C,CAOKC,CAAc,CAAG,SAAAC,CAAG,CAAI,CAC1B,GAAIC,CAAAA,CAAJ,CAIA,GAAID,CAAG,CAACE,SAAJ,CAAcC,QAAd,CAAuB,eAAvB,CAAJ,CAA6C,CACzCF,CAAM,CAAGD,CAAG,CAACI,OAAJ,CAAY,gBAAZ,CAAT,CACA,GAAMC,CAAAA,CAAc,CAAGC,QAAQ,CAACC,cAAT,CAAwBN,CAAM,CAACO,YAAP,CAAoB,iBAApB,CAAxB,CAAvB,CACAH,CAAc,CAACH,SAAf,CAAyBO,GAAzB,CAA6B,QAA7B,EACAJ,CAAc,CAACK,YAAf,CAA4B,UAA5B,CAAwC,CAAxC,CACH,CALD,IAKO,CACHT,CAAM,CAAGD,CAAG,CAACW,aAAJ,CAAkBA,aAAlB,CAAgCC,aAAhC,CAA8C,gBAA9C,CACZ,CAEDC,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6Bf,CAAM,CAACgB,QAApC,CAA8C,SAAAC,CAAI,CAAI,CAClD,GAAMC,CAAAA,CAAQ,CAAGD,CAAI,CAACN,aAAL,CAAmBlB,CAAS,CAAC0B,QAA7B,CAAjB,CACA,GAAiB,IAAb,GAAAD,CAAJ,CAAuB,CACnBA,CAAQ,CAACjB,SAAT,CAAmBmB,MAAnB,CAA0B,QAA1B,EAEAF,CAAQ,CAACG,eAAT,CAAyB,eAAzB,EACAH,CAAQ,CAACG,eAAT,CAAyB,cAAzB,CACH,CACJ,CARD,EAUA,GAAiC,KAA7B,GAAAtB,CAAG,CAACQ,YAAJ,CAAiB,MAAjB,CAAJ,CAAwC,CACpCR,CAAG,CAACU,YAAJ,CAAiB,eAAjB,CAAkC,MAAlC,CACH,CAFD,IAEO,CACHV,CAAG,CAACU,YAAJ,CAAiB,cAAjB,CAAiC,MAAjC,CACH,CACJ,C,CAOKa,CAAsB,CAAG,SAAAC,CAAC,CAAI,IAC1BxB,CAAAA,CAAG,CAAGwB,CAAC,CAACC,UADkB,CAE1BC,CAAS,CAAGF,CAAC,CAACG,aAAF,CAAgBC,iBAFF,CAG1BC,CAAQ,CAAGC,CAAkB,CAACN,CAAC,CAACG,aAAH,CAHH,CAOhC,GAAI3B,CAAG,CAACE,SAAJ,CAAcC,QAAd,CAAuB,eAAvB,CAAJ,CAA6C,CACzC,GAAIqB,CAAC,CAACO,OAAF,GAAcC,YAAd,EACAR,CAAC,CAACO,OAAF,GAAcE,WADlB,CAC6B,CACzBT,CAAC,CAACU,cAAF,GACA,GAAyB,IAArB,GAAAvC,CAAJ,CAA+B,CAC3BA,CAAgB,CAACgB,aAAjB,CAA+BwB,KAA/B,EACH,CACJ,CACD,GAAIX,CAAC,CAACO,OAAF,GAAcK,OAAd,EACAZ,CAAC,CAACO,OAAF,GAAcM,OADlB,CACyB,CACrBb,CAAC,CAACU,cAAF,GAEAnC,CAAc,CAACC,CAAD,CAAd,CAEA,GAAI,CAACA,CAAG,CAACW,aAAJ,CAAkBT,SAAlB,CAA4BC,QAA5B,CAAqC,UAArC,CAAL,CAAuD,CACnDH,CAAG,CAACmC,KAAJ,EACH,CACJ,CACJ,CAlBD,IAkBO,IAAiC,UAA7B,GAAAnC,CAAG,CAACQ,YAAJ,CAAiB,MAAjB,CAAJ,CAA6C,CAEhD,GAAIgB,CAAC,CAACO,OAAF,GAAcC,YAAlB,CAA8B,CAC1BR,CAAC,CAACU,cAAF,GACAI,CAAY,CAACtC,CAAD,CAAM0B,CAAN,CACf,CACD,GAAIF,CAAC,CAACO,OAAF,GAAcE,WAAlB,CAA6B,CACzBT,CAAC,CAACU,cAAF,GACAK,CAAY,CAACvC,CAAD,CAAM6B,CAAN,CACf,CAED,GAAIL,CAAC,CAACO,OAAF,GAAcS,SAAd,EACAhB,CAAC,CAACO,OAAF,GAAcU,WADlB,CAC6B,CACzB9C,CAAgB,CAAGK,CAAnB,CACAwB,CAAC,CAACU,cAAF,EACH,CACD,GAAIV,CAAC,CAACO,OAAF,GAAcW,MAAlB,CAAwB,CACpBlB,CAAC,CAACU,cAAF,GACAS,CAAe,CAACjB,CAAD,CAClB,CACD,GAAIF,CAAC,CAACO,OAAF,GAAca,KAAlB,CAAuB,CACnBpB,CAAC,CAACU,cAAF,GACAS,CAAe,CAACd,CAAD,CAClB,CACD,GAAIL,CAAC,CAACO,OAAF,GAAcK,OAAd,EACAZ,CAAC,CAACO,OAAF,GAAcM,OADlB,CACyB,CACrBb,CAAC,CAACU,cAAF,GAEA,GAAI,CAAClC,CAAG,CAACW,aAAJ,CAAkBT,SAAlB,CAA4BC,QAA5B,CAAqC,UAArC,CAAL,CAAuD,CACnDH,CAAG,CAACmC,KAAJ,EACH,CACJ,CACJ,CACJ,C,CAOKU,CAAmB,CAAG,SAAArB,CAAC,CAAI,CAC7B,GAAMxB,CAAAA,CAAG,CAAGwB,CAAC,CAACC,UAAd,CACA1B,CAAc,CAACC,CAAD,CACjB,C,WAOc,SAAA8C,CAAW,CAAI,CAE1BA,CAAW,CAACC,mBAAZ,CAAgC,SAAhC,CAA2CxB,CAA3C,EACAuB,CAAW,CAACC,mBAAZ,CAAgC,OAAhC,CAAyCF,CAAzC,EAEAC,CAAW,CAACE,gBAAZ,CAA6B,SAA7B,CAAwCzB,CAAxC,EACAuB,CAAW,CAACE,gBAAZ,CAA6B,OAA7B,CAAsCH,CAAtC,CACH,C,IAQKP,CAAAA,CAAY,CAAG,SAACW,CAAD,CAAcvB,CAAd,CAA4B,IACvCwB,CAAAA,CAAW,CAAGD,CAAW,CAACtC,aADa,CAEvCwC,CAAY,CAAGD,CAAW,CAACE,kBAFY,CAGvCC,CAAY,CAAGzD,CAAiB,CAACuD,CAAD,CAAezB,CAAf,CAHO,CAIvCzB,CAAM,CAAGiD,CAAW,CAACvC,aAJkB,CAKvC2C,CAAS,CAAmC,SAAhC,GAAArD,CAAM,CAACO,YAAP,CAAoB,MAApB,CAL2B,CAMvC+C,CAAY,CAAGD,CAAS,CAAG5D,CAAS,CAAC8D,GAAb,CAAmB9D,CAAS,CAAC0B,QANd,CAOvCD,CAAQ,CAAGkC,CAAY,CAACzC,aAAb,CAA2B2C,CAA3B,CAP4B,CAQ7CpC,CAAQ,CAACsC,KAAT,EACH,C,CAQKlB,CAAY,CAAG,SAACU,CAAD,CAAcpB,CAAd,CAA2B,IACtCqB,CAAAA,CAAW,CAAGD,CAAW,CAACtC,aADY,CAEtCwC,CAAY,CAAGD,CAAW,CAACQ,sBAFW,CAGtCL,CAAY,CAAGzD,CAAiB,CAACuD,CAAD,CAAetB,CAAf,CAHM,CAItC5B,CAAM,CAAGiD,CAAW,CAACvC,aAJiB,CAKtC2C,CAAS,CAAmC,SAAhC,GAAArD,CAAM,CAACO,YAAP,CAAoB,MAApB,CAL0B,CAMtC+C,CAAY,CAAGD,CAAS,CAAG5D,CAAS,CAAC8D,GAAb,CAAmB9D,CAAS,CAAC0B,QANf,CAOtCD,CAAQ,CAAGkC,CAAY,CAACzC,aAAb,CAA2B2C,CAA3B,CAP2B,CAQ5CpC,CAAQ,CAACsC,KAAT,EACH,C,CAOKd,CAAe,CAAG,SAAAzB,CAAI,CAAI,CAC5BA,CAAI,CAACN,aAAL,CAAmBlB,CAAS,CAAC0B,QAA7B,EAAuCqC,KAAvC,EACH,C,CAQK3B,CAAkB,CAAG,SAAAgB,CAAW,CAAI,CACtC,GAAMjB,CAAAA,CAAQ,CAAGiB,CAAW,CAACa,gBAA7B,CAGA,GAAI,CAAC9B,CAAQ,CAAC3B,SAAT,CAAmBC,QAAnB,CAA4B,QAA5B,CAAL,CAA4C,CACxC,MAAO2C,CAAAA,CAAW,CAACa,gBACtB,CAFD,IAEO,IAEGC,CAAAA,CAAc,CAAG/C,KAAK,CAACC,SAAN,CAAgB+C,GAAhB,CAAoB7C,IAApB,CAAyB8B,CAAW,CAAC7B,QAArC,CAA+C,SAAAC,CAAI,CAAI,CAC1E,MAAOA,CAAAA,CACV,CAFsB,EAEpB4C,OAFoB,EAFpB,CAOGC,CAAU,CAAGH,CAAc,CAACI,MAAf,CAAuB,SAAA9C,CAAI,CAAI,CAC9C,GAAI,CAACA,CAAI,CAAChB,SAAL,CAAeC,QAAf,CAAwB,QAAxB,CAAL,CAAwC,CACpC,MAAOe,CAAAA,CACV,CACJ,CAJkB,CAPhB,CAcH,GAA0B,CAAtB,GAAA6C,CAAU,CAACE,MAAf,CAA6B,CACzB,MAAOF,CAAAA,CAAU,CAAC,CAAD,CACpB,CAFD,IAEO,CACH,MAAOjB,CAAAA,CAAW,CAAClB,iBACtB,CACJ,CACJ,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Keyboard initialization for a given html node.\n *\n * @module     core/keyboard_navigation\n * @copyright  2021 Moodle\n * @author     Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {space, enter, arrowRight, arrowLeft, arrowDown, arrowUp, home, end} from 'core/key_codes';\n\nconst SELECTORS = {\n    'menuitem': '[role=\"menuitem\"]',\n    'menu': '[role=\"menu\"]',\n    'tab': '[role=\"tab\"]',\n};\n\nlet openDropdownNode = null;\n\n/**\n * Small helper function to check if a given node is null or not.\n *\n * @param {HTMLElement|null} item The node that we want to compare.\n * @param {HTMLElement} fallback Either the first node or final node that can be focused on.\n * @return {HTMLElement}\n */\nconst clickErrorHandler = (item, fallback) => {\n    if (item !== null) {\n        return item;\n    } else {\n        return fallback;\n    }\n};\n\n/**\n * Control classes etc of the selected dropdown item and its' parent <a>\n *\n * @param {HTMLElement} src The node within the dropdown the user selected.\n */\nconst menuItemHelper = src => {\n    let parent;\n\n    // Handling for dropdown escapes.\n    // A bulk of the handling is already done by aria.js just add polish.\n    if (src.classList.contains('dropdown-item')) {\n        parent = src.closest('.dropdown-menu');\n        const dropDownToggle = document.getElementById(parent.getAttribute('aria-labelledby'));\n        dropDownToggle.classList.add('active');\n        dropDownToggle.setAttribute('tabindex', 0);\n    } else {\n        parent = src.parentElement.parentElement.querySelector('.dropdown-menu');\n    }\n    // Remove active class from any other dropdown elements.\n    Array.prototype.forEach.call(parent.children, node => {\n        const menuItem = node.querySelector(SELECTORS.menuitem);\n        if (menuItem !== null) {\n            menuItem.classList.remove('active');\n            // Remove aria selection states (aria-selected for tab roles, aria-current for menuitem roles).\n            menuItem.removeAttribute('aria-selected');\n            menuItem.removeAttribute('aria-current');\n        }\n    });\n    // Set the applicable element's selection state.\n    if (src.getAttribute('role') === 'tab') {\n        src.setAttribute('aria-selected', 'true');\n    } else {\n        src.setAttribute('aria-current', 'true');\n    }\n};\n\n/**\n * Defined keyboard event handling so we can remove listeners on nodes on resize etc.\n *\n * @param {event} e The triggering element and key presses etc.\n */\nconst keyboardListenerEvents = e => {\n    const src = e.srcElement;\n    const firstNode = e.currentTarget.firstElementChild;\n    const lastNode = findUsableLastNode(e.currentTarget);\n\n    // Handling for dropdown escapes.\n    // A bulk of the handling is already done by aria.js just add polish.\n    if (src.classList.contains('dropdown-item')) {\n        if (e.keyCode === arrowRight ||\n            e.keyCode === arrowLeft) {\n            e.preventDefault();\n            if (openDropdownNode !== null) {\n                openDropdownNode.parentElement.click();\n            }\n        }\n        if (e.keyCode === space ||\n            e.keyCode === enter) {\n            e.preventDefault();\n\n            menuItemHelper(src);\n\n            if (!src.parentElement.classList.contains('dropdown')) {\n                src.click();\n            }\n        }\n    } else if (src.getAttribute('role') === 'menuitem') {\n        // Handle keyboard navigation if the element is rendered as a menu item.\n        if (e.keyCode === arrowRight) {\n            e.preventDefault();\n            setFocusNext(src, firstNode);\n        }\n        if (e.keyCode === arrowLeft) {\n            e.preventDefault();\n            setFocusPrev(src, lastNode);\n        }\n        // Let aria.js handle the dropdowns.\n        if (e.keyCode === arrowUp ||\n            e.keyCode === arrowDown) {\n            openDropdownNode = src;\n            e.preventDefault();\n        }\n        if (e.keyCode === home) {\n            e.preventDefault();\n            setFocusHomeEnd(firstNode);\n        }\n        if (e.keyCode === end) {\n            e.preventDefault();\n            setFocusHomeEnd(lastNode);\n        }\n        if (e.keyCode === space ||\n            e.keyCode === enter) {\n            e.preventDefault();\n            // Aria.js handles dropdowns etc.\n            if (!src.parentElement.classList.contains('dropdown')) {\n                src.click();\n            }\n        }\n    }\n};\n\n/**\n * Defined click event handling so we can remove listeners on nodes on resize etc.\n *\n * @param {event} e The triggering element and key presses etc.\n */\nconst clickListenerEvents = e => {\n    const src = e.srcElement;\n    menuItemHelper(src);\n};\n\n/**\n * The initial entry point that a given module can pass a HTMLElement.\n *\n * @param {HTMLElement} elementRoot The menu to add handlers upon.\n */\nexport default elementRoot => {\n    // Remove any and all instances of old listeners on the passed element.\n    elementRoot.removeEventListener('keydown', keyboardListenerEvents);\n    elementRoot.removeEventListener('click', clickListenerEvents);\n    // (Re)apply our event listeners to the passed element.\n    elementRoot.addEventListener('keydown', keyboardListenerEvents);\n    elementRoot.addEventListener('click', clickListenerEvents);\n};\n\n/**\n * Handle the focusing to the next element in the dropdown.\n *\n * @param {HTMLElement|null} currentNode The node that we want to take action on.\n * @param {HTMLElement} firstNode The backup node to focus as a last resort.\n */\nconst setFocusNext = (currentNode, firstNode) => {\n    const listElement = currentNode.parentElement;\n    const nextListItem = listElement.nextElementSibling;\n    const nodeToSelect = clickErrorHandler(nextListItem, firstNode);\n    const parent = listElement.parentElement;\n    const isTabList = parent.getAttribute('role') === 'tablist';\n    const itemSelector = isTabList ? SELECTORS.tab : SELECTORS.menuitem;\n    const menuItem = nodeToSelect.querySelector(itemSelector);\n    menuItem.focus();\n};\n\n/**\n * Handle the focusing to the previous element in the dropdown.\n *\n * @param {HTMLElement|null} currentNode The node that we want to take action on.\n * @param {HTMLElement} lastNode The backup node to focus as a last resort.\n */\nconst setFocusPrev = (currentNode, lastNode) => {\n    const listElement = currentNode.parentElement;\n    const nextListItem = listElement.previousElementSibling;\n    const nodeToSelect = clickErrorHandler(nextListItem, lastNode);\n    const parent = listElement.parentElement;\n    const isTabList = parent.getAttribute('role') === 'tablist';\n    const itemSelector = isTabList ? SELECTORS.tab : SELECTORS.menuitem;\n    const menuItem = nodeToSelect.querySelector(itemSelector);\n    menuItem.focus();\n};\n\n/**\n * Focus on either the start or end of a nav list.\n *\n * @param {HTMLElement} node The element to focus on.\n */\nconst setFocusHomeEnd = node => {\n    node.querySelector(SELECTORS.menuitem).focus();\n};\n\n/**\n * We need to look within the menu to find a last node we can add focus to.\n *\n * @param {HTMLElement} elementRoot Menu to find a final child node within.\n * @return {HTMLElement}\n */\nconst findUsableLastNode = elementRoot => {\n    const lastNode = elementRoot.lastElementChild;\n\n    // An example is the more menu existing but hidden on the page for the time being.\n    if (!lastNode.classList.contains('d-none')) {\n        return elementRoot.lastElementChild;\n    } else {\n        // Cast the HTMLCollection & reverse it.\n        const extractedNodes = Array.prototype.map.call(elementRoot.children, node => {\n            return node;\n        }).reverse();\n\n        // Get rid of any nodes we can not set focus on.\n        const nodesToUse = extractedNodes.filter((node => {\n            if (!node.classList.contains('d-none')) {\n                return node;\n            }\n        }));\n\n        // If we find no elements we can set focus on, fall back to the absolute first element.\n        if (nodesToUse.length !== 0) {\n            return nodesToUse[0];\n        } else {\n            return elementRoot.firstElementChild;\n        }\n    }\n};\n"],"file":"menu_navigation.min.js"}