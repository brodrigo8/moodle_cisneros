{"version":3,"file":"loader.min.js","sources":["../src/loader.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Video JS loader.\n *\n * This takes care of applying the filter on content which was dynamically loaded.\n *\n * @module     media_videojs/loader\n * @copyright  2016 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Config from 'core/config';\nimport {eventTypes} from 'core_filters/events';\nimport LocalStorage from 'core/localstorage';\nimport Notification from 'core/notification';\nimport jQuery from 'jquery';\n\n/** @var {bool} Whether this is the first load of videojs module */\nlet firstLoad;\n\n/** @var {string} The language that is used in the player */\nlet language;\n\n/** @var {object} List of languages and translations for the current page */\nlet langStringCache;\n\n/**\n * Initialisei teh videojs Loader.\n *\n * Adds the listener for the event to then notify video.js.\n *\n * @method\n * @param {string} lang Language to be used in the player\n * @listens event:filterContentUpdated\n */\nexport const setUp = (lang) => {\n    language = lang;\n    firstLoad = true;\n\n    // Notify Video.js about the nodes already present on the page.\n    notifyVideoJS({\n        detail: {\n            nodes: document.body,\n        }\n    });\n\n    // We need to call popover automatically if nodes are added to the page later.\n    document.addEventListener(eventTypes.filterContentUpdated, notifyVideoJS);\n};\n\n/**\n * Notify video.js of new nodes.\n *\n * @param {Event} e The event.\n */\nconst notifyVideoJS = e => {\n    const nodes = jQuery(e.detail.nodes);\n    const selector = '.mediaplugin_videojs';\n    const langStrings = getLanguageJson();\n\n    // Find the descendants matching the expected parent of the audio and video\n    // tags. Then also addBack the nodes matching the same selector. Finally,\n    // we find the audio and video tags contained in those parents. Kind thanks\n    // to jQuery for the simplicity.\n    nodes.find(selector)\n        .addBack(selector)\n        .find('audio, video').each((index, element) => {\n            const id = jQuery(element).attr('id');\n            const config = jQuery(element).data('setup-lazy');\n            const modulePromises = [import('media_videojs/video-lazy')];\n\n            if (config.techOrder && config.techOrder.indexOf('youtube') !== -1) {\n                // Add YouTube to the list of modules we require.\n                modulePromises.push(import('media_videojs/Youtube-lazy'));\n            }\n            if (config.techOrder && config.techOrder.indexOf('OgvJS') !== -1) {\n                config.ogvjs = {\n                    worker: true,\n                    wasm: true,\n                    base: Config.wwwroot + '/media/player/videojs/ogvloader.php/' + Config.jsrev + '/'\n                };\n                // Add Ogv.JS to the list of modules we require.\n                modulePromises.push(import('media_videojs/videojs-ogvjs-lazy'));\n            }\n            Promise.all([langStrings, ...modulePromises])\n            .then(([langJson, videojs]) => {\n                if (firstLoad) {\n                    videojs.addLanguage(language, langJson);\n\n                    firstLoad = false;\n                }\n                videojs(id, config);\n                return;\n            })\n            .catch(Notification.exception);\n        });\n};\n\n/**\n * Returns the json object of the language strings to be used in the player.\n *\n * @returns {Promise}\n */\nconst getLanguageJson = () => {\n    if (langStringCache) {\n        return Promise.resolve(langStringCache);\n    }\n\n    const cacheKey = `media_videojs/${language}`;\n\n    const rawCacheContent = LocalStorage.get(cacheKey);\n    if (rawCacheContent) {\n        const cacheContent = JSON.parse(rawCacheContent);\n\n        langStringCache = cacheContent;\n\n        return Promise.resolve(langStringCache);\n    }\n\n    const request = {\n        methodname: 'media_videojs_get_language',\n        args: {\n            lang: language,\n        },\n    };\n\n    return Ajax.call([request])[0]\n        .then(langStringData => {\n            LocalStorage.set(cacheKey, langStringData);\n\n            return langStringData;\n        })\n        .then(result => JSON.parse(result))\n        .then(langStrings => {\n            langStringCache = langStrings;\n\n            return langStrings;\n        });\n};\n"],"names":["_ajax","_interopRequireDefault","_config","_localstorage","_notification","_jquery","firstLoad","language","langStringCache","_systemImportTransformerGlobalIdentifier","window","self","global","obj","__esModule","default","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","length","err","return","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","_exports","setUp","lang","notifyVideoJS","detail","nodes","document","body","addEventListener","eventTypes","filterContentUpdated","e","jQuery","langStrings","getLanguageJson","find","addBack","each","index","element","id","attr","config","data","modulePromises","define","amd","Promise","resolve","reject","require","module","exports","component","loader","techOrder","indexOf","ogvjs","worker","wasm","base","Config","wwwroot","jsrev","all","concat","then","_ref","_ref2","langJson","videojs","addLanguage","catch","Notification","exception","cacheKey","rawCacheContent","LocalStorage","get","cacheContent","JSON","parse","request","methodname","args","Ajax","langStringData","set","result"],"mappings":"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"}