{"version":3,"file":"embed.min.js","sources":["../src/embed.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Media plugin Embed class for Moodle.\n *\n * @module      tiny_media/embed\n * @copyright   2022 Huong Nguyen <huongnv13@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport {\n    get_string as getString,\n    get_strings as getStrings,\n} from 'core/str';\nimport * as ModalFactory from 'core/modal_factory';\nimport * as ModalEvents from 'core/modal_events';\nimport {displayFilepicker} from 'editor_tiny/utils';\nimport {getCurrentLanguage, getMoodleLang} from 'editor_tiny/options';\nimport {component} from \"./common\";\nimport Modal from './embedmodal';\nimport Selectors from './selectors';\nimport {getEmbedPermissions} from './options';\n\nexport const MediaEmbed = class {\n    editor = null;\n    canShowFilePicker = false;\n\n    /**\n     * @property {Object} The names of the alignment options.\n     */\n    helpStrings = null;\n\n    constructor(editor) {\n        const permissions = getEmbedPermissions(editor);\n        this.canShowFilePicker = permissions.filepicker;\n        this.editor = editor;\n    }\n\n    async getHelpStrings() {\n        if (!this.helpStrings) {\n            const [addSource, tracks, subtitles, captions, descriptions, chapters, metadata] = await getStrings([\n                'addsource_help',\n                'tracks_help',\n                'subtitles_help',\n                'captions_help',\n                'descriptions_help',\n                'chapters_help',\n                'metadata_help',\n            ].map((key) => ({\n                key,\n                component,\n            })));\n\n            this.helpStrings = {addSource, tracks, subtitles, captions, descriptions, chapters, metadata};\n        }\n\n        return this.helpStrings;\n    }\n\n    async getTemplateContext(data) {\n        const languages = this.prepareMoodleLang();\n\n        const helpIcons = Array.from(Object.entries(await this.getHelpStrings())).forEach(([key, text]) => {\n            data[`${key.toLowerCase()}helpicon`] = {text};\n        });\n\n        return Object.assign({}, {\n            elementid: this.editor.getElement().id,\n            showfilepicker: this.canShowFilePicker,\n            langsinstalled: languages.installed,\n            langsavailable: languages.available,\n            link: true,\n            video: false,\n            audio: false,\n        }, data, helpIcons);\n    }\n\n    async displayDialogue() {\n        const data = Object.assign({}, this.getCurrentEmbedData());\n\n        const modal = await ModalFactory.create({\n            type: Modal.TYPE,\n            title: getString('createmedia', 'tiny_media'),\n            templateContext: await this.getTemplateContext(data),\n            removeOnClose: true,\n            large: true,\n        });\n\n        this.currentModal = modal;\n        await this.registerEventListeners(modal);\n        modal.show();\n    }\n\n    getCurrentEmbedData() {\n        const properties = this.getMediumProperties();\n        if (!properties) {\n            return {};\n        }\n\n        const processedProperties = {};\n        processedProperties[properties.type.toLowerCase()] = properties;\n        processedProperties.link = false;\n\n        return processedProperties;\n    }\n\n    getSelectedMedia() {\n        const mediaElm = this.editor.selection.getNode();\n\n        if (!mediaElm) {\n            return null;\n        }\n\n        if (mediaElm.nodeName.toLowerCase() === 'video' || mediaElm.nodeName.toLowerCase() === 'audio') {\n            return mediaElm;\n        }\n\n        if (mediaElm.querySelector('video')) {\n            return mediaElm.querySelector('video');\n        }\n\n        if (mediaElm.querySelector('audio')) {\n            return mediaElm.querySelector('audio');\n        }\n\n        return null;\n    }\n\n    getMediumProperties() {\n        const boolAttr = (elem, attr) => {\n            // As explained in MDL-64175, some OS (like Ubuntu), are removing the value for these attributes.\n            // So in order to check if attr=\"true\", we need to check if the attribute exists and if the value is empty or true.\n            return (elem.hasAttribute(attr) && (elem.getAttribute(attr) || elem.getAttribute(attr) === ''));\n        };\n\n        const tracks = {\n            subtitles: [],\n            captions: [],\n            descriptions: [],\n            chapters: [],\n            metadata: []\n        };\n        const sources = [];\n\n        const medium = this.getSelectedMedia();\n        if (!medium) {\n            return null;\n        }\n        medium.querySelectorAll('track').forEach((track) => {\n            tracks[track.getAttribute('kind')].push({\n                src: track.getAttribute('src'),\n                srclang: track.getAttribute('srclang'),\n                label: track.getAttribute('label'),\n                defaultTrack: boolAttr(track, 'default')\n            });\n        });\n\n        medium.querySelectorAll('source').forEach((source) => {\n            sources.push(source.src);\n        });\n\n        return {\n            type: medium.nodeName.toLowerCase() === 'video' ? Selectors.EMBED.mediaTypes.video : Selectors.EMBED.mediaTypes.audio,\n            sources,\n            poster: medium.getAttribute('poster'),\n            title: medium.getAttribute('title'),\n            width: medium.getAttribute('width'),\n            height: medium.getAttribute('height'),\n            autoplay: boolAttr(medium, 'autoplay'),\n            loop: boolAttr(medium, 'loop'),\n            muted: boolAttr(medium, 'muted'),\n            controls: boolAttr(medium, 'controls'),\n            tracks,\n        };\n    }\n\n    prepareMoodleLang() {\n        const moodleLangs = getMoodleLang(this.editor);\n        const currentLanguage = getCurrentLanguage(this.editor);\n\n        const installed = Object.entries(moodleLangs.installed).map(([lang, code]) => ({\n            lang,\n            code,\n            \"default\": lang === currentLanguage,\n        }));\n\n        const available = Object.entries(moodleLangs.available).map(([lang, code]) => ({\n            lang,\n            code,\n            \"default\": lang === currentLanguage,\n        }));\n\n        return {\n            installed,\n            available,\n        };\n    }\n\n    getMoodleLangObj(subtitleLang) {\n        const {available} = getMoodleLang(this.editor);\n\n        if (available[subtitleLang]) {\n            return {\n                lang: subtitleLang,\n                code: available[subtitleLang],\n            };\n        }\n\n        return null;\n    }\n\n    filePickerCallback(params, element, fpType) {\n        if (params.url !== '') {\n            const tabPane = element.closest('.tab-pane');\n            element.closest(Selectors.EMBED.elements.source).querySelector(Selectors.EMBED.elements.url).value = params.url;\n\n            if (tabPane.id === this.editor.getElement().id + '_' + Selectors.EMBED.mediaTypes.link.toLowerCase()) {\n                tabPane.querySelector(Selectors.EMBED.elements.name).value = params.file;\n            }\n\n            if (fpType === 'subtitle') {\n                // If the file is subtitle file. We need to match the language and label for that file.\n                const subtitleLang = params.file.split('.vtt')[0].split('-').slice(-1)[0];\n                const langObj = this.getMoodleLangObj(subtitleLang);\n                if (langObj) {\n                    const track = element.closest(Selectors.EMBED.elements.track);\n                    track.querySelector(Selectors.EMBED.elements.trackLabel).value = langObj.lang.trim();\n                    track.querySelector(Selectors.EMBED.elements.trackLang).value = langObj.code;\n                }\n            }\n        }\n    }\n\n    addMediaSourceComponent(element, callback) {\n        const sourceElement = element.closest(Selectors.EMBED.elements.source + Selectors.EMBED.elements.mediaSource);\n        const clone = sourceElement.cloneNode(true);\n\n        sourceElement.querySelector('.removecomponent-wrapper').classList.remove('hidden');\n        sourceElement.querySelector('.addcomponent-wrapper').classList.add('hidden');\n\n        sourceElement.parentNode.insertBefore(clone, sourceElement.nextSibling);\n\n        if (callback) {\n            callback(clone);\n        }\n    }\n\n    removeMediaSourceComponent(element) {\n        const sourceElement = element.closest(Selectors.EMBED.elements.source + Selectors.EMBED.elements.mediaSource);\n        sourceElement.remove();\n    }\n\n    addTrackComponent(element, callback) {\n        const trackElement = element.closest(Selectors.EMBED.elements.track);\n        const clone = trackElement.cloneNode(true);\n\n        trackElement.querySelector('.removecomponent-wrapper').classList.remove('hidden');\n        trackElement.querySelector('.addcomponent-wrapper').classList.add('hidden');\n\n        trackElement.parentNode.insertBefore(clone, trackElement.nextSibling);\n\n        if (callback) {\n            callback(clone);\n        }\n    }\n\n    removeTrackComponent(element) {\n        const sourceElement = element.closest(Selectors.EMBED.elements.track);\n        sourceElement.remove();\n    }\n\n    getMediumTypeFromTabPane(tabPane) {\n        return tabPane.getAttribute('data-medium-type');\n    }\n\n    getTrackTypeFromTabPane(tabPane) {\n        return tabPane.getAttribute('data-track-kind');\n    }\n\n    getMediaHTML(form) {\n        const mediumType = this.getMediumTypeFromTabPane(form.querySelector('.root.tab-content > .tab-pane.active'));\n        const tabContent = form.querySelector(Selectors.EMBED.elements[mediumType.toLowerCase() + 'Pane']);\n\n        return this['getMediaHTML' + mediumType[0].toUpperCase() + mediumType.substr(1)](tabContent);\n    }\n\n    getMediaHTMLLink(tab) {\n        const context = {\n            url: tab.querySelector(Selectors.EMBED.elements.url).value,\n            name: tab.querySelector(Selectors.EMBED.elements.name).value || false\n        };\n\n        return context.url ? Templates.renderForPromise('tiny_media/embed_media_link', context) : '';\n    }\n\n    getMediaHTMLVideo(tab) {\n        const context = this.getContextForMediaHTML(tab);\n        context.width = tab.querySelector(Selectors.EMBED.elements.width).value || false;\n        context.height = tab.querySelector(Selectors.EMBED.elements.height).value || false;\n        context.poster = tab.querySelector(\n            `${Selectors.EMBED.elements.posterSource} ${Selectors.EMBED.elements.url}`\n        ).value || false;\n\n        return context.sources.length ? Templates.renderForPromise('tiny_media/embed_media_video', context) : '';\n    }\n\n    getMediaHTMLAudio(tab) {\n        const context = this.getContextForMediaHTML(tab);\n\n        return context.sources.length ? Templates.renderForPromise('tiny_media/embed_media_audio', context) : '';\n    }\n\n    getContextForMediaHTML(tab) {\n        const tracks = Array.from(tab.querySelectorAll(Selectors.EMBED.elements.track)).map(track => ({\n            track: track.querySelector(Selectors.EMBED.elements.trackSource + ' ' + Selectors.EMBED.elements.url).value,\n            kind: this.getTrackTypeFromTabPane(track.closest('.tab-pane')),\n            label: track.querySelector(Selectors.EMBED.elements.trackLabel).value ||\n                track.querySelector(Selectors.EMBED.elements.trackLang).value,\n            srclang: track.querySelector(Selectors.EMBED.elements.trackLang).value,\n            defaultTrack: track.querySelector(Selectors.EMBED.elements.trackDefault).checked ? \"true\" : null\n        })).filter((track) => !!track.track);\n\n        const sources = Array.from(tab.querySelectorAll(Selectors.EMBED.elements.mediaSource + ' '\n            + Selectors.EMBED.elements.url))\n                .filter((source) => !!source.value)\n                .map((source) => source.value);\n\n        return {\n            sources,\n            description: tab.querySelector(Selectors.EMBED.elements.mediaSource + ' '\n                + Selectors.EMBED.elements.url).value || false,\n            tracks,\n            showControls: tab.querySelector(Selectors.EMBED.elements.mediaControl).checked,\n            autoplay: tab.querySelector(Selectors.EMBED.elements.mediaAutoplay).checked,\n            muted: tab.querySelector(Selectors.EMBED.elements.mediaMute).checked,\n            loop: tab.querySelector(Selectors.EMBED.elements.mediaLoop).checked,\n            title: tab.querySelector(Selectors.EMBED.elements.title).value || false\n        };\n    }\n\n    getFilepickerTypeFromElement(element) {\n        if (element.closest(Selectors.EMBED.elements.posterSource)) {\n            return 'image';\n        }\n        if (element.closest(Selectors.EMBED.elements.trackSource)) {\n            return 'subtitle';\n        }\n\n        return 'media';\n    }\n\n    async clickHandler(e) {\n        const element = e.target;\n\n        const mediaBrowser = element.closest(Selectors.EMBED.actions.mediaBrowser);\n        if (mediaBrowser) {\n            e.preventDefault();\n            const fpType = this.getFilepickerTypeFromElement(element);\n            const params = await displayFilepicker(this.editor, fpType);\n            this.filePickerCallback(params, element, fpType);\n        }\n\n        const addComponentSourceAction = element.closest(Selectors.EMBED.elements.mediaSource + ' .addcomponent');\n        if (addComponentSourceAction) {\n            e.preventDefault();\n            this.addMediaSourceComponent(element);\n        }\n\n        const removeComponentSourceAction = element.closest(Selectors.EMBED.elements.mediaSource + ' .removecomponent');\n        if (removeComponentSourceAction) {\n            e.preventDefault();\n            this.removeMediaSourceComponent(element);\n        }\n\n        const addComponentTrackAction = element.closest(Selectors.EMBED.elements.track + ' .addcomponent');\n        if (addComponentTrackAction) {\n            e.preventDefault();\n            this.addTrackComponent(element);\n        }\n\n        const removeComponentTrackAction = element.closest(Selectors.EMBED.elements.track + ' .removecomponent');\n        if (removeComponentTrackAction) {\n            e.preventDefault();\n            this.removeTrackComponent(element);\n        }\n\n        // Only allow one track per tab to be selected as \"default\".\n        const trackDefaultAction = element.closest(Selectors.EMBED.elements.trackDefault);\n        if (trackDefaultAction && trackDefaultAction.checked) {\n            const getKind = (el) => this.getTrackTypeFromTabPane(el.parentElement.closest('.tab-pane'));\n\n            element.parentElement\n                .closest('.root.tab-content')\n                .querySelectorAll(Selectors.EMBED.elements.trackDefault)\n                .forEach((select) => {\n                    if (select !== element && getKind(element) === getKind(select)) {\n                        select.checked = false;\n                    }\n                });\n        }\n    }\n\n    async handleDialogueSubmission(event, modal) {\n        const {html} = await this.getMediaHTML(modal.getRoot()[0]);\n        if (html) {\n            this.editor.insertContent(html);\n        }\n    }\n\n    async registerEventListeners(modal) {\n        await modal.getBody();\n        const $root = modal.getRoot();\n        const root = $root[0];\n        if (this.canShowFilePicker) {\n            root.addEventListener('click', this.clickHandler.bind(this));\n        }\n\n        $root.on(ModalEvents.save, this.handleDialogueSubmission.bind(this));\n        $root.on(ModalEvents.hidden, () => {\n            this.currentModal.destroy();\n        });\n        $root.on(ModalEvents.shown, () => {\n            root.querySelectorAll(Selectors.EMBED.elements.trackLang).forEach((dropdown) => {\n                const defaultVal = dropdown.getAttribute('data-value');\n                if (defaultVal) {\n                    dropdown.value = defaultVal;\n                }\n            });\n        });\n    }\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireDefault","Symbol","iterator","constructor","_regeneratorRuntime","exports","Op","hasOwn","value","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_i","_s","_e","_x","_r","_arr","_n","_d","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","len","arr2","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_defineProperties","target","props","descriptor","_toPropertyKey","_defineProperty","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_templates","ModalFactory","ModalEvents","_embedmodal","_selectors","MediaEmbed","editor","instance","Constructor","_classCallCheck","permissions","getEmbedPermissions","canShowFilePicker","filepicker","protoProps","staticProps","_registerEventListeners","_handleDialogueSubmission","_clickHandler","_displayDialogue","_getTemplateContext","_getHelpStrings","_callee","_yield$getStrings","_yield$getStrings2","addSource","tracks","subtitles","captions","descriptions","chapters","metadata","_context","helpStrings","getStrings","map","component","data","languages","helpIcons","_context2","prepareMoodleLang","t0","t1","getHelpStrings","t2","t3","entries","_ref","_ref2","text","toLowerCase","assign","elementid","getElement","id","showfilepicker","langsinstalled","installed","langsavailable","available","link","video","audio","_callee2","_x2","_callee3","modal","_context3","getCurrentEmbedData","Modal","TYPE","getString","get_string","getTemplateContext","t4","title","templateContext","removeOnClose","large","currentModal","registerEventListeners","show","properties","getMediumProperties","processedProperties","mediaElm","selection","getNode","nodeName","querySelector","boolAttr","elem","attr","hasAttribute","getAttribute","sources","medium","getSelectedMedia","querySelectorAll","track","src","srclang","label","defaultTrack","source","Selectors","EMBED","mediaTypes","poster","width","height","autoplay","loop","muted","controls","moodleLangs","getMoodleLang","currentLanguage","getCurrentLanguage","_ref3","_ref4","lang","code","_ref5","_ref6","subtitleLang","params","element","fpType","url","tabPane","closest","elements","file","split","langObj","getMoodleLangObj","trackLabel","trim","trackLang","callback","sourceElement","mediaSource","clone","cloneNode","classList","remove","add","parentNode","insertBefore","nextSibling","trackElement","form","mediumType","getMediumTypeFromTabPane","tabContent","toUpperCase","substr","tab","Templates","renderForPromise","getContextForMediaHTML","concat","posterSource","_this","trackSource","kind","getTrackTypeFromTabPane","trackDefault","checked","filter","description","showControls","mediaControl","mediaAutoplay","mediaMute","mediaLoop","e","trackDefaultAction","getKind","_this2","_context4","actions","mediaBrowser","preventDefault","getFilepickerTypeFromElement","displayFilepicker","filePickerCallback","addMediaSourceComponent","removeMediaSourceComponent","addTrackComponent","removeTrackComponent","el","parentElement","select","_callee4","_x3","_callee5","event","_yield$this$getMediaH","html","_context5","getMediaHTML","getRoot","insertContent","_x4","_x5","$root","root","_this3","_context6","getBody","addEventListener","clickHandler","bind","on","save","handleDialogueSubmission","hidden","destroy","shown","dropdown","defaultVal","_callee6","_x6","_exports"],"mappings":"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"}