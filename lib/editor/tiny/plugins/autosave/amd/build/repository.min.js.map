{"version":3,"file":"repository.min.js","sources":["../src/repository.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Repository helper for the Moodle Tiny Autosave plugin.\n *\n * @module      tiny_autosave/repository\n * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {call} from 'core/ajax';\nimport * as config from 'core/config';\nimport * as Options from './options';\nimport Pending from 'core/pending';\nimport {ensureEditorIsValid} from 'editor_tiny/utils';\n\nconst fetchOne = (methodname, args) => call([{\n    methodname,\n    args,\n}])[0];\n\n/**\n * Resume an Autosave session.\n *\n * @param {TinyMCE} editor The TinyMCE editor instance\n * @returns {Promise<AutosaveSession>} The Autosave session\n */\nexport const resumeAutosaveSession = (editor) => {\n    if (!ensureEditorIsValid(editor)) {\n        return Promise.reject('Invalid editor');\n    }\n    const pendingPromise = new Pending('tiny_autosave/repository:resumeAutosaveSession');\n    return fetchOne('tiny_autosave_resume_session', {\n        contextid: Options.getContextId(editor),\n        pagehash: Options.getPageHash(editor),\n        pageinstance: Options.getPageInstance(editor),\n        elementid: editor.targetElm.id,\n        draftid: Options.getDraftItemId(editor),\n    })\n    .then((result) => {\n        pendingPromise.resolve();\n        return result;\n    });\n};\n\n/**\n * Update the content of the Autosave session.\n *\n * @param {TinyMCE} editor The TinyMCE editor instance\n * @returns {Promise<AutosaveSession>} The Autosave session\n */\nexport const updateAutosaveSession = (editor) => {\n    if (!ensureEditorIsValid(editor)) {\n        return Promise.reject('Invalid editor');\n    }\n    if (Options.hasAutosaveHasReset(editor)) {\n        return Promise.reject('Skipping store of autosave content - content has been reset');\n    }\n\n    const pendingPromise = new Pending('tiny_autosave/repository:updateAutosaveSession');\n\n    return fetchOne('tiny_autosave_update_session', {\n        contextid: Options.getContextId(editor),\n        pagehash: Options.getPageHash(editor),\n        pageinstance: Options.getPageInstance(editor),\n        elementid: editor.targetElm.id,\n        drafttext: editor.getContent(),\n    })\n    .then((result) => {\n        pendingPromise.resolve();\n        return result;\n    });\n};\n\n/**\n * Remove the Autosave session.\n *\n * @param {TinyMCE} editor The TinyMCE editor instance\n */\nexport const removeAutosaveSession = (editor) => {\n    if (!ensureEditorIsValid(editor)) {\n        throw new Error('Invalid editor');\n    }\n    Options.setAutosaveHasReset(editor);\n\n    // Please note that we must use a Beacon send here.\n    // The XHR is not guaranteed because it will be aborted on page transition.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Beacon_API\n    // Note: Moodle does not currently have a sendBeacon API endpoint.\n    const requestUrl = new URL(`${config.wwwroot}/lib/ajax/service.php`);\n    requestUrl.searchParams.set('sesskey', config.sesskey);\n\n    const args = {\n        contextid: Options.getContextId(editor),\n        pagehash: Options.getPageHash(editor),\n        pageinstance: Options.getPageInstance(editor),\n        elementid: editor.targetElm.id,\n    };\n    navigator.sendBeacon(requestUrl, JSON.stringify([{\n        index: 0,\n        methodname: 'tiny_autosave_reset_session',\n        args,\n    }]));\n};\n"],"names":["obj","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","config","Options","_pending","fetchOne","methodname","args","_exports","resumeAutosaveSession","editor","ensureEditorIsValid","Promise","reject","pendingPromise","Pending","contextid","getContextId","pagehash","getPageHash","pageinstance","getPageInstance","elementid","targetElm","id","draftid","getDraftItemId","then","result","resolve","updateAutosaveSession","hasAutosaveHasReset","drafttext","getContent","removeAutosaveSession","Error","setAutosaveHasReset","requestUrl","URL","wwwroot","searchParams","sesskey","navigator","sendBeacon","JSON","stringify","index"],"mappings":"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"}