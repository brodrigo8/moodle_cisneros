define("tiny_equation/equation",["exports","tiny_equation/selectors"],(function(_exports,_selectors){var obj;function _toConsumableArray(arr){return function(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.setEquation=_exports.getSourceEquation=_exports.getSelectedEquation=_exports.getCurrentEquationData=void 0,_selectors=(obj=_selectors)&&obj.__esModule?obj:{default:obj};var sourceEquation=null,getSourceEquation=function(){return sourceEquation};_exports.getSourceEquation=getSourceEquation;var getSelectedEquation=function(editor){var currentSelection=editor.selection.getSel();if(!currentSelection)return!1;var textSelection=editor.selection.getNode().textContent,currentCaretPos=currentSelection.focusOffset,returnValue=!1;return _selectors.default.equationPatterns.forEach((function(pattern){var regexPattern=new RegExp(pattern.source,"g");_toConsumableArray(textSelection.matchAll(regexPattern)).forEach((function(matches){var match=matches[0],startIndex=0,startOuter=textSelection.indexOf(match,startIndex),endOuter=startOuter+match.length,innerMatch=match.match(pattern);if(innerMatch&&innerMatch.length){var startInner=textSelection.indexOf(innerMatch[1],startOuter),endInner=startInner+innerMatch[1].length;if(currentCaretPos>=startOuter&&currentCaretPos<=endOuter)return returnValue=innerMatch[1],void(sourceEquation={startInnerPosition:startInner,endInnerPosition:endInner,innerMatch:innerMatch})}startIndex=endOuter}))})),!1!==returnValue?returnValue=returnValue.trim():sourceEquation=null,returnValue};_exports.getSelectedEquation=getSelectedEquation;_exports.getCurrentEquationData=function(editor){var properties={},equation=getSelectedEquation(editor);return equation&&(properties.equation=equation),properties};_exports.setEquation=function(currentForm,editor){var input=currentForm.querySelector(_selectors.default.elements.equationTextArea),sourceEquation=getSourceEquation(),value=input.value;if(""!==value)if(sourceEquation){var selectedNode=editor.selection.getNode(),text=selectedNode.textContent;value=" "+value+" ",selectedNode.textContent=text.slice(0,sourceEquation.startInnerPosition)+value+text.slice(sourceEquation.endInnerPosition)}else value=_selectors.default.delimiters.start+" "+value+" "+_selectors.default.delimiters.end,editor.insertContent(value)}}));

//# sourceMappingURL=equation.min.js.map