{"version":3,"file":"image.min.js","sources":["../src/image.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Media plugin Image class for Moodle.\n *\n * @module      tiny_media/image\n * @copyright   2022 Huong Nguyen <huongnv13@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport {get_string as getString, get_strings as getStrings} from 'core/str';\nimport * as ModalFactory from 'core/modal_factory';\nimport {displayFilepicker} from 'editor_tiny/utils';\nimport Selectors from './selectors';\nimport Modal from './imagemodal';\nimport {getImagePermissions} from './options';\nimport {component} from \"./common\";\n\nexport const MediaImage = class {\n\n    DEFAULTS = {\n        WIDTH: 160,\n        HEIGHT: 160,\n    };\n\n    form = null;\n    rawImageDimensions = null;\n    canShowFilePicker = false;\n    editor = null;\n    currentModal = null;\n    selectedImage = null;\n    imageAlignment = null;\n\n    constructor(editor) {\n        const permissions = getImagePermissions(editor);\n        this.canShowFilePicker = permissions.filepicker;\n        this.editor = editor;\n    }\n\n    async displayDialogue() {\n        // Reset the image dimensions.\n        this.rawImageDimensions = null;\n\n        const currentImageData = await this.getCurrentImageData();\n        const modal = await ModalFactory.create({\n            type: Modal.TYPE,\n            title: getString('imageproperties', 'tiny_media'),\n            templateContext: await this.getTemplateContext(currentImageData),\n            removeOnClose: true,\n            large: true,\n        });\n\n        this.currentModal = modal;\n        if (currentImageData && currentImageData.src) {\n            this.loadPreviewImage(currentImageData.src);\n        }\n\n        await this.registerEventListeners(modal);\n        modal.show();\n    }\n\n    async getAlignmentTitles() {\n        if (!this.alignmentTitles) {\n            const [top, middle, bottom] = await getStrings([\n                'alignment_top',\n                'alignment_middle',\n                'alignment_bottom',\n            ].map((key) => ({key, component})));\n\n            this.alignmentTitles = {\n                top,\n                middle,\n                bottom,\n            };\n        }\n\n        return this.alignmentTitles;\n    }\n\n    async getImageAlignment(selected = '') {\n        const titles = await this.getAlignmentTitles();\n        const alignments = [\n            {\n                text: titles.top,\n                value: 'align-top',\n            },\n            {\n                text: titles.middle,\n                value: 'align-middle',\n            },\n            {\n                text: titles.bottom,\n                value: 'align-bottom',\n            },\n        ];\n\n        if (selected) {\n            alignments.forEach((alignment, index, array) => {\n                if (alignment.value === selected) {\n                    array[index].selected = true;\n                }\n            });\n        }\n\n        return alignments;\n    }\n\n    async getTemplateContext(data) {\n        return {\n            elementid: this.editor.id,\n            showfilepicker: this.canShowFilePicker,\n            alignoptions: await this.getImageAlignment(),\n            ...data,\n        };\n    }\n\n    async getCurrentImageData() {\n        const selectedImageProperties = this.getSelectedImageProperties();\n        if (!selectedImageProperties) {\n            return {};\n        }\n\n        const properties = {...selectedImageProperties};\n        if (properties.align) {\n            properties.alignoptions = await this.getImageAlignment(properties.align);\n        }\n\n        if (properties.src) {\n            properties.haspreview = true;\n        }\n\n        if (!properties.alt) {\n            properties.presentation = true;\n        }\n\n        return properties;\n    }\n\n    filePickerCallback(params, self) {\n        if (params.url) {\n            const input = self.form.querySelector(Selectors.IMAGE.elements.url);\n            input.value = params.url;\n\n            // Auto set the width and height.\n            self.form.querySelector(Selectors.IMAGE.elements.width).value = '';\n            self.form.querySelector(Selectors.IMAGE.elements.height).value = '';\n\n            // Load the preview image.\n            self.loadPreviewImage(params.url);\n        }\n    }\n\n    storeImageDimensions(image) {\n        // Store dimensions of the raw image, falling back to defaults for images without dimensions (e.g. SVG).\n        this.rawImageDimensions = {\n            width: image.width || this.DEFAULTS.WIDTH,\n            height: image.height || this.DEFAULTS.HEIGHT,\n        };\n\n        const getCurrentWidth = (element) => {\n            if (element.value === '') {\n                element.value = this.rawImageDimensions.width;\n            }\n            return element.value;\n        };\n        const getCurrentHeight = (element) => {\n            if (element.value === '') {\n                element.value = this.rawImageDimensions.height;\n            }\n            return element.value;\n        };\n\n        const widthInput = this.form.querySelector(Selectors.IMAGE.elements.width);\n        const currentWidth = getCurrentWidth(widthInput);\n\n        const heightInput = this.form.querySelector(Selectors.IMAGE.elements.height);\n        const currentHeight = getCurrentHeight(heightInput);\n\n        const preview = this.form.querySelector(Selectors.IMAGE.elements.preview);\n        preview.setAttribute('src', image.src);\n        preview.style.display = 'inline';\n\n        const constrain = this.form.querySelector(Selectors.IMAGE.elements.constrain);\n        if (this.isPercentageValue(currentWidth) && this.isPercentageValue(currentHeight)) {\n            constrain.checked = currentWidth === currentHeight;\n        } else if (image.width === 0 || image.height === 0) {\n            // If we don't have both dimensions of the image, we can't auto-size it, so disable control.\n            constrain.disabled = 'disabled';\n        } else {\n            // This is the same as comparing to 3 decimal places.\n            const widthRatio = Math.round(1000 * parseInt(currentWidth, 10) / image.width);\n            const heightRatio = Math.round(1000 * parseInt(currentHeight, 10) / image.height);\n            constrain.checked = widthRatio === heightRatio;\n        }\n    }\n\n    loadPreviewImage(url) {\n        const image = new Image();\n\n        image.addEventListener('error', () => {\n            const preview = this.form.querySelector(Selectors.IMAGE.elements.preview);\n            preview.style.display = 'none';\n        });\n        image.addEventListener('load', () => {\n            this.storeImageDimensions(image);\n            this.autoAdjustSize();\n        });\n\n        image.src = url;\n    }\n\n    urlChanged() {\n        const input = this.form.querySelector(Selectors.IMAGE.elements.url);\n\n        if (input.value) {\n            // Load the preview image.\n            this.loadPreviewImage(input.value);\n        }\n    }\n\n    hasErrorUrlField() {\n        const url = this.form.querySelector(Selectors.IMAGE.elements.url).value;\n        const urlError = url === '';\n        this.toggleVisibility(Selectors.IMAGE.elements.urlWarning, urlError);\n        this.toggleAriaInvalid([Selectors.IMAGE.elements.url], urlError);\n\n        return urlError;\n    }\n\n    hasErrorAltField() {\n        const alt = this.form.querySelector(Selectors.IMAGE.elements.alt).value;\n        const presentation = this.form.querySelector(Selectors.IMAGE.elements.presentation).checked;\n        const imageAltError = alt === '' && !presentation;\n        this.toggleVisibility(Selectors.IMAGE.elements.altWarning, imageAltError);\n        this.toggleAriaInvalid([Selectors.IMAGE.elements.alt, Selectors.IMAGE.elements.presentation], imageAltError);\n\n        return imageAltError;\n    }\n\n    toggleVisibility(selector, predicate) {\n        const elements = this.form.querySelectorAll(selector);\n        elements.forEach((element) => {\n            element.style.display = predicate ? 'block' : 'none';\n        });\n    }\n\n    toggleAriaInvalid(selectors, predicate) {\n        selectors.forEach((selector) => {\n            const elements = this.form.querySelectorAll(selector);\n            elements.forEach((element) => element.setAttribute('aria-invalid', predicate));\n        });\n    }\n\n    getAlignmentClass(alignment) {\n        return alignment;\n    }\n\n    updateWarning() {\n        const urlError = this.hasErrorUrlField();\n        const imageAltError = this.hasErrorAltField();\n\n        return urlError || imageAltError;\n    }\n\n    getImageContext() {\n        // Check if there are any accessibility issues.\n        if (this.updateWarning()) {\n            return null;\n        }\n\n        const classList = [];\n\n        const constrain = this.form.querySelector(Selectors.IMAGE.elements.constrain).value;\n        if (constrain) {\n            classList.push(Selectors.IMAGE.styles.responsive);\n        }\n\n        // Add the alignment class for the image.\n        const alignment = this.getAlignmentClass(this.form.querySelector(Selectors.IMAGE.elements.alignment).value);\n        classList.push(alignment);\n\n        return {\n            url: this.form.querySelector(Selectors.IMAGE.elements.url).value,\n            alt: this.form.querySelector(Selectors.IMAGE.elements.alt).value,\n            width: this.form.querySelector(Selectors.IMAGE.elements.width).value,\n            height: this.form.querySelector(Selectors.IMAGE.elements.height).value,\n            presentation: this.form.querySelector(Selectors.IMAGE.elements.presentation).checked,\n            customStyle: this.form.querySelector(Selectors.IMAGE.elements.customStyle).value,\n            classlist: classList.join(' '),\n        };\n    }\n\n    setImage() {\n        const url = this.form.querySelector(Selectors.IMAGE.elements.url).value;\n        if (url === '') {\n            return;\n        }\n\n        // Check if there are any accessibility issues.\n        if (this.updateWarning()) {\n            return;\n        }\n\n        // Check for invalid width or height.\n        const width = this.form.querySelector(Selectors.IMAGE.elements.width).value;\n        if (!this.isPercentageValue(width) && isNaN(parseInt(width, 10))) {\n            this.form.querySelector(Selectors.IMAGE.elements.width).focus();\n            return;\n        }\n\n        const height = this.form.querySelector(Selectors.IMAGE.elements.height).value;\n        if (!this.isPercentageValue(height) && isNaN(parseInt(height, 10))) {\n            this.form.querySelector(Selectors.IMAGE.elements.height).focus();\n            return;\n        }\n\n        Templates.render('tiny_media/image', this.getImageContext())\n        .then((html) => {\n            this.editor.insertContent(html);\n            this.currentModal.destroy();\n\n            return html;\n        })\n        .catch();\n    }\n\n    handleKeyupCharacterCount() {\n        const alt = this.form.querySelector(Selectors.IMAGE.elements.alt).value;\n        const current = this.form.querySelector('#currentcount');\n        current.innerHTML = alt.length;\n    }\n\n    autoAdjustSize(forceHeight = false) {\n        // If we do not know the image size, do not do anything.\n        if (!this.rawImageDimensions) {\n            return;\n        }\n\n        const widthField = this.form.querySelector(Selectors.IMAGE.elements.width);\n        const heightField = this.form.querySelector(Selectors.IMAGE.elements.height);\n        const normalizeFieldData = (fieldData) => {\n            fieldData.isPercentageValue = !!this.isPercentageValue(fieldData.field.value);\n            if (fieldData.isPercentageValue) {\n                fieldData.percentValue = parseInt(fieldData.field.value, 10);\n                fieldData.pixelSize = this.rawImageDimensions[fieldData.type] / 100 * fieldData.percentValue;\n            } else {\n                fieldData.pixelSize = parseInt(fieldData.field.value, 10);\n                fieldData.percentValue = fieldData.pixelSize / this.rawImageDimensions[fieldData.type] * 100;\n            }\n\n            return fieldData;\n        };\n\n        const getKeyField = () => {\n            const getValue = () => {\n                if (forceHeight) {\n                    return {\n                        field: heightField,\n                        type: 'height',\n                    };\n                } else {\n                    return {\n                        field: widthField,\n                        type: 'width',\n                    };\n                }\n            };\n\n            const currentValue = getValue();\n            if (currentValue.field.value === '') {\n                currentValue.field.value = this.rawImageDimensions[currentValue.type];\n            }\n\n            return normalizeFieldData(currentValue);\n        };\n\n        const getRelativeField = () => {\n            if (forceHeight) {\n                return normalizeFieldData({\n                    field: widthField,\n                    type: 'width',\n                });\n            } else {\n                return normalizeFieldData({\n                    field: heightField,\n                    type: 'height',\n                });\n            }\n        };\n\n\n        const setImageDimensions = (image, keyField, relativeField, forceHeight = false) => {\n            const getStyleValue = (field) => field.isPercentageValue ? `${field.percentValue}%` : `${field.pixelSize}px`;\n\n            // If the values are constrained, then only update the width.\n            if (forceHeight) {\n                if (keyField.type === 'width') {\n                    image.style.width = getStyleValue(keyField);\n                } else {\n                    image.style.width = getStyleValue(relativeField);\n                }\n            } else {\n                image.style[keyField.type] = getStyleValue(keyField);\n                image.style[relativeField.type] = getStyleValue(relativeField);\n            }\n        };\n\n        const imagePreview = this.form.querySelector(Selectors.IMAGE.elements.preview);\n        // Clear the existing preview sizes.\n        imagePreview.style.width = '';\n        imagePreview.style.height = '';\n\n        // Now update with the new values.\n        const constrainField = this.form.querySelector(Selectors.IMAGE.elements.constrain);\n        const keyField = getKeyField();\n        const relativeField = getRelativeField();\n        if (constrainField.checked) {\n            // We are keeping the image in proportion.\n            // Calculate the size for the relative field.\n            if (keyField.isPercentageValue) {\n                // In proportion, so the percentages are the same.\n                relativeField.field.value = keyField.field.value;\n                relativeField.percentValue = keyField.percentValue;\n            } else {\n                relativeField.pixelSize = Math.round(\n                    keyField.pixelSize / this.rawImageDimensions[keyField.type] * this.rawImageDimensions[relativeField.type]\n                );\n                relativeField.field.value = relativeField.pixelSize;\n            }\n        }\n        setImageDimensions(imagePreview, keyField, relativeField, !!constrainField.checked);\n    }\n\n    getSelectedImageProperties() {\n        const image = this.getSelectedImage();\n        if (!image) {\n            this.selectedImage = null;\n            return null;\n        }\n\n        const properties = {\n            src: null,\n            alt: null,\n            width: null,\n            height: null,\n            align: '',\n            presentation: false,\n        };\n\n        const getImageHeight = (image) => {\n            if (!this.isPercentageValue(String(image.height))) {\n                return parseInt(image.height, 10);\n            }\n\n            return image.height;\n        };\n\n        const getImageWidth = (image) => {\n            if (!this.isPercentageValue(String(image.width))) {\n                return parseInt(image.width, 10);\n            }\n\n            return image.width;\n        };\n\n        // Get the current selection.\n        this.removeLegacyAlignment(image);\n        this.selectedImage = image;\n\n        properties.customStyle = image.style.cssText;\n\n        const width = getImageWidth(image);\n        if (width !== 0) {\n            properties.width = width;\n        }\n\n        const height = getImageHeight(image);\n        if (height !== 0) {\n            properties.height = height;\n        }\n\n        const alignment = this.getAlignmentProperties(image, properties);\n        if (alignment) {\n            properties.align = alignment.value;\n        }\n\n        properties.src = image.getAttribute('src');\n        properties.alt = image.getAttribute('alt') || '';\n        properties.presentation = (image.getAttribute('role') === 'presentation');\n\n        return properties;\n    }\n\n    removeLegacyAlignment(imageNode) {\n        if (!imageNode.style.margin) {\n            // There is no margin therefore this cannot match any known alignments.\n            return imageNode;\n        }\n\n        Selectors.IMAGE.alignments.some(alignment => {\n            if (imageNode.style[alignment.name] !== alignment.value) {\n                // The name/value do not match. Skip.\n                return false;\n            }\n            const normalisedNode = document.createElement('div');\n            normalisedNode.style.margin = alignment.margin;\n            if (imageNode.style.margin !== normalisedNode.style.margin) {\n                // The margin does not match.\n                return false;\n            }\n\n            imageNode.classList.add(this.getAlignmentClass(alignment.value));\n            imageNode.style[alignment.name] = null;\n            imageNode.style.margin = null;\n\n            return true;\n        });\n\n        return imageNode;\n    }\n\n    getAlignmentProperties(image) {\n        const currentAlignment = Selectors.IMAGE.alignments.find((alignment) => {\n            if (image.classList.contains(this.getAlignmentClass(alignment.value))) {\n                return true;\n            }\n\n            if (alignment.legacyValues) {\n                return alignment.legacyValues.some((legacyValue) => image.classList.contains(legacyValue));\n            }\n\n            return false;\n        });\n        if (currentAlignment) {\n            return currentAlignment;\n        }\n\n        return Selectors.IMAGE.alignments.find((alignment) => alignment.isDefault);\n    }\n\n    getSelectedImage() {\n        const imgElm = this.editor.selection.getNode();\n        const figureElm = this.editor.dom.getParent(imgElm, 'figure.image');\n        if (figureElm) {\n            return this.editor.dom.select('img', figureElm)[0];\n        }\n\n        if (imgElm && (imgElm.nodeName.toUpperCase() !== 'IMG' || this.isPlaceholderImage(imgElm))) {\n            return null;\n        }\n        return imgElm;\n    }\n\n    isPlaceholderImage(imgElm) {\n        if (imgElm.nodeName.toUpperCase() !== 'IMG') {\n            return false;\n        }\n\n        return (imgElm.hasAttribute('data-mce-object') || imgElm.hasAttribute('data-mce-placeholder'));\n    }\n\n    isPercentageValue(value) {\n        return value.match(/\\d+%/);\n    }\n\n    async registerEventListeners(modal) {\n        await modal.getBody();\n        const root = modal.getRoot()[0];\n\n        this.form = root.querySelector(Selectors.IMAGE.elements.form);\n        root.addEventListener('click', (e) => {\n            const submitAction = e.target.closest(Selectors.IMAGE.actions.submit);\n            const imageBrowserAction = e.target.closest(Selectors.IMAGE.actions.imageBrowser);\n            if (submitAction) {\n                e.preventDefault();\n                this.setImage();\n            }\n            if (imageBrowserAction && this.canShowFilePicker) {\n                e.preventDefault();\n                displayFilepicker(this.editor, 'image').then((params) => {\n                    const self = this;\n                    this.filePickerCallback(params, self);\n\n                    return;\n                }).catch();\n            }\n        });\n\n        root.addEventListener('change', (e) => {\n            const urlEle = e.target.closest(Selectors.IMAGE.elements.url);\n            if (urlEle) {\n                this.hasErrorUrlField();\n            }\n\n            const presentationEle = e.target.closest(Selectors.IMAGE.elements.presentation);\n            if (presentationEle) {\n                this.hasErrorAltField();\n            }\n\n            const constrainEle = e.target.closest(Selectors.IMAGE.elements.constrain);\n            if (constrainEle) {\n                this.autoAdjustSize(true);\n            }\n        });\n\n        root.addEventListener('blur', (e) => {\n            if (e.target.nodeType === Node.ELEMENT_NODE) {\n                const urlEle = e.target.closest(Selectors.IMAGE.elements.url);\n                if (urlEle) {\n                    this.urlChanged();\n                }\n\n                const altEle = e.target.closest(Selectors.IMAGE.elements.alt);\n                if (altEle) {\n                    this.hasErrorAltField();\n                }\n\n                const widthEle = e.target.closest(Selectors.IMAGE.elements.width);\n                if (widthEle) {\n                    this.autoAdjustSize();\n                }\n\n                const heightEle = e.target.closest(Selectors.IMAGE.elements.height);\n                if (heightEle) {\n                    this.autoAdjustSize(true);\n                }\n            }\n        }, true);\n\n        // Character count.\n        root.addEventListener('keyup', (e) => {\n            const altEle = e.target.closest(Selectors.IMAGE.elements.alt);\n            if (altEle) {\n                this.handleKeyupCharacterCount();\n            }\n        });\n    }\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireDefault","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_i","_s","_e","_x","_r","_arr","_n","_d","call","next","done","value","err","return","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","toString","slice","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","undefined","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","_defineProperties","props","descriptor","_toPropertyKey","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_templates","ModalFactory","cache","has","get","newObj","hasPropertyDescriptor","set","_interopRequireWildcard","_selectors","_imagemodal","MediaImage","editor","instance","Constructor","_classCallCheck","WIDTH","HEIGHT","permissions","getImagePermissions","canShowFilePicker","filepicker","protoProps","staticProps","_registerEventListeners","_getCurrentImageData","_getTemplateContext","_getImageAlignment","_getAlignmentTitles","_displayDialogue","_callee","currentImageData","modal","_context","rawImageDimensions","getCurrentImageData","t0","Modal","TYPE","t2","getString","get_string","getTemplateContext","t3","t4","t1","title","templateContext","removeOnClose","large","currentModal","src","loadPreviewImage","registerEventListeners","show","_callee2","_yield$getStrings","_yield$getStrings2","top","middle","bottom","_context2","alignmentTitles","getStrings","map","component","_callee3","selected","titles","alignments","_args3","_context3","getAlignmentTitles","text","alignment","index","array","data","_context4","id","getImageAlignment","elementid","showfilepicker","alignoptions","t5","_callee4","_x2","_callee5","selectedImageProperties","properties","_context5","getSelectedImageProperties","align","haspreview","alt","presentation","params","url","form","querySelector","Selectors","IMAGE","elements","width","height","image","_this","DEFAULTS","element","widthInput","currentWidth","currentHeight","getCurrentHeight","preview","setAttribute","style","display","constrain","isPercentageValue","checked","disabled","widthRatio","Math","round","parseInt","heightRatio","_this2","Image","addEventListener","storeImageDimensions","autoAdjustSize","urlError","toggleVisibility","urlWarning","toggleAriaInvalid","imageAltError","altWarning","selector","predicate","querySelectorAll","selectors","_this3","hasErrorUrlField","hasErrorAltField","updateWarning","classList","styles","responsive","getAlignmentClass","customStyle","classlist","join","_this4","Templates","render","getImageContext","html","insertContent","destroy","focus","innerHTML","_this5","forceHeight","widthField","heightField","normalizeFieldData","fieldData","field","percentValue","pixelSize","getKeyField","currentValue","getRelativeField","setImageDimensions","keyField","relativeField","getStyleValue","imagePreview","constrainField","_this6","getSelectedImage","selectedImage","removeLegacyAlignment","cssText","getImageWidth","getImageHeight","getAlignmentProperties","getAttribute","imageNode","_this7","margin","some","normalisedNode","document","createElement","add","_this8","currentAlignment","find","contains","legacyValues","legacyValue","isDefault","imgElm","selection","getNode","figureElm","dom","getParent","select","nodeName","toUpperCase","isPlaceholderImage","hasAttribute","match","root","_this9","_context6","getBody","getRoot","e","submitAction","closest","actions","submit","imageBrowserAction","imageBrowser","preventDefault","setImage","displayFilepicker","filePickerCallback","nodeType","Node","ELEMENT_NODE","urlChanged","handleKeyupCharacterCount","_callee6","_x3","_exports"],"mappings":"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"}