{"version":3,"file":"content.min.js","sources":["../../src/local/content.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course index main component.\n *\n * @module     core_courseformat/local/content\n * @class      core_courseformat/local/content\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport {getCurrentCourseEditor} from 'core_courseformat/courseeditor';\nimport Config from 'core/config';\nimport inplaceeditable from 'core/inplace_editable';\nimport Section from 'core_courseformat/local/content/section';\nimport CmItem from 'core_courseformat/local/content/section/cmitem';\nimport Fragment from 'core/fragment';\nimport Templates from 'core/templates';\nimport DispatchActions from 'core_courseformat/local/content/actions';\nimport * as CourseEvents from 'core_course/events';\n// The jQuery module is only used for interacting with Boostrap 4. It can we removed when MDL-71979 is integrated.\nimport jQuery from 'jquery';\nimport Pending from 'core/pending';\n\nexport default class Component extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     *\n     * @param {Object} descriptor the component descriptor\n     */\n    create(descriptor) {\n        // Optional component name for debugging.\n        this.name = 'course_format';\n        // Default query selectors.\n        this.selectors = {\n            SECTION: `[data-for='section']`,\n            SECTION_ITEM: `[data-for='section_title']`,\n            SECTION_CMLIST: `[data-for='cmlist']`,\n            COURSE_SECTIONLIST: `[data-for='course_sectionlist']`,\n            CM: `[data-for='cmitem']`,\n            PAGE: `#page`,\n            TOGGLER: `[data-action=\"togglecoursecontentsection\"]`,\n            COLLAPSE: `[data-toggle=\"collapse\"]`,\n            TOGGLEALL: `[data-toggle=\"toggleall\"]`,\n            // Formats can override the activity tag but a default one is needed to create new elements.\n            ACTIVITYTAG: 'li',\n            SECTIONTAG: 'li',\n        };\n        // Default classes to toggle on refresh.\n        this.classes = {\n            COLLAPSED: `collapsed`,\n            // Course content classes.\n            ACTIVITY: `activity`,\n            STATEDREADY: `stateready`,\n            SECTION: `section`,\n        };\n        // Array to save dettached elements during element resorting.\n        this.dettachedCms = {};\n        this.dettachedSections = {};\n        // Index of sections and cms components.\n        this.sections = {};\n        this.cms = {};\n        // The page section return.\n        this.sectionReturn = descriptor.sectionReturn ?? 0;\n    }\n\n    /**\n     * Static method to create a component instance form the mustahce template.\n     *\n     * @param {string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @param {number} sectionReturn the content section return\n     * @return {Component}\n     */\n    static init(target, selectors, sectionReturn) {\n        return new Component({\n            element: document.getElementById(target),\n            reactive: getCurrentCourseEditor(),\n            selectors,\n            sectionReturn,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {Object} state the state data\n     */\n    stateReady(state) {\n        this._indexContents();\n        // Activate section togglers.\n        this.addEventListener(this.element, 'click', this._sectionTogglers);\n\n        // Collapse/Expand all sections button.\n        const toogleAll = this.getElement(this.selectors.TOGGLEALL);\n        if (toogleAll) {\n\n            // Ensure collapse menu button adds aria-controls attribute referring to each collapsible element.\n            const collapseElements = this.getElements(this.selectors.COLLAPSE);\n            const collapseElementIds = [...collapseElements].map(element => element.id);\n            toogleAll.setAttribute('aria-controls', collapseElementIds.join(' '));\n\n            this.addEventListener(toogleAll, 'click', this._allSectionToggler);\n            this.addEventListener(toogleAll, 'keydown', e => {\n                // Collapse/expand all sections when Space key is pressed on the toggle button.\n                if (e.key === ' ') {\n                    this._allSectionToggler(e);\n                }\n            });\n            this._refreshAllSectionsToggler(state);\n        }\n\n        if (this.reactive.supportComponents) {\n            // Actions are only available in edit mode.\n            if (this.reactive.isEditing) {\n                new DispatchActions(this);\n            }\n\n            // Mark content as state ready.\n            this.element.classList.add(this.classes.STATEDREADY);\n        }\n\n        // Capture completion events.\n        this.addEventListener(\n            this.element,\n            CourseEvents.manualCompletionToggled,\n            this._completionHandler\n        );\n\n        // Capture page scroll to update page item.\n        this.addEventListener(\n            document.querySelector(this.selectors.PAGE),\n            \"scroll\",\n            this._scrollHandler\n        );\n    }\n\n    /**\n     * Setup sections toggler.\n     *\n     * Toggler click is delegated to the main course content element because new sections can\n     * appear at any moment and this way we prevent accidental double bindings.\n     *\n     * @param {Event} event the triggered event\n     */\n    _sectionTogglers(event) {\n        const sectionlink = event.target.closest(this.selectors.TOGGLER);\n        const isChevron = event.target.closest(this.selectors.COLLAPSE);\n\n        if (sectionlink || isChevron) {\n\n            const section = event.target.closest(this.selectors.SECTION);\n            const toggler = section.querySelector(this.selectors.COLLAPSE);\n            const isCollapsed = toggler?.classList.contains(this.classes.COLLAPSED) ?? false;\n\n            if (isChevron || isCollapsed) {\n                // Update the state.\n                const sectionId = section.getAttribute('data-id');\n                this.reactive.dispatch(\n                    'sectionContentCollapsed',\n                    [sectionId],\n                    !isCollapsed\n                );\n            }\n        }\n    }\n\n    /**\n     * Handle the collapse/expand all sections button.\n     *\n     * Toggler click is delegated to the main course content element because new sections can\n     * appear at any moment and this way we prevent accidental double bindings.\n     *\n     * @param {Event} event the triggered event\n     */\n    _allSectionToggler(event) {\n        event.preventDefault();\n\n        const target = event.target.closest(this.selectors.TOGGLEALL);\n        const isAllCollapsed = target.classList.contains(this.classes.COLLAPSED);\n\n        const course = this.reactive.get('course');\n        this.reactive.dispatch(\n            'sectionContentCollapsed',\n            course.sectionlist ?? [],\n            !isAllCollapsed\n        );\n    }\n\n    /**\n     * Return the component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        // Section return is a global page variable but most formats define it just before start printing\n        // the course content. This is the reason why we define this page setting here.\n        this.reactive.sectionReturn = this.sectionReturn;\n\n        // Check if the course format is compatible with reactive components.\n        if (!this.reactive.supportComponents) {\n            return [];\n        }\n        return [\n            // State changes that require to reload some course modules.\n            {watch: `cm.visible:updated`, handler: this._reloadCm},\n            {watch: `cm.stealth:updated`, handler: this._reloadCm},\n            {watch: `cm.sectionid:updated`, handler: this._reloadCm},\n            // Update section number and title.\n            {watch: `section.number:updated`, handler: this._refreshSectionNumber},\n            // Collapse and expand sections.\n            {watch: `section.contentcollapsed:updated`, handler: this._refreshSectionCollapsed},\n            // Sections and cm sorting.\n            {watch: `transaction:start`, handler: this._startProcessing},\n            {watch: `course.sectionlist:updated`, handler: this._refreshCourseSectionlist},\n            {watch: `section.cmlist:updated`, handler: this._refreshSectionCmlist},\n            // Reindex sections and cms.\n            {watch: `state:updated`, handler: this._indexContents},\n        ];\n    }\n\n    /**\n     * Update section collapsed state via bootstrap 4 if necessary.\n     *\n     * Formats that do not use bootstrap 4 must override this method in order to keep the section\n     * toggling working.\n     *\n     * @param {object} args\n     * @param {Object} args.state The state data\n     * @param {Object} args.element The element to update\n     */\n    _refreshSectionCollapsed({state, element}) {\n        const target = this.getElement(this.selectors.SECTION, element.id);\n        if (!target) {\n            throw new Error(`Unknown section with ID ${element.id}`);\n        }\n        // Check if it is already done.\n        const toggler = target.querySelector(this.selectors.COLLAPSE);\n        const isCollapsed = toggler?.classList.contains(this.classes.COLLAPSED) ?? false;\n\n        if (element.contentcollapsed !== isCollapsed) {\n            let collapsibleId = toggler.dataset.target ?? toggler.getAttribute(\"href\");\n            if (!collapsibleId) {\n                return;\n            }\n            collapsibleId = collapsibleId.replace('#', '');\n            const collapsible = document.getElementById(collapsibleId);\n            if (!collapsible) {\n                return;\n            }\n\n            // Course index is based on Bootstrap 4 collapsibles. To collapse them we need jQuery to\n            // interact with collapsibles methods. Hopefully, this will change in Bootstrap 5 because\n            // it does not require jQuery anymore (when MDL-71979 is integrated).\n            jQuery(collapsible).collapse(element.contentcollapsed ? 'hide' : 'show');\n        }\n\n        this._refreshAllSectionsToggler(state);\n    }\n\n    /**\n     * Refresh the collapse/expand all sections element.\n     *\n     * @param {Object} state The state data\n     */\n    _refreshAllSectionsToggler(state) {\n        const target = this.getElement(this.selectors.TOGGLEALL);\n        if (!target) {\n            return;\n        }\n        // Check if we have all sections collapsed/expanded.\n        let allcollapsed = true;\n        let allexpanded = true;\n        state.section.forEach(\n            section => {\n                allcollapsed = allcollapsed && section.contentcollapsed;\n                allexpanded = allexpanded && !section.contentcollapsed;\n            }\n        );\n        if (allcollapsed) {\n            target.classList.add(this.classes.COLLAPSED);\n            target.setAttribute('aria-expanded', false);\n        }\n        if (allexpanded) {\n            target.classList.remove(this.classes.COLLAPSED);\n            target.setAttribute('aria-expanded', true);\n        }\n    }\n\n    /**\n     * Setup the component to start a transaction.\n     *\n     * Some of the course actions replaces the current DOM element with a new one before updating the\n     * course state. This means the component cannot preload any index properly until the transaction starts.\n     *\n     */\n    _startProcessing() {\n        // During a section or cm sorting, some elements could be dettached from the DOM and we\n        // need to store somewhare in case they are needed later.\n        this.dettachedCms = {};\n        this.dettachedSections = {};\n    }\n\n    /**\n     * Activity manual completion listener.\n     *\n     * @param {Event} event the custom ecent\n     */\n    _completionHandler({detail}) {\n        if (detail === undefined) {\n            return;\n        }\n        this.reactive.dispatch('cmCompletion', [detail.cmid], detail.completed);\n    }\n\n    /**\n     * Check the current page scroll and update the active element if necessary.\n     */\n    _scrollHandler() {\n        const pageOffset = document.querySelector(this.selectors.PAGE).scrollTop;\n        const items = this.reactive.getExporter().allItemsArray(this.reactive.state);\n        // Check what is the active element now.\n        let pageItem = null;\n        items.every(item => {\n            const index = (item.type === 'section') ? this.sections : this.cms;\n            if (index[item.id] === undefined) {\n                return true;\n            }\n\n            const element = index[item.id].element;\n            // Activities without url can only be page items in edit mode.\n            if (item.type === 'cm' && !item.url && !this.reactive.isEditing) {\n                return pageOffset >= element.offsetTop;\n            }\n            pageItem = item;\n            return pageOffset >= element.offsetTop;\n        });\n        if (pageItem) {\n            this.reactive.dispatch('setPageItem', pageItem.type, pageItem.id);\n        }\n    }\n\n    /**\n     * Update a course section when the section number changes.\n     *\n     * The courseActions module used for most course section tools still depends on css classes and\n     * section numbers (not id). To prevent inconsistencies when a section is moved, we need to refresh\n     * the\n     *\n     * Course formats can override the section title rendering so the frontend depends heavily on backend\n     * rendering. Luckily in edit mode we can trigger a title update using the inplace_editable module.\n     *\n     * @param {Object} param\n     * @param {Object} param.element details the update details.\n     */\n    _refreshSectionNumber({element}) {\n        // Find the element.\n        const target = this.getElement(this.selectors.SECTION, element.id);\n        if (!target) {\n            // Job done. Nothing to refresh.\n            return;\n        }\n        // Update section numbers in all data, css and YUI attributes.\n        target.id = `section-${element.number}`;\n        // YUI uses section number as section id in data-sectionid, in principle if a format use components\n        // don't need this sectionid attribute anymore, but we keep the compatibility in case some plugin\n        // use it for legacy purposes.\n        target.dataset.sectionid = element.number;\n        // The data-number is the attribute used by components to store the section number.\n        target.dataset.number = element.number;\n\n        // Update title and title inplace editable, if any.\n        const inplace = inplaceeditable.getInplaceEditable(target.querySelector(this.selectors.SECTION_ITEM));\n        if (inplace) {\n            // The course content HTML can be modified at any moment, so the function need to do some checkings\n            // to make sure the inplace editable still represents the same itemid.\n            const currentvalue = inplace.getValue();\n            const currentitemid = inplace.getItemId();\n            // Unnamed sections must be recalculated.\n            if (inplace.getValue() === '') {\n                // The value to send can be an empty value if it is a default name.\n                if (currentitemid == element.id && (currentvalue != element.rawtitle || element.rawtitle == '')) {\n                    inplace.setValue(element.rawtitle);\n                }\n            }\n        }\n    }\n\n    /**\n     * Refresh a section cm list.\n     *\n     * @param {Object} param\n     * @param {Object} param.element details the update details.\n     */\n    _refreshSectionCmlist({element}) {\n        const cmlist = element.cmlist ?? [];\n        const section = this.getElement(this.selectors.SECTION, element.id);\n        const listparent = section?.querySelector(this.selectors.SECTION_CMLIST);\n        // A method to create a fake element to be replaced when the item is ready.\n        const createCm = this._createCmItem.bind(this);\n        if (listparent) {\n            this._fixOrder(listparent, cmlist, this.selectors.CM, this.dettachedCms, createCm);\n        }\n    }\n\n    /**\n     * Refresh the section list.\n     *\n     * @param {Object} param\n     * @param {Object} param.element details the update details.\n     */\n    _refreshCourseSectionlist({element}) {\n        // If we have a section return means we only show a single section so no need to fix order.\n        if (this.reactive.sectionReturn != 0) {\n            return;\n        }\n        const sectionlist = element.sectionlist ?? [];\n        const listparent = this.getElement(this.selectors.COURSE_SECTIONLIST);\n        // For now section cannot be created at a frontend level.\n        const createSection = this._createSectionItem.bind(this);\n        if (listparent) {\n            this._fixOrder(listparent, sectionlist, this.selectors.SECTION, this.dettachedSections, createSection);\n        }\n    }\n\n    /**\n     * Regenerate content indexes.\n     *\n     * This method is used when a legacy action refresh some content element.\n     */\n    _indexContents() {\n        // Find unindexed sections.\n        this._scanIndex(\n            this.selectors.SECTION,\n            this.sections,\n            (item) => {\n                return new Section(item);\n            }\n        );\n\n        // Find unindexed cms.\n        this._scanIndex(\n            this.selectors.CM,\n            this.cms,\n            (item) => {\n                return new CmItem(item);\n            }\n        );\n    }\n\n    /**\n     * Reindex a content (section or cm) of the course content.\n     *\n     * This method is used internally by _indexContents.\n     *\n     * @param {string} selector the DOM selector to scan\n     * @param {*} index the index attribute to update\n     * @param {*} creationhandler method to create a new indexed element\n     */\n    _scanIndex(selector, index, creationhandler) {\n        const items = this.getElements(`${selector}:not([data-indexed])`);\n        items.forEach((item) => {\n            if (!item?.dataset?.id) {\n                return;\n            }\n            // Delete previous item component.\n            if (index[item.dataset.id] !== undefined) {\n                index[item.dataset.id].unregister();\n            }\n            // Create the new component.\n            index[item.dataset.id] = creationhandler({\n                ...this,\n                element: item,\n            });\n            // Mark as indexed.\n            item.dataset.indexed = true;\n        });\n    }\n\n    /**\n     * Reload a course module contents.\n     *\n     * Most course module HTML is still strongly backend dependant.\n     * Some changes require to get a new version of the module.\n     *\n     * @param {object} param0 the watcher details\n     * @param {object} param0.element the state object\n     */\n    _reloadCm({element}) {\n        const pendingReload = new Pending(`courseformat/content:reloadCm_${element.id}`);\n        const cmitem = this.getElement(this.selectors.CM, element.id);\n        if (cmitem) {\n            const promise = Fragment.loadFragment(\n                'core_courseformat',\n                'cmitem',\n                Config.courseContextId,\n                {\n                    id: element.id,\n                    courseid: Config.courseId,\n                    sr: this.reactive.sectionReturn ?? 0,\n                }\n            );\n            promise.then((html, js) => {\n                Templates.replaceNode(cmitem, html, js);\n                this._indexContents();\n                pendingReload.resolve();\n                return;\n            }).catch();\n        }\n    }\n\n    /**\n     * Reload a course section contents.\n     *\n     * Section HTML is still strongly backend dependant.\n     * Some changes require to get a new version of the section.\n     *\n     * @param {details} param0 the watcher details\n     * @param {object} param0.element the state object\n     */\n    _reloadSection({element}) {\n        const pendingReload = new Pending(`courseformat/content:reloadSection_${element.id}`);\n        const sectionitem = this.getElement(this.selectors.SECTION, element.id);\n        if (sectionitem) {\n            const promise = Fragment.loadFragment(\n                'core_courseformat',\n                'section',\n                Config.courseContextId,\n                {\n                    id: element.id,\n                    courseid: Config.courseId,\n                    sr: this.reactive.sectionReturn ?? 0,\n                }\n            );\n            promise.then((html, js) => {\n                Templates.replaceNode(sectionitem, html, js);\n                this._indexContents();\n                pendingReload.resolve();\n                return;\n            }).catch();\n        }\n    }\n\n    /**\n     * Create a new course module item in a section.\n     *\n     * Thos method will append a fake item in the container and trigger an ajax request to\n     * replace the fake element by the real content.\n     *\n     * @param {Element} container the container element (section)\n     * @param {Number} cmid the course-module ID\n     * @returns {Element} the created element\n     */\n    _createCmItem(container, cmid) {\n        const newItem = document.createElement(this.selectors.ACTIVITYTAG);\n        newItem.dataset.for = 'cmitem';\n        newItem.dataset.id = cmid;\n        // The legacy actions.js requires a specific ID and class to refresh the CM.\n        newItem.id = `module-${cmid}`;\n        newItem.classList.add(this.classes.ACTIVITY);\n        container.append(newItem);\n        this._reloadCm({\n            element: this.reactive.get('cm', cmid),\n        });\n        return newItem;\n    }\n\n    /**\n     * Create a new section item.\n     *\n     * This method will append a fake item in the container and trigger an ajax request to\n     * replace the fake element by the real content.\n     *\n     * @param {Element} container the container element (section)\n     * @param {Number} sectionid the course-module ID\n     * @returns {Element} the created element\n     */\n    _createSectionItem(container, sectionid) {\n        const section = this.reactive.get('section', sectionid);\n        const newItem = document.createElement(this.selectors.SECTIONTAG);\n        newItem.dataset.for = 'section';\n        newItem.dataset.id = sectionid;\n        newItem.dataset.number = section.number;\n        // The legacy actions.js requires a specific ID and class to refresh the section.\n        newItem.id = `section-${sectionid}`;\n        newItem.classList.add(this.classes.SECTION);\n        container.append(newItem);\n        this._reloadSection({\n            element: section,\n        });\n        return newItem;\n    }\n\n    /**\n     * Fix/reorder the section or cms order.\n     *\n     * @param {Element} container the HTML element to reorder.\n     * @param {Array} neworder an array with the ids order\n     * @param {string} selector the element selector\n     * @param {Object} dettachedelements a list of dettached elements\n     * @param {function} createMethod method to create missing elements\n     */\n    async _fixOrder(container, neworder, selector, dettachedelements, createMethod) {\n        if (container === undefined) {\n            return;\n        }\n\n        // Empty lists should not be visible.\n        if (!neworder.length) {\n            container.classList.add('hidden');\n            container.innerHTML = '';\n            return;\n        }\n\n        // Grant the list is visible (in case it was empty).\n        container.classList.remove('hidden');\n\n        // Move the elements in order at the beginning of the list.\n        neworder.forEach((itemid, index) => {\n            let item = this.getElement(selector, itemid) ?? dettachedelements[itemid] ?? createMethod(container, itemid);\n            if (item === undefined) {\n                // Missing elements cannot be sorted.\n                return;\n            }\n            // Get the current elemnt at that position.\n            const currentitem = container.children[index];\n            if (currentitem === undefined) {\n                container.append(item);\n                return;\n            }\n            if (currentitem !== item) {\n                container.insertBefore(item, currentitem);\n            }\n        });\n\n        // Dndupload add a fake element we need to keep.\n        let dndFakeActivity;\n\n        // Remove the remaining elements.\n        while (container.children.length > neworder.length) {\n            const lastchild = container.lastChild;\n            if (lastchild?.classList?.contains('dndupload-preview')) {\n                dndFakeActivity = lastchild;\n            } else {\n                dettachedelements[lastchild?.dataset?.id ?? 0] = lastchild;\n            }\n            container.removeChild(lastchild);\n        }\n        // Restore dndupload fake element.\n        if (dndFakeActivity) {\n            container.append(dndFakeActivity);\n        }\n    }\n}\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireDefault","obj","__esModule","default","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread","target","arguments","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","o","minLen","n","toString","test","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_setPrototypeOf","p","bind","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","_possibleConstructorReturn","ReferenceError","_assertThisInitialized","_config","_inplace_editable","_section","_cmitem","_fragment","_templates","_actions","CourseEvents","cache","has","get","newObj","hasPropertyDescriptor","set","_interopRequireWildcard","_jquery","_pending","Component","_BaseComponent","subClass","superClass","_inherits","protoProps","staticProps","_fixOrder2","_super","_descriptor$sectionRe","selectors","SECTION","SECTION_ITEM","SECTION_CMLIST","COURSE_SECTIONLIST","CM","PAGE","TOGGLER","COLLAPSE","TOGGLEALL","ACTIVITYTAG","SECTIONTAG","classes","COLLAPSED","ACTIVITY","STATEDREADY","dettachedCms","dettachedSections","sections","cms","sectionReturn","_this","_indexContents","addEventListener","element","_sectionTogglers","toogleAll","getElement","collapseElementIds","getElements","map","id","setAttribute","join","_allSectionToggler","_refreshAllSectionsToggler","reactive","supportComponents","isEditing","DispatchActions","classList","add","manualCompletionToggled","_completionHandler","document","querySelector","_scrollHandler","event","sectionlink","closest","isChevron","_toggler$classList$co","section","toggler","isCollapsed","contains","sectionId","getAttribute","dispatch","_course$sectionlist","preventDefault","isAllCollapsed","course","sectionlist","watch","handler","_reloadCm","_refreshSectionNumber","_refreshSectionCollapsed","_startProcessing","_refreshCourseSectionlist","_refreshSectionCmlist","_ref","_toggler$classList$co2","concat","contentcollapsed","_toggler$dataset$targ","collapsibleId","dataset","replace","collapsible","getElementById","jQuery","collapse","allcollapsed","allexpanded","remove","_ref2","detail","cmid","completed","_this2","pageOffset","scrollTop","items","getExporter","allItemsArray","pageItem","every","item","index","url","offsetTop","_ref3","number","sectionid","inplace","inplaceeditable","getInplaceEditable","currentvalue","getValue","currentitemid","getItemId","rawtitle","setValue","_ref4","_element$cmlist","cmlist","listparent","createCm","_createCmItem","_fixOrder","_ref5","_element$sectionlist","createSection","_createSectionItem","_scanIndex","Section","CmItem","selector","creationhandler","_this3","_item$dataset","unregister","indexed","_ref6","_this$reactive$sectio","_this4","pendingReload","Pending","cmitem","Fragment","loadFragment","Config","courseContextId","courseid","courseId","sr","html","js","Templates","replaceNode","_ref7","_this$reactive$sectio2","_this5","sectionitem","container","newItem","createElement","for","append","_reloadSection","_callee","neworder","dettachedelements","createMethod","dndFakeActivity","_lastchild$classList","lastchild","_lastchild$dataset$id","_lastchild$dataset","_this6","_context","innerHTML","itemid","_ref8","_this6$getElement","currentitem","children","insertBefore","lastChild","removeChild","args","_x","_x2","_x3","_x4","_x5","getCurrentCourseEditor","BaseComponent","_exports"],"mappings":"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"}