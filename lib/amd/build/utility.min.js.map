{"version":3,"file":"utility.min.js","sources":["../src/utility.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript handling for HTML attributes. This module gets autoloaded on page load.\n *\n * With the appropriate HTML attributes, various functionalities defined in this module can be used such as a displaying\n * an alert or a confirmation modal, etc.\n *\n * @module     core/utility\n * @copyright  2021 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      4.0\n *\n * @example <caption>Calling the confirmation modal to delete a block</caption>\n *\n * // The following is an example of how to use this module via an indirect PHP call with a button.\n *\n * $controls[] = new action_menu_link_secondary(\n *     $deleteactionurl,\n *     new pix_icon('t/delete', $str, 'moodle', array('class' => 'iconsmall', 'title' => '')),\n *     $str,\n *     [\n *         'class' => 'editing_delete',\n *         'data-modal' => 'confirmation', // Needed so this module will pick it up in the click handler.\n *         'data-modal-title-str' => json_encode(['deletecheck_modal', 'block']),\n *         'data-modal-content-str' => json_encode(['deleteblockcheck', 'block', $blocktitle]),\n *         'data-modal-yes-button-str' => json_encode(['delete', 'core']),\n *         'data-modal-toast' => 'true', // Can be set to inform the user that their action was a success.\n *         'data-modal-toast-confirmation-str' => json_encode(['deleteblockinprogress', 'block', $blocktitle]),\n *         'data-modal-destination' => $deleteconfirmationurl->out(false), // Where do you want to direct the user?\n *     ]\n * );\n */\n\nimport * as Str from 'core/str';\nimport Pending from 'core/pending';\nimport {add as addToast} from 'core/toast';\nimport {saveCancelPromise, deleteCancelPromise, exception} from 'core/notification';\n\n// We want to ensure that we only initialize the listeners only once.\nlet registered = false;\n\n/**\n * Either fetch the string or return it from the dom node.\n *\n * @method getConfirmationString\n * @private\n * @param {HTMLElement} dataset The page element to fetch dataset items in\n * @param {String} type The type of string to fetch\n * @param {String} field The dataset field name to fetch the contents of\n * @return {Promise}\n *\n */\nconst getModalString = (dataset, type, field) => {\n    if (dataset[`${type}${field}Str`]) {\n        return Str.get_string.apply(null, JSON.parse(dataset[`${type}${field}Str`]));\n    }\n    return Promise.resolve(dataset[`${type}${field}`]);\n};\n\n/**\n * Display a save/cancel confirmation.\n *\n * @private\n * @param {HTMLElement} source The title of the confirmation\n * @param {String} type The content of the confirmation\n * @returns {Promise}\n */\nconst displayConfirmation = (source, type) => {\n    let confirmationPromise = null;\n    if (`${type}Type` in source.dataset && source.dataset[`${type}Type`] === 'delete') {\n        confirmationPromise = deleteCancelPromise(\n            getModalString(source.dataset, type, 'Title'),\n            getModalString(source.dataset, type, 'Content'),\n            getModalString(source.dataset, type, 'YesButton'),\n        );\n    } else {\n        confirmationPromise = saveCancelPromise(\n            getModalString(source.dataset, type, 'Title'),\n            getModalString(source.dataset, type, 'Content'),\n            getModalString(source.dataset, type, 'YesButton'),\n        );\n    }\n    return confirmationPromise.then(() => {\n        if (source.dataset[`${type}Toast`] === 'true') {\n            const stringForToast = getModalString(source.dataset, type, 'ToastConfirmation');\n            if (typeof stringForToast === \"string\") {\n                addToast(stringForToast);\n            } else {\n                stringForToast.then(str => addToast(str)).catch(e => exception(e));\n            }\n        }\n        window.location.href = source.dataset[`${type}Destination`];\n        return;\n    }).catch(() => {\n        return;\n    });\n};\n\n/**\n * Display an alert and return the promise from it.\n *\n * @private\n * @param {String} title The title of the alert\n * @param {String} content The content of the alert\n * @returns {Promise}\n */\nconst displayAlert = async(title, content) => {\n    const pendingPromise = new Pending('core/confirm:alert');\n\n    const ModalFactory = await import('core/modal_factory');\n\n    return ModalFactory.create({\n        type: ModalFactory.types.ALERT,\n        title: title,\n        body: content,\n        removeOnClose: true,\n    })\n    .then(function(modal) {\n        modal.show();\n        pendingPromise.resolve();\n\n        return modal;\n    });\n};\n\n/**\n * Set up the listeners for the confirmation modal widget within the page.\n *\n * @method registerConfirmationListeners\n * @private\n */\nconst registerConfirmationListeners = () => {\n    document.addEventListener('click', e => {\n        const confirmRequest = e.target.closest('[data-confirmation=\"modal\"]');\n        if (confirmRequest) {\n            e.preventDefault();\n            displayConfirmation(confirmRequest, 'confirmation');\n        }\n\n        const modalConfirmation = e.target.closest('[data-modal=\"confirmation\"]');\n        if (modalConfirmation) {\n            e.preventDefault();\n            displayConfirmation(modalConfirmation, 'modal');\n        }\n\n        const alertRequest = e.target.closest('[data-modal=\"alert\"]');\n        if (alertRequest) {\n            e.preventDefault();\n            displayAlert(\n                getModalString(alertRequest.dataset, 'modal', 'Title'),\n                getModalString(alertRequest.dataset, 'modal', 'Content'),\n            );\n        }\n    });\n};\n\nif (!registered) {\n    registerConfirmationListeners();\n    registered = true;\n}\n"],"names":["obj","Str","nodeInterop","__esModule","_typeof","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_pending","_systemImportTransformerGlobalIdentifier","window","self","global","WeakMap","cacheBabelInterop","cacheNodeInterop","_regeneratorRuntime","exports","Op","hasOwn","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_ref","registered","getModalString","dataset","field","get_string","apply","JSON","parse","concat","displayConfirmation","source","deleteCancelPromise","saveCancelPromise","stringForToast","addToast","str","e","location","href","displayAlert","_callee","title","content","pendingPromise","ModalFactory","_context","Pending","amd","require","module","component","loader","types","ALERT","body","removeOnClose","modal","show","args","arguments","_x","_x2","document","addEventListener","confirmRequest","target","closest","preventDefault","modalConfirmation","alertRequest"],"mappings":"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"}