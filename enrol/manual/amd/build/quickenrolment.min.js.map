{"version":3,"file":"quickenrolment.min.js","sources":["../src/quickenrolment.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Quick enrolment AMD module.\n *\n * @module     enrol_manual/quickenrolment\n * @copyright  2016 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport * as DynamicTable from 'core_table/dynamic';\nimport * as Str from 'core/str';\nimport * as Toast from 'core/toast';\nimport Config from 'core/config';\nimport Fragment from 'core/fragment';\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\nimport Notification from 'core/notification';\nimport jQuery from 'jquery';\nimport Pending from 'core/pending';\nimport Prefetch from 'core/prefetch';\n\nconst Selectors = {\n    cohortSelector: \"#id_cohortlist\",\n    triggerButtons: \".enrolusersbutton.enrol_manual_plugin [type='submit']\",\n    unwantedHiddenFields: \"input[value='_qf__force_multiselect_submission']\",\n    buttonWrapper: '[data-region=\"wrapper\"]',\n};\n\n/**\n * Get the content of the body for the specified context.\n *\n * @param {Number} contextId\n * @returns {Promise}\n */\nconst getBodyForContext = contextId => {\n    return Fragment.loadFragment('enrol_manual', 'enrol_users_form', contextId, {});\n};\n\n/**\n * Get the dynamic table for the button.\n *\n * @param {HTMLElement} element\n * @returns {HTMLElement}\n */\nconst getDynamicTableForElement = element => {\n    const wrapper = element.closest(Selectors.buttonWrapper);\n\n    return DynamicTable.getTableFromId(wrapper.dataset.tableUniqueid);\n};\n\n/**\n * Register the event listeners for this contextid.\n *\n * @param {Number} contextId\n */\nconst registerEventListeners = contextId => {\n    document.addEventListener('click', e => {\n        if (e.target.closest(Selectors.triggerButtons)) {\n            e.preventDefault();\n\n            showModal(getDynamicTableForElement(e.target), contextId);\n\n            return;\n        }\n    });\n};\n\n/**\n * Display the modal for this contextId.\n *\n * @param {HTMLElement} dynamicTable The table to beb refreshed when changes are made\n * @param {Number} contextId\n * @returns {Promise}\n */\nconst showModal = (dynamicTable, contextId) => {\n    const pendingPromise = new Pending('enrol_manual/quickenrolment:showModal');\n\n    return ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        large: true,\n        title: Str.get_string('enrolusers', 'enrol_manual'),\n        body: getBodyForContext(contextId),\n        buttons: {\n            save: Str.get_string('enrolusers', 'enrol_manual'),\n        }\n    })\n    .then(modal => {\n        modal.getRoot().on(ModalEvents.save, e => {\n            // Trigger a form submission, so that any mform elements can do final tricks before the form submission\n            // is processed.\n            // The actual submit even tis captured in the next handler.\n\n            e.preventDefault();\n            modal.getRoot().find('form').submit();\n        });\n\n        modal.getRoot().on('submit', 'form', e => {\n            e.preventDefault();\n\n            submitFormAjax(dynamicTable, modal);\n        });\n\n        modal.getRoot().on(ModalEvents.hidden, () => {\n            modal.destroy();\n        });\n\n        modal.show();\n\n        return modal;\n    })\n    .then(modal => Promise.all([modal, modal.getBodyPromise()]))\n    .then(([modal, body]) => {\n        if (body.get(0).querySelector(Selectors.cohortSelector)) {\n            return modal.setSaveButtonText(Str.get_string('enroluserscohorts', 'enrol_manual')).then(() => modal);\n        }\n\n        return modal;\n    })\n    .then(modal => {\n        pendingPromise.resolve();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Submit the form via ajax.\n *\n * @param {HTMLElement} dynamicTable\n * @param {Object} modal\n */\nconst submitFormAjax = (dynamicTable, modal) => {\n    // Note: We use a jQuery object here so that we can use its serialize functionality.\n    const form = modal.getRoot().find('form');\n\n    // Before send the data through AJAX, we need to parse and remove some unwanted hidden fields.\n    // This hidden fields are added automatically by mforms and when it reaches the AJAX we get an error.\n    form.get(0).querySelectorAll(Selectors.unwantedHiddenFields).forEach(hiddenField => hiddenField.remove());\n\n    modal.hide();\n    modal.destroy();\n\n    jQuery.ajax(\n        `${Config.wwwroot}/enrol/manual/ajax.php?${form.serialize()}`,\n        {\n            type: 'GET',\n            processData: false,\n            contentType: \"application/json\",\n        }\n    )\n    .then(response => {\n        if (response.error) {\n            throw new Error(response.error);\n        }\n\n        return response.count;\n    })\n    .then(count => {\n        return Promise.all([\n            Str.get_string('totalenrolledusers', 'enrol', count),\n            DynamicTable.refreshTableContent(dynamicTable),\n        ]);\n    })\n    .then(([notificationBody]) => notificationBody)\n    .then(notificationBody => Toast.add(notificationBody))\n    .catch(error => {\n        Notification.addNotification({\n            message: error.message,\n            type: 'error',\n        });\n    });\n};\n\n/**\n * Set up quick enrolment for the manual enrolment plugin.\n *\n * @param {Number} contextid The context id to setup for\n */\nexport const init = ({contextid}) => {\n    registerEventListeners(contextid);\n\n    Prefetch.prefetchStrings('enrol_manual', [\n        'enrolusers',\n        'enroluserscohorts',\n    ]);\n\n    Prefetch.prefetchString('enrol', 'totalenrolledusers');\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","length","err","return","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","DynamicTable","Str","Toast","_config","_fragment","_modal_events","_modal_factory","_notification","_jquery","_pending","_prefetch","Selectors","getBodyForContext","contextId","Fragment","loadFragment","registerEventListeners","document","addEventListener","e","target","closest","preventDefault","showModal","element","wrapper","getTableFromId","dataset","tableUniqueid","dynamicTable","pendingPromise","Pending","ModalFactory","create","type","types","SAVE_CANCEL","large","title","get_string","body","buttons","save","then","modal","getRoot","on","ModalEvents","find","submit","submitFormAjax","hidden","destroy","show","Promise","all","getBodyPromise","_ref","_ref2","querySelector","setSaveButtonText","resolve","catch","Notification","exception","form","querySelectorAll","forEach","hiddenField","remove","hide","jQuery","ajax","concat","Config","wwwroot","serialize","processData","contentType","response","error","Error","count","refreshTableContent","_ref3","notificationBody","add","addNotification","message","_exports","init","_ref5","contextid","Prefetch","prefetchStrings","prefetchString"],"mappings":"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"}