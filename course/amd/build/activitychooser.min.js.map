{"version":3,"file":"activitychooser.min.js","sources":["../src/activitychooser.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A type of dialogue used as for choosing modules in a course.\n *\n * @module     core_course/activitychooser\n * @copyright  2020 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as ChooserDialogue from 'core_course/local/activitychooser/dialogue';\nimport * as Repository from 'core_course/local/activitychooser/repository';\nimport selectors from 'core_course/local/activitychooser/selectors';\nimport CustomEvents from 'core/custom_interaction_events';\nimport * as Templates from 'core/templates';\nimport * as ModalFactory from 'core/modal_factory';\nimport {get_string as getString} from 'core/str';\nimport Pending from 'core/pending';\n\n// Set up some JS module wide constants that can be added to in the future.\n\n// Tab config options.\nconst ALLACTIVITIESRESOURCES = 0;\nconst ONLYALL = 1;\nconst ACTIVITIESRESOURCES = 2;\n\n// Module types.\nconst ACTIVITY = 0;\nconst RESOURCE = 1;\n\n/**\n * Set up the activity chooser.\n *\n * @method init\n * @param {Number} courseId Course ID to use later on in fetchModules()\n * @param {Object} chooserConfig Any PHP config settings that we may need to reference\n */\nexport const init = (courseId, chooserConfig) => {\n    const pendingPromise = new Pending();\n\n    registerListenerEvents(courseId, chooserConfig);\n\n    pendingPromise.resolve();\n};\n\n/**\n * Once a selection has been made make the modal & module information and pass it along\n *\n * @method registerListenerEvents\n * @param {Number} courseId\n * @param {Object} chooserConfig Any PHP config settings that we may need to reference\n */\nconst registerListenerEvents = (courseId, chooserConfig) => {\n    const events = [\n        'click',\n        CustomEvents.events.activate,\n        CustomEvents.events.keyboardActivate\n    ];\n\n    const fetchModuleData = (() => {\n        let innerPromise = null;\n\n        return () => {\n            if (!innerPromise) {\n                innerPromise = new Promise((resolve) => {\n                    resolve(Repository.activityModules(courseId));\n                });\n            }\n\n            return innerPromise;\n        };\n    })();\n\n    const fetchFooterData = (() => {\n        let footerInnerPromise = null;\n\n        return (sectionId) => {\n            if (!footerInnerPromise) {\n                footerInnerPromise = new Promise((resolve) => {\n                    resolve(Repository.fetchFooterData(courseId, sectionId));\n                });\n            }\n\n            return footerInnerPromise;\n        };\n    })();\n\n    CustomEvents.define(document, events);\n\n    // Display module chooser event listeners.\n    events.forEach((event) => {\n        document.addEventListener(event, async(e) => {\n            if (e.target.closest(selectors.elements.sectionmodchooser)) {\n                let caller;\n                // We need to know who called this.\n                // Standard courses use the ID in the main section info.\n                const sectionDiv = e.target.closest(selectors.elements.section);\n                // Front page courses need some special handling.\n                const button = e.target.closest(selectors.elements.sectionmodchooser);\n\n                // If we don't have a section ID use the fallback ID.\n                // We always want the sectionDiv caller first as it keeps track of section ID's after DnD changes.\n                // The button attribute is always just a fallback for us as the section div is not always available.\n                // A YUI change could be done maybe to only update the button attribute but we are going for minimal change here.\n                if (sectionDiv !== null && sectionDiv.hasAttribute('data-sectionid')) {\n                    // We check for attributes just in case of outdated contrib course formats.\n                    caller = sectionDiv;\n                } else {\n                    caller = button;\n                }\n\n                // We want to show the modal instantly but loading whilst waiting for our data.\n                let bodyPromiseResolver;\n                const bodyPromise = new Promise(resolve => {\n                    bodyPromiseResolver = resolve;\n                });\n\n                const footerData = await fetchFooterData(caller.dataset.sectionid);\n                const sectionModal = buildModal(bodyPromise, footerData);\n\n                // Now we have a modal we should start fetching data.\n                // If an error occurs while fetching the data, display the error within the modal.\n                const data = await fetchModuleData().catch(async(e) => {\n                    const errorTemplateData = {\n                        'errormessage': e.message\n                    };\n                    bodyPromiseResolver(await Templates.render('core_course/local/activitychooser/error', errorTemplateData));\n                });\n\n                // Early return if there is no module data.\n                if (!data) {\n                    return;\n                }\n\n                // Apply the section id to all the module instance links.\n                const builtModuleData = sectionIdMapper(\n                    data,\n                    caller.dataset.sectionid,\n                    caller.dataset.sectionreturnid,\n                    caller.dataset.beforemod\n                );\n\n                ChooserDialogue.displayChooser(\n                    sectionModal,\n                    builtModuleData,\n                    partiallyAppliedFavouriteManager(data, caller.dataset.sectionid),\n                    footerData,\n                );\n\n                bodyPromiseResolver(await Templates.render(\n                    'core_course/activitychooser',\n                    templateDataBuilder(builtModuleData, chooserConfig)\n                ));\n            }\n        });\n    });\n};\n\n/**\n * Given the web service data and an ID we want to make a deep copy\n * of the WS data then add on the section ID to the addoption URL\n *\n * @method sectionIdMapper\n * @param {Object} webServiceData Our original data from the Web service call\n * @param {Number} id The ID of the section we need to append to the links\n * @param {Number|null} sectionreturnid The ID of the section return we need to append to the links\n * @param {Number|null} beforemod The ID of the cm we need to append to the links\n * @return {Array} [modules] with URL's built\n */\nconst sectionIdMapper = (webServiceData, id, sectionreturnid, beforemod) => {\n    // We need to take a fresh deep copy of the original data as an object is a reference type.\n    const newData = JSON.parse(JSON.stringify(webServiceData));\n    newData.content_items.forEach((module) => {\n        module.link += '&section=' + id + '&sr=' + (sectionreturnid ?? 0) + '&beforemod=' + (beforemod ?? 0);\n    });\n    return newData.content_items;\n};\n\n/**\n * Given an array of modules we want to figure out where & how to place them into our template object\n *\n * @method templateDataBuilder\n * @param {Array} data our modules to manipulate into a Templatable object\n * @param {Object} chooserConfig Any PHP config settings that we may need to reference\n * @return {Object} Our built object ready to render out\n */\nconst templateDataBuilder = (data, chooserConfig) => {\n    // Setup of various bits and pieces we need to mutate before throwing it to the wolves.\n    let activities = [];\n    let resources = [];\n    let showAll = true;\n    let showActivities = false;\n    let showResources = false;\n\n    // Tab mode can be the following [All, Resources & Activities, All & Activities & Resources].\n    const tabMode = parseInt(chooserConfig.tabmode);\n\n    // Filter the incoming data to find favourite & recommended modules.\n    const favourites = data.filter(mod => mod.favourite === true);\n    const recommended = data.filter(mod => mod.recommended === true);\n\n    // Both of these modes need Activity & Resource tabs.\n    if ((tabMode === ALLACTIVITIESRESOURCES || tabMode === ACTIVITIESRESOURCES) && tabMode !== ONLYALL) {\n        // Filter the incoming data to find activities then resources.\n        activities = data.filter(mod => mod.archetype === ACTIVITY);\n        resources = data.filter(mod => mod.archetype === RESOURCE);\n        showActivities = true;\n        showResources = true;\n\n        // We want all of the previous information but no 'All' tab.\n        if (tabMode === ACTIVITIESRESOURCES) {\n            showAll = false;\n        }\n    }\n\n    // Given the results of the above filters lets figure out what tab to set active.\n    // We have some favourites.\n    const favouritesFirst = !!favourites.length;\n    // We are in tabMode 2 without any favourites.\n    const activitiesFirst = showAll === false && favouritesFirst === false;\n    // We have nothing fallback to show all modules.\n    const fallback = showAll === true && favouritesFirst === false;\n\n    return {\n        'default': data,\n        showAll: showAll,\n        activities: activities,\n        showActivities: showActivities,\n        activitiesFirst: activitiesFirst,\n        resources: resources,\n        showResources: showResources,\n        favourites: favourites,\n        recommended: recommended,\n        favouritesFirst: favouritesFirst,\n        fallback: fallback,\n    };\n};\n\n/**\n * Given an object we want to build a modal ready to show\n *\n * @method buildModal\n * @param {Promise} bodyPromise\n * @param {String|Boolean} footer Either a footer to add or nothing\n * @return {Object} The modal ready to display immediately and render body in later.\n */\nconst buildModal = (bodyPromise, footer) => {\n    return ModalFactory.create({\n        type: ModalFactory.types.DEFAULT,\n        title: getString('addresourceoractivity'),\n        body: bodyPromise,\n        footer: footer.customfootertemplate,\n        large: true,\n        scrollable: false,\n        templateContext: {\n            classes: 'modchooser'\n        }\n    })\n    .then(modal => {\n        modal.show();\n        return modal;\n    });\n};\n\n/**\n * A small helper function to handle the case where there are no more favourites\n * and we need to mess a bit with the available tabs in the chooser\n *\n * @method nullFavouriteDomManager\n * @param {HTMLElement} favouriteTabNav Dom node of the favourite tab nav\n * @param {HTMLElement} modalBody Our current modals' body\n */\nconst nullFavouriteDomManager = (favouriteTabNav, modalBody) => {\n    favouriteTabNav.tabIndex = -1;\n    favouriteTabNav.classList.add('d-none');\n    // Need to set active to an available tab.\n    if (favouriteTabNav.classList.contains('active')) {\n        favouriteTabNav.classList.remove('active');\n        favouriteTabNav.setAttribute('aria-selected', 'false');\n        const favouriteTab = modalBody.querySelector(selectors.regions.favouriteTab);\n        favouriteTab.classList.remove('active');\n        const defaultTabNav = modalBody.querySelector(selectors.regions.defaultTabNav);\n        const activitiesTabNav = modalBody.querySelector(selectors.regions.activityTabNav);\n        if (defaultTabNav.classList.contains('d-none') === false) {\n            defaultTabNav.classList.add('active');\n            defaultTabNav.setAttribute('aria-selected', 'true');\n            defaultTabNav.tabIndex = 0;\n            defaultTabNav.focus();\n            const defaultTab = modalBody.querySelector(selectors.regions.defaultTab);\n            defaultTab.classList.add('active');\n        } else {\n            activitiesTabNav.classList.add('active');\n            activitiesTabNav.setAttribute('aria-selected', 'true');\n            activitiesTabNav.tabIndex = 0;\n            activitiesTabNav.focus();\n            const activitiesTab = modalBody.querySelector(selectors.regions.activityTab);\n            activitiesTab.classList.add('active');\n        }\n\n    }\n};\n\n/**\n * Export a curried function where the builtModules has been applied.\n * We have our array of modules so we can rerender the favourites area and have all of the items sorted.\n *\n * @method partiallyAppliedFavouriteManager\n * @param {Array} moduleData This is our raw WS data that we need to manipulate\n * @param {Number} sectionId We need this to add the sectionID to the URL's in the faves area after rerender\n * @return {Function} partially applied function so we can manipulate DOM nodes easily & update our internal array\n */\nconst partiallyAppliedFavouriteManager = (moduleData, sectionId) => {\n    /**\n     * Curried function that is being returned.\n     *\n     * @param {String} internal Internal name of the module to manage\n     * @param {Boolean} favourite Is the caller adding a favourite or removing one?\n     * @param {HTMLElement} modalBody What we need to update whilst we are here\n     */\n    return async(internal, favourite, modalBody) => {\n        const favouriteArea = modalBody.querySelector(selectors.render.favourites);\n\n        // eslint-disable-next-line max-len\n        const favouriteButtons = modalBody.querySelectorAll(`[data-internal=\"${internal}\"] ${selectors.actions.optionActions.manageFavourite}`);\n        const favouriteTabNav = modalBody.querySelector(selectors.regions.favouriteTabNav);\n        const result = moduleData.content_items.find(({name}) => name === internal);\n        const newFaves = {};\n        if (result) {\n            if (favourite) {\n                result.favourite = true;\n\n                // eslint-disable-next-line camelcase\n                newFaves.content_items = moduleData.content_items.filter(mod => mod.favourite === true);\n\n                const builtFaves = sectionIdMapper(newFaves, sectionId);\n\n                const {html, js} = await Templates.renderForPromise('core_course/local/activitychooser/favourites',\n                    {favourites: builtFaves});\n\n                await Templates.replaceNodeContents(favouriteArea, html, js);\n\n                Array.from(favouriteButtons).forEach((element) => {\n                    element.classList.remove('text-muted');\n                    element.classList.add('text-primary');\n                    element.dataset.favourited = 'true';\n                    element.setAttribute('aria-pressed', true);\n                    element.firstElementChild.classList.remove('fa-star-o');\n                    element.firstElementChild.classList.add('fa-star');\n                });\n\n                favouriteTabNav.classList.remove('d-none');\n            } else {\n                result.favourite = false;\n\n                const nodeToRemove = favouriteArea.querySelector(`[data-internal=\"${internal}\"]`);\n\n                nodeToRemove.parentNode.removeChild(nodeToRemove);\n\n                Array.from(favouriteButtons).forEach((element) => {\n                    element.classList.add('text-muted');\n                    element.classList.remove('text-primary');\n                    element.dataset.favourited = 'false';\n                    element.setAttribute('aria-pressed', false);\n                    element.firstElementChild.classList.remove('fa-star');\n                    element.firstElementChild.classList.add('fa-star-o');\n                });\n                const newFaves = moduleData.content_items.filter(mod => mod.favourite === true);\n\n                if (newFaves.length === 0) {\n                    nullFavouriteDomManager(favouriteTabNav, modalBody);\n                }\n            }\n        }\n    };\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_regeneratorRuntime","exports","Op","hasOwn","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","ChooserDialogue","Repository","_selectors","_custom_interaction_events","Templates","ModalFactory","_pending","_exports","init","courseId","chooserConfig","pendingPromise","Pending","registerListenerEvents","innerPromise","footerInnerPromise","events","CustomEvents","activate","keyboardActivate","fetchModuleData","activityModules","fetchFooterData","sectionId","document","event","_ref","addEventListener","e","caller","sectionDiv","button","bodyPromiseResolver","bodyPromise","footerData","sectionModal","data","builtModuleData","_context2","target","closest","selectors","elements","sectionmodchooser","section","hasAttribute","dataset","sectionid","buildModal","_ref2","errorTemplateData","_context","errormessage","message","t0","render","t1","_callee","_x2","sectionIdMapper","sectionreturnid","beforemod","displayChooser","partiallyAppliedFavouriteManager","templateDataBuilder","_callee2","_x","webServiceData","id","newData","JSON","parse","stringify","content_items","module","link","activities","resources","showAll","showActivities","showResources","tabMode","parseInt","tabmode","favourites","filter","mod","favourite","recommended","archetype","favouritesFirst","activitiesFirst","fallback","footer","types","DEFAULT","title","getString","get_string","body","customfootertemplate","large","scrollable","templateContext","classes","modal","show","nullFavouriteDomManager","favouriteTabNav","modalBody","tabIndex","classList","add","contains","remove","setAttribute","querySelector","regions","favouriteTab","defaultTabNav","activitiesTabNav","activityTabNav","focus","defaultTab","activityTab","moduleData","_ref3","internal","favouriteArea","favouriteButtons","newFaves","builtFaves","_yield$Templates$rend","html","js","nodeToRemove","_context3","querySelectorAll","concat","actions","optionActions","manageFavourite","find","_ref4","renderForPromise","replaceNodeContents","Array","from","element","favourited","firstElementChild","parentNode","removeChild","_callee3","_x3","_x4","_x5"],"mappings":"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"}