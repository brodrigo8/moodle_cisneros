{"version":3,"sources":["../src/moremenu.js"],"names":["Selectors","regions","moredropdown","morebutton","classes","dropdownitem","dropdownmoremenu","hidden","active","nav","navlink","observed","attributes","menu","dropdowntoggle","isTabListMenu","autoCollapse","maxHeight","parentNode","offsetHeight","moreDropdown","querySelector","moreButton","classList","remove","menuNodes","Array","from","children","reverse","forEach","item","contains","lastNode","removeChild","moveIntoMoreDropdown","dataset","forceintomoremenu","moveOutOfMoreDropdown","length","add","navNode","prepend","dropdownToggle","navLink","removeAttribute","setAttribute","append","insertBefore","getAttribute","hash","window","location","itemRole","menuListItem","firstElementChild","roleSelector","menuItem","addEventListener","toggledropdown","e","innerMenu","target","toggle","stopPropagation","on","querySelectorAll","dropdown","removeEventListener"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Moves wrapping navigation items into a more menu.\n *\n * @module     core/moremenu\n * @copyright  2021 Moodle\n * @author     Bas Brands <bas@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport menu_navigation from \"core/menu_navigation\";\n/**\n * Moremenu selectors.\n */\nconst Selectors = {\n    regions: {\n        moredropdown: '[data-region=\"moredropdown\"]',\n        morebutton: '[data-region=\"morebutton\"]'\n    },\n    classes: {\n        dropdownitem: 'dropdown-item',\n        dropdownmoremenu: 'dropdownmoremenu',\n        hidden: 'd-none',\n        active: 'active',\n        nav: 'nav',\n        navlink: 'nav-link',\n        observed: 'observed',\n    },\n    attributes: {\n        menu: '[role=\"menu\"]',\n        dropdowntoggle: '[data-toggle=\"dropdown\"]'\n    }\n};\n\nlet isTabListMenu = false;\n\n/**\n * Auto Collapse navigation items that wrap into a dropdown menu.\n *\n * @param {HTMLElement} menu The navbar container.\n */\nconst autoCollapse = menu => {\n\n    const maxHeight = menu.parentNode.offsetHeight + 1;\n\n    const moreDropdown = menu.querySelector(Selectors.regions.moredropdown);\n    const moreButton = menu.querySelector(Selectors.regions.morebutton);\n\n    // If the menu items wrap and the menu height is larger than the height of the\n    // parent then start pushing navlinks into the moreDropdown.\n    if (menu.offsetHeight > maxHeight) {\n        moreButton.classList.remove(Selectors.classes.hidden);\n\n        const menuNodes = Array.from(menu.children).reverse();\n        menuNodes.forEach(item => {\n            if (!item.classList.contains(Selectors.classes.dropdownmoremenu)) {\n                // After moving the menu items into the moreDropdown check again\n                // if the menu height is still larger then the height of the parent.\n                if (menu.offsetHeight > maxHeight) {\n                    const lastNode = menu.removeChild(item);\n                    // Move this node into the more dropdown menu.\n                    moveIntoMoreDropdown(menu, lastNode, true);\n                }\n            }\n        });\n    } else {\n        // If the menu height is smaller than the height of the parent, then try returning navlinks to the menu.\n        if ('children' in moreDropdown) {\n            // Iterate through the nodes within the more dropdown menu.\n            Array.from(moreDropdown.children).forEach(item => {\n                // Don't move the node to the more menu if it is explicitly defined that\n                // this node should be displayed in the more dropdown menu at all times.\n                if (menu.offsetHeight < maxHeight && item.dataset.forceintomoremenu !== 'true') {\n                    const lastNode = moreDropdown.removeChild(item);\n                    // Move this node from the more dropdown menu into the main section of the menu.\n                    moveOutOfMoreDropdown(menu, lastNode);\n                }\n            });\n            // If there are no more nodes in the more dropdown menu we can hide the moreButton.\n            if (Array.from(moreDropdown.children).length === 0) {\n                moreButton.classList.add(Selectors.classes.hidden);\n            }\n        }\n\n        if (menu.offsetHeight > maxHeight) {\n            autoCollapse(menu);\n        }\n    }\n    menu.parentNode.classList.add(Selectors.classes.observed);\n};\n\n/**\n * Move a node into the \"more\" dropdown menu.\n *\n * This method forces a given navigation node to be added and displayed within the \"more\" dropdown menu.\n *\n * @param {HTMLElement} menu The navbar moremenu.\n * @param {HTMLElement} navNode The navigation node.\n * @param {boolean} prepend Whether to prepend or append the node to the content in the more dropdown menu.\n */\nconst moveIntoMoreDropdown = (menu, navNode, prepend = false) => {\n    const moreDropdown = menu.querySelector(Selectors.regions.moredropdown);\n    const dropdownToggle = menu.querySelector(Selectors.attributes.dropdowntoggle);\n\n    const navLink = navNode.querySelector('.' + Selectors.classes.navlink);\n    // If there are navLinks that contain an active link in the moreDropdown\n    // make the dropdownToggle in the moreButton active.\n    if (navLink.classList.contains(Selectors.classes.active)) {\n        dropdownToggle.classList.add(Selectors.classes.active);\n        // Remove aria-selected if the more menu is rendered as a tab list.\n        if (isTabListMenu) {\n            navLink.removeAttribute('aria-selected');\n        }\n        navLink.setAttribute('aria-current', 'true');\n    }\n\n    // This will become a menu item instead of a tab.\n    navLink.setAttribute('role', 'menuitem');\n\n    // Change the styling of the navLink to a dropdownitem and push it into\n    // the moreDropdown.\n    navLink.classList.remove(Selectors.classes.navlink);\n    navLink.classList.add(Selectors.classes.dropdownitem);\n    if (prepend) {\n        moreDropdown.prepend(navNode);\n    } else {\n        moreDropdown.append(navNode);\n    }\n};\n\n/**\n * Move a node out of the \"more\" dropdown menu.\n *\n * This method forces a given node from the \"more\" dropdown menu to be displayed in the main section of the menu.\n *\n * @param {HTMLElement} menu The navbar moremenu.\n * @param {HTMLElement} navNode The navigation node.\n */\nconst moveOutOfMoreDropdown = (menu, navNode) => {\n    const moreButton = menu.querySelector(Selectors.regions.morebutton);\n    const dropdownToggle = menu.querySelector(Selectors.attributes.dropdowntoggle);\n    const navLink = navNode.querySelector('.' + Selectors.classes.dropdownitem);\n\n    // If the more menu is rendered as a tab list,\n    // this will become a tab instead of a menuitem when moved out of the more menu dropdown.\n    if (isTabListMenu) {\n        navLink.setAttribute('role', 'tab');\n    }\n\n    // Stop displaying the active state on the dropdownToggle if\n    // the active navlink is removed.\n    if (navLink.classList.contains(Selectors.classes.active)) {\n        dropdownToggle.classList.remove(Selectors.classes.active);\n        if (isTabListMenu) {\n            // Replace aria selection state when necessary.\n            navLink.removeAttribute('aria-current');\n            navLink.setAttribute('aria-selected', 'true');\n        }\n    }\n    navLink.classList.remove(Selectors.classes.dropdownitem);\n    navLink.classList.add(Selectors.classes.navlink);\n    menu.insertBefore(navNode, moreButton);\n};\n\n/**\n * Initialise the more menus.\n *\n * @param {HTMLElement} menu The navbar moremenu.\n */\nexport default menu => {\n    isTabListMenu = menu.getAttribute('role') === 'tablist';\n\n    // Select the first menu item if there's nothing initially selected.\n    const hash = window.location.hash;\n    if (!hash) {\n        const itemRole = isTabListMenu ? 'tab' : 'menuitem';\n        const menuListItem = menu.firstElementChild;\n        const roleSelector = `[role=${itemRole}]`;\n        const menuItem = menuListItem.querySelector(roleSelector);\n        menuItem.setAttribute('tabindex', '0');\n        if (itemRole === 'tab') {\n            // Select the tab element via aria-selected.\n            menuItem.setAttribute('aria-selected', 'true');\n        } else {\n            // Select the menuitem element via aria-current.\n            menuItem.setAttribute('aria-current', 'true');\n        }\n    }\n\n    // Pre-populate the \"more\" dropdown menu with navigation nodes which are set to be displayed in this menu\n    // by default at all times.\n    if ('children' in menu) {\n        const moreButton = menu.querySelector(Selectors.regions.morebutton);\n        const menuNodes = Array.from(menu.children);\n        menuNodes.forEach((item) => {\n            if (!item.classList.contains(Selectors.classes.dropdownmoremenu) &&\n                    item.dataset.forceintomoremenu === 'true') {\n                // Append this node into the more dropdown menu.\n                moveIntoMoreDropdown(menu, item, false);\n                // After adding the node into the more dropdown menu, make sure that the more dropdown menu button\n                // is displayed.\n                if (moreButton.classList.contains(Selectors.classes.hidden)) {\n                    moreButton.classList.remove(Selectors.classes.hidden);\n                }\n            }\n        });\n    }\n    // Populate the more dropdown menu with additional nodes if necessary, depending on the current screen size.\n    autoCollapse(menu);\n    menu_navigation(menu);\n\n    // When the screen size changes make sure the menu still fits.\n    window.addEventListener('resize', () => {\n        autoCollapse(menu);\n        menu_navigation(menu);\n    });\n\n    const toggledropdown = e => {\n        const innerMenu = e.target.parentNode.querySelector(Selectors.attributes.menu);\n        if (innerMenu) {\n            innerMenu.classList.toggle('show');\n        }\n        e.stopPropagation();\n    };\n\n    // If there are dropdowns in the MoreMenu, add a new\n    // event listener to show the contents on click and prevent the\n    // moreMenu from closing.\n    $('.' + Selectors.classes.dropdownmoremenu).on('show.bs.dropdown', function() {\n        const moreDropdown = menu.querySelector(Selectors.regions.moredropdown);\n        moreDropdown.querySelectorAll('.dropdown').forEach((dropdown) => {\n            dropdown.removeEventListener('click', toggledropdown, true);\n            dropdown.addEventListener('click', toggledropdown, true);\n        });\n    });\n};\n"],"file":"moremenu.min.js"}