{"version":3,"file":"rooms.min.js","sources":["../src/rooms.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JS actions for the rooms page for mod_bigbluebuttonbn.\n *\n * @module      mod_bigbluebuttonbn/rooms\n * @copyright   2021 Blindside Networks Inc\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport './actions';\nimport * as repository from './repository';\nimport * as roomUpdater from './roomupdater';\nimport {\n    exception as displayException,\n    fetchNotifications,\n} from 'core/notification';\n\nimport {eventTypes, notifyCurrentSessionEnded} from './events';\n\n/**\n * Init the room\n *\n * @param {Number} bigbluebuttonbnid bigblubeutton identifier\n * @param {Number} pollInterval poll interval in miliseconds\n */\nexport const init = (bigbluebuttonbnid, pollInterval) => {\n    const completionElement = document.querySelector('a[href*=completion_validate]');\n    if (completionElement) {\n        completionElement.addEventListener(\"click\", () => {\n            repository.completionValidate(bigbluebuttonbnid).catch(displayException);\n        });\n    }\n\n    document.addEventListener('click', e => {\n        const joinButton = e.target.closest('[data-action=\"join\"]');\n        if (joinButton) {\n            window.open(joinButton.href, 'bigbluebutton_conference');\n            e.preventDefault();\n            // Gives the user a bit of time to go into the meeting before polling the room.\n            setTimeout(() => {\n                roomUpdater.updateRoom(true);\n            }, pollInterval);\n        }\n    });\n\n    document.addEventListener(eventTypes.sessionEnded, () => {\n        roomUpdater.stop();\n        roomUpdater.updateRoom();\n        fetchNotifications();\n    });\n\n    window.addEventListener(eventTypes.currentSessionEnded, () => {\n        roomUpdater.stop();\n        roomUpdater.updateRoom();\n        fetchNotifications();\n    });\n    // Room update.\n    roomUpdater.start(pollInterval);\n};\n\n/**\n * Auto close child windows when clicking the End meeting button.\n * @param {Number} closeDelay time to wait in miliseconds before closing the window\n */\nexport const setupWindowAutoClose = (closeDelay = 2000) => {\n    notifyCurrentSessionEnded(window.opener);\n    window.addEventListener('onbeforeunload', () => {\n            window.opener.setTimeout(() => {\n                roomUpdater.updateRoom(true);\n            }, closeDelay);\n        },\n        {\n            once: true\n        });\n    window.close(); // This does not work as scripts can only close windows that are opened by themselves.\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","repository","roomUpdater","_exports","init","bigbluebuttonbnid","pollInterval","completionElement","document","querySelector","addEventListener","completionValidate","catch","displayException","e","joinButton","target","closest","window","open","href","preventDefault","setTimeout","updateRoom","eventTypes","sessionEnded","stop","fetchNotifications","currentSessionEnded","start","setupWindowAutoClose","closeDelay","notifyCurrentSessionEnded","opener","once","close"],"mappings":"6cAyB6C,SAAAA,yBAAAC,aAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,kBAAA,IAAAD,QAAAE,iBAAA,IAAAF,QAAA,OAAAF,yBAAA,SAAAC,aAAA,OAAAA,YAAAG,iBAAAD,iBAAA,GAAAF,YAAA,CAAA,SAAAI,wBAAAC,IAAAL,aAAA,IAAAA,aAAAK,KAAAA,IAAAC,WAAA,OAAAD,IAAA,GAAA,OAAAA,KAAA,WAAAE,QAAAF,MAAA,mBAAAA,IAAA,MAAA,CAAAG,QAAAH,KAAA,IAAAI,MAAAV,yBAAAC,aAAA,GAAAS,OAAAA,MAAAC,IAAAL,KAAA,OAAAI,MAAAE,IAAAN,KAAA,IAAAO,OAAA,CAAA,EAAAC,sBAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,OAAAZ,IAAA,GAAA,YAAAY,KAAAH,OAAAI,UAAAC,eAAAC,KAAAf,IAAAY,KAAA,CAAA,IAAAI,KAAAR,sBAAAC,OAAAE,yBAAAX,IAAAY,KAAA,KAAAI,OAAAA,KAAAV,KAAAU,KAAAC,KAAAR,OAAAC,eAAAH,OAAAK,IAAAI,MAAAT,OAAAK,KAAAZ,IAAAY,IAAA,CAAA,OAAAL,OAAAJ,QAAAH,IAAAI,OAAAA,MAAAa,IAAAjB,IAAAO,QAAAA,MAAA;;;;;;;gHAD7CW,WAAAnB,wBAAAmB,YACAC,YAAApB,wBAAAoB,aA+CEC,SAAAC,KAjCkB,SAACC,kBAAmBC,cACpC,IAAMC,kBAAoBC,SAASC,cAAc,gCAC7CF,mBACAA,kBAAkBG,iBAAiB,SAAS,WACxCT,WAAWU,mBAAmBN,mBAAmBO,MAAMC,cAAAA,UAC3D,IAGJL,SAASE,iBAAiB,SAAS,SAAAI,GAC/B,IAAMC,WAAaD,EAAEE,OAAOC,QAAQ,wBAChCF,aACAG,OAAOC,KAAKJ,WAAWK,KAAM,4BAC7BN,EAAEO,iBAEFC,YAAW,WACPpB,YAAYqB,YAAW,EAC1B,GAAEjB,cAEX,IAEAE,SAASE,iBAAiBc,mBAAWC,cAAc,WAC/CvB,YAAYwB,OACZxB,YAAYqB,cACZ,EAAAI,mCACJ,IAEAT,OAAOR,iBAAiBc,mBAAWI,qBAAqB,WACpD1B,YAAYwB,OACZxB,YAAYqB,cACZ,EAAAI,mCACJ,IAEAzB,YAAY2B,MAAMvB,eAkBpBH,SAAA2B,qBAXkC,WAAuB,IAAtBC,kEAAa,KAC9C,EAAAC,QAAyBA,2BAACd,OAAOe,QACjCf,OAAOR,iBAAiB,kBAAkB,WAClCQ,OAAOe,OAAOX,YAAW,WACrBpB,YAAYqB,YAAW,EAC1B,GAAEQ,WACP,GACA,CACIG,MAAM,IAEdhB,OAAOiB,QACT"}